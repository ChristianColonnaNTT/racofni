{
    "type": "Ext.app.Application",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "controllers": [
            "RicercaUsatoController",
            "MenuController",
            "MainController",
            "RicercaNuovoController",
            "RicercaStockController",
            "HomeController",
            "PhotoFullScreenController",
            "TopBarController"
        ],
        "loginPageUrl": "http://www.edidomus.it",
        "modalitaSviluppoFlag": "S",
        "models": [
            "AlimentazioneModel",
            "MarcaModel",
            "ModelloModel",
            "AllestimentoModel",
            "DettaglioVeicoloUsatoModel",
            "ProvenienzaModel",
            "DestinazioneModel",
            "ListinoModel",
            "LogicaModel",
            "DettaglioVeicoloNuovoModel",
            "EstremiPrezzoKmModel",
            "VeicoloStockModel",
            "CarrozzeriaModel",
            "AnnoImmatricolazioneModel",
            "OrdinamentoModel",
            "InfoVeicoloUsatoModel",
            "DatiTecniciModel",
            "InfoVeicoloNuovoModel",
            "InfoVeicoloStockModel",
            "UtenteModel",
            "ColoreEsternoModel",
            "ColoreInternoModel",
            "StringModel",
            "GraficoInfoVeicoloModel",
            "InformEquipDettVeicoloNuovoModel"
        ],
        "msgNessunModuloAbilitato": "Nessun modulo abilitato per questa utenza",
        "name": "Infocar",
        "patternsRicercaTarga": [
            "[",
            "    '\\\\b[a-zA-Z]{2}[0-9]{3}[a-zA-Z]{2}\\\\b',",
            "    '\\\\b[a-zA-Z]{2}[0-9]{2}[a-zA-Z]{1}[0-9]{3}\\\\b',",
            "    '\\\\b[a-zA-Z]{2}[0-9]{1}[a-zA-Z]{1}[0-9]{4}\\\\b',",
            "    '\\\\b[a-zA-Z]{3}[0-9]{5}\\\\b',",
            "    '\\\\b[a-zA-Z]{2}[0-9]{5}[a-zA-Z]{1}\\\\b',",
            "    '\\\\b[a-zA-Z]{2}[0-9]{6}\\\\b'",
            "]"
        ],
        "requires": [
            "Ext.Anim"
        ],
        "stampaEsitoVeicoloNuovoUrl": "/nuovo/StampaPreliminareRitiro",
        "stampaEsitoVeicoloUsatoUrl": "/usato/StampaPreliminareRitiro",
        "stampaInfoVeicoloStockUrl": "/stock/StampaPreliminareRitiro",
        "stores": [
            "AlimentazioneRicercaUsatoStore",
            "ModelloRicercaUsatoStore",
            "EquipInfoVeicoloUsatoStore",
            "ProvenienzaStore",
            "DestinazioneStore",
            "ListinoStore",
            "LogicaStore",
            "CarrozzeriaRicercaUsatoStore",
            "AnnoImmatricolazioneStore",
            "OrdinamentoRicercaUsatoStore",
            "VeicoloStockStore",
            "EquipDettVeicoloUsatoStore",
            "DatiTecniciInfoVeicoloUsatoStore",
            "DatiTecniciInfoVeicoloNuovoStore",
            "EquipInfoVeicoloNuovoStore",
            "AlimentazioneRicercaNuovoStore",
            "AlimentazioneRicercaStockStore",
            "CarrozzeriaRicercaNuovoStore",
            "CarrozzeriaRicercaStockStore",
            "OrdinamentoRicercaNuovoStore",
            "OrdinamentoRicercaStockStore",
            "MarcaRicercaUsatoStore",
            "MarcaRicercaNuovoStore",
            "ModelloRicercaNuovoStore",
            "AllestimentoRicercaUsatoStore",
            "AllestimentoRicercaNuovoStore",
            "EquipSerieInfoVeicoloStockStore",
            "DatiTecniciInfoVeicoloStockStore",
            "EquipDettVeicoloNuovoStore",
            "EquipClustersDettVeicoloNuovoStore",
            "PopupEquipDettVeicoloNuovoStore",
            "ColoreEsternoDettVeicoloUsatoStore",
            "ColoreInternoDettVeicoloUsatoStore",
            "GraficoInfoVeicoloUsatoStore",
            "GraficoInfoVeicoloNuovoStore",
            "EquipSelAutomaticaDettVeicoloNuovoStore",
            "InformEquipDettVeicoloNuovoStore",
            "EquipMontatiInfoVeicoloStockStore"
        ],
        "syncDisabled": "S",
        "views": [
            "MainView",
            "MainMenuLeft",
            "EquipDettVeicoloNuovoListItem",
            "PhotoFullScreenPanel",
            "UsatoView",
            "NuovoView",
            "StockView",
            "HomeView",
            "TopBar"
        ]
    },
    "name": "Application",
    "configAlternates": {
        "patternsRicercaTarga": "array",
        "profiles": "object"
    },
    "designerId": "application",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "msgNessunModuloAbilitato",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "loginPageUrl",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "patternsRicercaTarga",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "utenteModel",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "dettaglioVeicoloNuovoModel",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "syncDisabled",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "modalitaSviluppoFlag",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "infoVeicoloStockModel",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "stampaEsitoVeicoloUsatoUrl",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "stampaEsitoVeicoloNuovoUrl",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "stampaInfoVeicoloStockUrl",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "launch",
                "implHandler": [
                    "Ext.Viewport.on('resize', this.onViewportOrientationResize, this, { buffer: 1});",
                    "",
                    "this.overrideObjects();",
                    "",
                    "this.checkModalitaSviluppo();",
                    "",
                    "Ext.create('Infocar.view.HomeView', {fullscreen: true});",
                    "",
                    "this.preloadViews();",
                    "",
                    "Infocar.app.localize();",
                    "",
                    "Ext.defer(Infocar.app.checkSession, 2 * 60 * 1000, this);",
                    "",
                    "// Carico da back-end le informazioni relative all'utente",
                    "Infocar.app.loadUtente();",
                    "",
                    "// Controllo l'orientamento del device in uso dall'utente e",
                    "// riadatto la disposizione dei componenti.",
                    "Infocar.app.checkOrientation();",
                    ""
                ]
            },
            "name": "launch",
            "designerId": "1fa1d487-0245-4eb8-90a2-7d198202a30d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "localize",
                "implHandler": [
                    "numeral.language('it', {",
                    "    delimiters:{thousands:\".\",decimal:\",\"},",
                    "    abbreviations:{thousand:\"mila\",million:\"mil\",billion:\"b\",trillion:\"t\"},",
                    "    ordinal:function(){return \"ยบ\";},",
                    "    currency:{symbol:\"&euro;\"}",
                    "});",
                    "",
                    "numeral.language('it');",
                    "",
                    "Ext.Date.monthNames = [",
                    "    'Gennaio',",
                    "    'Febbraio',",
                    "    'Marzo',",
                    "    'Aprile',",
                    "    'Maggio',",
                    "    'Giugno',",
                    "    'Luglio',",
                    "    'Agosto',",
                    "    'Settembre',",
                    "    'Ottobre',",
                    "    'Novembre',",
                    "    'Dicembre'",
                    "];",
                    "",
                    "",
                    "/*",
                    "Ext.override(Ext.MessageBox, {",
                    "    YES: {text: 'Si', itemId: 'yes', ui: 'action' },",
                    "    CANCEL: {text: 'Annulla', itemId: 'cancel' }",
                    "});",
                    "*/",
                    "/*",
                    "Ext.Msg.defaultAllowedConfig.buttons = [",
                    "            {text: 'Si', itemId: 'yes', ui: 'action'},",
                    "            {text: 'No',  itemId: 'no'}",
                    "        ];",
                    "*/",
                    "Ext.MessageBox.override({",
                    "    confirm: function(title, message, fn, scope) {",
                    "        return this.show({",
                    "            title       : title || null,",
                    "            message     : message || null,",
                    "            buttons     : [",
                    "                {text: 'Si', itemId: 'yes', ui: 'action'},",
                    "                {text: 'No', itemId: 'no'}",
                    "            ],",
                    "            promptConfig: false,",
                    "            scope       : scope,",
                    "            fn: function() {",
                    "                if (fn) {",
                    "                    fn.apply(scope, arguments);",
                    "                }",
                    "            }",
                    "        });",
                    "    }",
                    "});"
                ]
            },
            "name": "localize",
            "designerId": "a4db5a2f-e727-4cc2-83ea-42a4112d7675"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "currValue"
                ],
                "fn": "formatCurrency",
                "implHandler": [
                    "// I valori dei prezzi devono restituiti dal backend come stringhe",
                    "// gia' formattate con separatore dei decimali e delle migliaia.",
                    "//return numeral(currValue).format('0,0.00');",
                    "",
                    "return currValue;"
                ]
            },
            "name": "formatCurrency",
            "designerId": "45ac31f7-c68e-4f05-ada3-975bf494f2fc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "currValue"
                ],
                "fn": "formatCurrency2",
                "implHandler": [
                    "return numeral(currValue).format('0,0.00');"
                ]
            },
            "name": "formatCurrency2",
            "designerId": "11373caf-c28e-4187-a44e-705b10b340ef"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "intValue"
                ],
                "fn": "formatInt",
                "implHandler": [
                    "return numeral(intValue).format('0,0');"
                ]
            },
            "name": "formatInt",
            "designerId": "14c4b309-f4b3-488e-b5b2-958aa0233870"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "numValue",
                    "fmt"
                ],
                "fn": "formatNumber",
                "implHandler": [
                    "return numeral(numValue).format(fmt);"
                ]
            },
            "name": "formatNumber",
            "designerId": "797395d1-6509-4eed-b0b0-5a9f205bbde9"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showHome",
                "implHandler": [
                    "var homeCtrl = this.getController('Infocar.controller.HomeController');",
                    "",
                    "var homeView = homeCtrl.getView();",
                    "",
                    "Ext.Viewport.hideMenu('left');",
                    "",
                    "this.checkOrientation();",
                    "",
                    "//var mainView = Ext.ComponentQuery.query('#mainView')[0];",
                    "//mainView.setActiveItem('#homeContainer');",
                    "",
                    "//Ext.Viewport.setActiveItem(homeView);",
                    "Ext.Viewport.animateActiveItem(",
                    "    homeView,",
                    "    {",
                    "        type: 'slide',",
                    "        direction:'left'",
                    "    }",
                    ");",
                    ""
                ]
            },
            "name": "showHome",
            "designerId": "46adc2d6-b58c-4654-afc9-835502cd1eb4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showRicercaUsato",
                "implHandler": [
                    "var ricUsatoCtrl = this.getController('Infocar.controller.RicercaUsatoController');",
                    "",
                    "var usatoView = ricUsatoCtrl.getView();",
                    "",
                    "Ext.Viewport.hideMenu('left');",
                    "",
                    "//var mainView = Ext.ComponentQuery.query('#mainView')[0];",
                    "//mainView.setActiveItem('#mainContainer');",
                    "",
                    "//Ext.Viewport.setActiveItem(usatoView);",
                    "Ext.Viewport.animateActiveItem(",
                    "    usatoView,",
                    "    {",
                    "        type: 'slide',",
                    "        direction:'left'",
                    "    }",
                    ");",
                    "",
                    "var bodyContainer = Ext.ComponentQuery.query('#bodyUsatoContainer')[0];",
                    "bodyContainer.setActiveItem('#ricercaUsatoContainer');",
                    "",
                    "var ricUsatoRisultatoContainer = Ext.ComponentQuery.query('#ricercaUsatoRisultatoContainer')[0];",
                    "//ricUsatoRisultatoContainer.setActiveItem('#marcaRicUsatoRisultatoContainer');",
                    "ricUsatoRisultatoContainer.animateActiveItem(",
                    "    '#marcaRicUsatoRisultatoContainer',",
                    "    {",
                    "        type: 'slide',",
                    "        direction:'left',",
                    "    }",
                    ");",
                    "",
                    "this.checkOrientation();",
                    "",
                    "ricUsatoCtrl.resetRicerca();",
                    "",
                    "ricUsatoCtrl.loadMarche();",
                    ""
                ]
            },
            "name": "showRicercaUsato",
            "designerId": "9d4635ea-0d03-4e99-9c83-954b46c1e282"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showRicercaNuovo",
                "implHandler": [
                    "var ricNuovoCtrl = this.getController('Infocar.controller.RicercaNuovoController');",
                    "",
                    "var nuovoView = ricNuovoCtrl.getView();",
                    "",
                    "Ext.Viewport.hideMenu('left');",
                    "",
                    "//var mainView = Ext.ComponentQuery.query('#mainView')[0];",
                    "//mainView.setActiveItem('#mainContainer');",
                    "",
                    "//Ext.Viewport.setActiveItem(nuovoView);",
                    "Ext.Viewport.animateActiveItem(",
                    "    nuovoView,",
                    "    {",
                    "        type: 'slide',",
                    "        direction:'left'",
                    "    }",
                    ");",
                    "",
                    "var bodyContainer = Ext.ComponentQuery.query('#bodyNuovoContainer')[0];",
                    "bodyContainer.setActiveItem('#ricercaNuovoContainer');",
                    "",
                    "var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];",
                    "ricNuovoRisultatoContainer.animateActiveItem(",
                    "    '#marcaRicNuovoRisultatoContainer',",
                    "    {",
                    "        type: 'slide',",
                    "        direction:'left'",
                    "    }",
                    ");",
                    "",
                    "this.checkOrientation();",
                    "",
                    "ricNuovoCtrl.resetRicerca();",
                    "",
                    "ricNuovoCtrl.loadMarche();",
                    ""
                ]
            },
            "name": "showRicercaNuovo",
            "designerId": "1cdb300e-0673-4012-8192-262727ad5999"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showRicercaStock",
                "implHandler": [
                    "var ricStockCtrl = this.getController('Infocar.controller.RicercaStockController');",
                    "",
                    "var stockView = ricStockCtrl.getView();",
                    "",
                    "Ext.Viewport.hideMenu('left');",
                    "",
                    "//var mainView = Ext.ComponentQuery.query('#mainView')[0];",
                    "//mainView.setActiveItem('#mainContainer');",
                    "",
                    "//Ext.Viewport.setActiveItem(stockView);",
                    "Ext.Viewport.animateActiveItem(",
                    "    stockView,",
                    "    {",
                    "        type: 'slide',",
                    "        direction:'left'",
                    "    }",
                    ");",
                    "",
                    "var bodyContainer = Ext.ComponentQuery.query('#bodyStockContainer')[0];",
                    "bodyContainer.setActiveItem('#ricercaStockContainer');",
                    "",
                    "var ricStockRisultatoContainer = Ext.ComponentQuery.query('#ricercaStockRisultatoContainer')[0];",
                    "ricStockRisultatoContainer.animateActiveItem(",
                    "    '#veicoloRicStockRisultatoContainer',",
                    "    {",
                    "        type: 'slide',",
                    "        direction:'left'",
                    "    }",
                    ");",
                    "",
                    "ricStockCtrl.resetRicerca();",
                    "",
                    "this.checkOrientation();",
                    "",
                    "ricStockCtrl.loadVeicoliStock(false);",
                    ""
                ]
            },
            "name": "showRicercaStock",
            "designerId": "d8843f4d-6b26-46db-a18c-7f3eef58863c"
        },
        {
            "type": "Ext.Viewport",
            "reference": {
                "name": "viewport",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "itemId": "viewport"
            },
            "name": "Viewport",
            "designerId": "cc682be6-4ab3-47c4-bd7b-277a9c061bbd"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "orientationLandscape",
                "implHandler": [
                    "// DEBUG",
                    "//console.log('Orientation: landscape');",
                    "",
                    "// Dettaglio veicolo usato",
                    "var testataPortrait = Ext.ComponentQuery.query('#testataDettVeicoloUsatoContainerPortrait')[0];",
                    "var testataLandscape = Ext.ComponentQuery.query('#testataDettVeicoloUsatoContainerLandscape')[0];",
                    "//var dettaglioVeicoloUsatoContainer = Ext.ComponentQuery.query('#dettaglioVeicoloUsatoContainer')[0];",
                    "",
                    "if (testataPortrait) testataPortrait.setHidden(true);",
                    "if (testataLandscape) testataLandscape.setHidden(false);",
                    "",
                    "// Info veicolo usato",
                    "testataPortrait = Ext.ComponentQuery.query('#testataInfoVeicoloUsatoContainerPortrait')[0];",
                    "testataLandscape = Ext.ComponentQuery.query('#testataInfoVeicoloUsatoContainerLandscape')[0];",
                    "",
                    "if (testataPortrait) testataPortrait.setHidden(true);",
                    "if (testataLandscape) testataLandscape.setHidden(false);",
                    "",
                    "// Dettaglio veicolo nuovo",
                    "testataPortrait = Ext.ComponentQuery.query('#testataDettVeicoloNuovoContainerPortrait')[0];",
                    "testataLandscape = Ext.ComponentQuery.query('#testataDettVeicoloNuovoContainerLandscape')[0];",
                    "",
                    "if (testataPortrait) testataPortrait.setHidden(true);",
                    "if (testataLandscape) testataLandscape.setHidden(false);",
                    "",
                    "var photoFullscreenCtrl = this.getController('Infocar.controller.PhotoFullScreenController');",
                    "photoFullscreenCtrl.adjustScalePhotoCarousel();",
                    "",
                    "",
                    "// Riposiziono la linguetta dei prezzi nella scherma info veicolo stock",
                    "var ricercaStockCtrl = this.getController('Infocar.controller.RicercaStockController');",
                    "ricercaStockCtrl.initPrezziOverlay();",
                    ""
                ]
            },
            "name": "orientationLandscape",
            "designerId": "2d3b08e6-e316-4f74-a788-fc81077f0bde"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "orientationPortrait",
                "implHandler": [
                    "// DEBUG",
                    "//console.log('Orientation: portrait');",
                    "",
                    "// Dettaglio veicolo usato",
                    "var testataPortrait = Ext.ComponentQuery.query('#testataDettVeicoloUsatoContainerPortrait')[0];",
                    "var testataLandscape = Ext.ComponentQuery.query('#testataDettVeicoloUsatoContainerLandscape')[0];",
                    "//var dettaglioVeicoloUsatoContainer = Ext.ComponentQuery.query('#dettaglioVeicoloUsatoContainer')[0];",
                    "",
                    "if (testataPortrait) testataPortrait.setHidden(false);",
                    "if (testataLandscape) testataLandscape.setHidden(true);",
                    "",
                    "// Info veicolo usato",
                    "testataPortrait = Ext.ComponentQuery.query('#testataInfoVeicoloUsatoContainerPortrait')[0];",
                    "testataLandscape = Ext.ComponentQuery.query('#testataInfoVeicoloUsatoContainerLandscape')[0];",
                    "",
                    "if (testataPortrait) testataPortrait.setHidden(false);",
                    "if (testataLandscape) testataLandscape.setHidden(true);",
                    "",
                    "// Dettaglio veicolo nuovo",
                    "var testataPortrait = Ext.ComponentQuery.query('#testataDettVeicoloNuovoContainerPortrait')[0];",
                    "var testataLandscape = Ext.ComponentQuery.query('#testataDettVeicoloNuovoContainerLandscape')[0];",
                    "",
                    "if (testataPortrait) testataPortrait.setHidden(false);",
                    "if (testataLandscape) testataLandscape.setHidden(true);",
                    "",
                    "var photoFullscreenCtrl = this.getController('Infocar.controller.PhotoFullScreenController');",
                    "photoFullscreenCtrl.adjustScalePhotoCarousel();",
                    "",
                    "// Riposiziono la linguetta dei prezzi nella scherma info veicolo stock",
                    "var ricercaStockCtrl = this.getController('Infocar.controller.RicercaStockController');",
                    "ricercaStockCtrl.initPrezziOverlay();",
                    ""
                ]
            },
            "name": "orientationPortrait",
            "designerId": "0b5ecb79-4021-4f7c-b9b1-0b1f8ef369ae"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "checkOrientation",
                "implHandler": [
                    "var height = Ext.Viewport.getWindowHeight();",
                    "var width = Ext.Viewport.getWindowWidth();",
                    "",
                    "if (width > height) {",
                    "    this.orientationLandscape();",
                    "} else {",
                    "    this.orientationPortrait();",
                    "}"
                ]
            },
            "name": "checkOrientation",
            "designerId": "71c6150d-3bfb-414f-8198-d44c32b92292"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "element",
                    "eOpts"
                ],
                "fn": "onViewportOrientationResize",
                "implHandler": [
                    "var heightViewport = Ext.Viewport.getWindowHeight();",
                    "var widthViewport = Ext.Viewport.getWindowWidth();",
                    "",
                    "//alert('Viewport: width['+ widthViewport +'] height['+ heightViewport +']');",
                    "",
                    "if (widthViewport > heightViewport) {",
                    "    this.orientationLandscape();",
                    "} else {",
                    "    this.orientationPortrait();",
                    "}",
                    ""
                ]
            },
            "name": "onViewportOrientationResize",
            "designerId": "ea84533b-e9de-4ac5-a4a5-51db5802e65d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadUtente",
                "implHandler": [
                    "var utenteModel = Ext.ModelManager.getModel('Infocar.model.UtenteModel');",
                    "utenteModel.load(0, {",
                    "    scope: this,",
                    "    success: function(record, operation) {",
                    "        var responseData = Ext.decode(operation.getResponse().responseText,false);",
                    "",
                    "        if(responseData.message !== null){",
                    "            Ext.Msg.alert(\"Attenzione\", responseData.message);",
                    "        }",
                    "",
                    "        // Memorizzo i dati dell'utente in una variabile globale",
                    "        var utenteData = record;",
                    "        Infocar.app.utenteModel = utenteData;",
                    "",
                    "        var welcomeLabel = Ext.ComponentQuery.query('#welcomeHomeLabel')[0];",
                    "        welcomeLabel.setData(utenteData.getData());",
                    "",
                    "        // Abilito/Disabilito i moduli Usato/Nuovo/Stock in base",
                    "        // alle informazioni presenti nel model utente.",
                    "        var messageHomeLabel = Ext.ComponentQuery.query('#messageHomeLabel')[0];",
                    "",
                    "        var ricUsatoMenuLeftButton = Ext.ComponentQuery.query('#ricercaUsatoMenuLeftButton')[0];",
                    "        var ricNuovoMenuLeftButton = Ext.ComponentQuery.query('#ricercaNuovoMenuLeftButton')[0];",
                    "        var ricStockMenuLeftButton = Ext.ComponentQuery.query('#ricercaStockMenuLeftButton')[0];",
                    "",
                    "        var ricUsatoHomeButton = Ext.ComponentQuery.query('#ricercaUsatoHomeButton')[0];",
                    "        var ricNuovoHomeButton = Ext.ComponentQuery.query('#ricercaNuovoHomeButton')[0];",
                    "        var ricStockHomeButton = Ext.ComponentQuery.query('#ricercaStockHomeButton')[0];",
                    "        var homeButtonsSpacer1 = Ext.ComponentQuery.query('#homeButtonsSpacer1')[0];",
                    "        var homeButtonsSpacer2 = Ext.ComponentQuery.query('#homeButtonsSpacer2')[0];",
                    "",
                    "        var ricNuovoEsitoVeicoloUsatoButton = Ext.ComponentQuery.query('#ricercaNuovoEsitoVeicoloUsatoButton')[0];",
                    "        var ricStockEsitoVeicoloUsatoButton = Ext.ComponentQuery.query('#ricercaStockEsitoVeicoloUsatoButton')[0];",
                    "",
                    "        var ricUsatoEsitoVeicoloNuovoButton = Ext.ComponentQuery.query('#ricercaUsatoEsitoVeicoloNuovoButton')[0];",
                    "        var ricStockEsitoVeicoloNuovoButton = Ext.ComponentQuery.query('#ricercaStockEsitoVeicoloNuovoButton')[0];",
                    "",
                    "        var coloreLiberoDettVeicoloUsatoContainer = Ext.ComponentQuery.query('#coloreLiberoDettVeicoloUsatoContainer')[0];",
                    "",
                    "        if (record.get('moduloUsatoFlag') === 'N' &&",
                    "            utenteData.get('moduloNuovoFlag') === 'N' &&",
                    "            utenteData.get('moduloStockFlag') === 'N')",
                    "        {",
                    "            messageHomeLabel.setHtml(Infocar.app.msgNessunModuloAbilitato);",
                    "            messageHomeLabel.setHidden(false);",
                    "        } else {",
                    "            messageHomeLabel.setHidden(true);",
                    "        }",
                    "",
                    "        if (utenteData.get('moduloUsatoFlag') === 'S') {",
                    "            ricUsatoMenuLeftButton.setHidden(false);",
                    "            ricUsatoMenuLeftButton.setText(utenteData.get('moduloUsatoMenuLabel'));",
                    "            ricUsatoHomeButton.setHidden(false);",
                    "            ricUsatoHomeButton.setText(utenteData.get('moduloUsatoMenuLabel'));",
                    "            ricUsatoEsitoVeicoloNuovoButton.setHidden(false);",
                    "            ricUsatoEsitoVeicoloNuovoButton.setText(utenteData.get('moduloUsatoMenuLabel'));",
                    "        } else {",
                    "            ricUsatoMenuLeftButton.setHidden(true);",
                    "            ricUsatoHomeButton.setHidden(true);",
                    "            homeButtonsSpacer1.setHidden(true);",
                    "            ricUsatoEsitoVeicoloNuovoButton.setHidden(true);",
                    "        }",
                    "",
                    "        if (utenteData.get('moduloNuovoFlag') === 'S') {",
                    "            ricNuovoMenuLeftButton.setHidden(false);",
                    "            ricNuovoMenuLeftButton.setText(utenteData.get('moduloNuovoMenuLabel'));",
                    "            ricNuovoHomeButton.setHidden(false);",
                    "            ricNuovoHomeButton.setText(utenteData.get('moduloNuovoMenuLabel'));",
                    "            ricNuovoEsitoVeicoloUsatoButton.setHidden(false);",
                    "            ricNuovoEsitoVeicoloUsatoButton.setText(utenteData.get('moduloNuovoMenuLabel'));",
                    "        } else {",
                    "            ricNuovoMenuLeftButton.setHidden(true);",
                    "            ricNuovoHomeButton.setHidden(true);",
                    "            homeButtonsSpacer2.setHidden(true);",
                    "            ricNuovoEsitoVeicoloUsatoButton.setHidden(true);",
                    "        }",
                    "",
                    "        if (utenteData.get('moduloStockFlag') === 'S') {",
                    "            ricStockMenuLeftButton.setHidden(false);",
                    "            ricStockMenuLeftButton.setText(utenteData.get('moduloStockMenuLabel'));",
                    "            ricStockHomeButton.setHidden(false);",
                    "            ricStockHomeButton.setText(utenteData.get('moduloStockMenuLabel'));",
                    "            ricStockEsitoVeicoloUsatoButton.setHidden(false);",
                    "            ricStockEsitoVeicoloUsatoButton.setText(utenteData.get('moduloStockMenuLabel'));",
                    "            ricStockEsitoVeicoloNuovoButton.setHidden(false);",
                    "            ricStockEsitoVeicoloNuovoButton.setText(utenteData.get('moduloStockMenuLabel'));",
                    "        } else {",
                    "            ricStockMenuLeftButton.setHidden(true);",
                    "            ricStockHomeButton.setHidden(true);",
                    "            homeButtonsSpacer2.setHidden(true);",
                    "            ricStockEsitoVeicoloUsatoButton.setHidden(true);",
                    "            ricStockEsitoVeicoloNuovoButton.setHidden(true);",
                    "        }",
                    "",
                    "",
                    "        var topBarCtrl = this.getController('Infocar.controller.TopBarController');",
                    "        topBarCtrl.topBarViewInitialize();",
                    "",
                    "",
                    "        /*",
                    "        if (utenteData.get('coloreVeicoloFlag') === 'S') {",
                    "            coloreLiberoDettVeicoloUsatoContainer.setHidden(false);",
                    "        } else {",
                    "            coloreLiberoDettVeicoloUsatoContainer.setHidden(true);",
                    "        }",
                    "        */",
                    "    },",
                    "    failure: function(record, operation) {",
                    "        this.showLoadErrorMessage(operation);",
                    "    }",
                    "});"
                ]
            },
            "name": "loadUtente",
            "designerId": "9cc33ceb-2fd2-4458-b888-45fc27192627"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "operation"
                ],
                "fn": "showLoadErrorMessage",
                "implHandler": [
                    "var msgError = null;",
                    "",
                    "if (operation.getResponse() && operation.getResponse().responseText) {",
                    "    var responseData = Ext.decode(operation.getResponse().responseText,false);",
                    "    if(responseData.message !== null) {",
                    "        msgError = responseData.message;",
                    "    }",
                    "}",
                    "",
                    "if(msgError !== null){",
                    "    Ext.Msg.alert(\"Errore\", msgError);",
                    "} else {",
                    "    Ext.Msg.alert(\"Errore\", operation.getError().statusText);",
                    "}\t"
                ]
            },
            "name": "showLoadErrorMessage",
            "designerId": "d13700a0-5e80-44b1-b37d-ce01acd23394"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "response",
                    "operation"
                ],
                "fn": "showSyncErrorMessage",
                "implHandler": [
                    "var msgError = null;",
                    "",
                    "var myResponse = operation.getResponse() || response;",
                    "",
                    "if (myResponse && myResponse.responseText) {",
                    "    var responseData = Ext.decode(myResponse.responseText,false);",
                    "    if(responseData.message !== null) {",
                    "        msgError = responseData.message;",
                    "    }",
                    "}",
                    "",
                    "if(msgError !== null){",
                    "    Ext.Msg.alert(\"Errore\", msgError);",
                    "} else {",
                    "    Ext.Msg.alert(\"Errore\", operation.getError().statusText);",
                    "}"
                ]
            },
            "name": "showSyncErrorMessage",
            "designerId": "9d36f698-4389-4705-8c4c-74264ce70929"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "checkSession",
                "implHandler": [
                    "//DEBUG",
                    "//console.log('Check session');",
                    "",
                    "var utenteModel = Ext.ModelManager.getModel('Infocar.model.UtenteModel');",
                    "utenteModel.load(0, {",
                    "    scope: this,",
                    "    success: function(record, operation) {",
                    "        Ext.defer(Infocar.app.checkSession, 2 * 60 * 1000, this);",
                    "    },",
                    "    failure: function(record, operation) {",
                    "        Ext.Msg.alert('Attenzione',",
                    "                      'La sessione รจ scaduta.<br>Premere \"OK\" per tornare alla pagina di login.',",
                    "                      function (buttonId, value, opt) {",
                    "                        window.location = Infocar.app.loginPageUrl;",
                    "                      }",
                    "        );",
                    "    }",
                    "});",
                    "",
                    ""
                ]
            },
            "name": "checkSession",
            "designerId": "2712b345-fae6-41ad-8619-658ec3f79c16"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "overrideObjects",
                "implHandler": [
                    "Ext.override(Ext.data.Store, {",
                    "//    syncWithListener:  function(onWriteComplete, onWriteException, syncMethod) {",
                    "    syncWithListener:  function(options) {",
                    "",
                    "        // DEBUG",
                    "        //console.log(\"Infocar.app.syncDisabled: [\"+ Infocar.app.syncDisabled +\"]\");",
                    "",
                    "",
                    "        if (Infocar.app.syncDisabled === 'S') {",
                    "",
                    "            if (options.success) {",
                    "                var scopeSuccess = options.scope || this;",
                    "                options.success.apply(scopeSuccess, [",
                    "                    this,",
                    "                    {",
                    "                        getResponse: function () {",
                    "                            return { responseText: '{ \"message\": \"Sync disabilitata\"}' };",
                    "                        }",
                    "                    }]);",
                    "            }",
                    "",
                    "            return false;",
                    "        }",
                    "",
                    "        options = options || {};",
                    "        var extraParams = options.params || {};",
                    "",
                    "        if (options.success) {",
                    "            var scopeSuccess = options.scope || this;",
                    "            this.on('write', options.success, scopeSuccess, {single:true});",
                    "        }",
                    "",
                    "        var thisProxy = this.getProxy();",
                    "        if (options.failure) {",
                    "            var scopeFailure = options.scope || thisProxy;",
                    "            thisProxy.on('exception', options.failure, scopeFailure, {single:true});",
                    "        }",
                    "",
                    "        thisProxy.setExtraParams(extraParams);",
                    "",
                    "        var syncResult = options.syncMethod ? options.syncMethod.apply(this) : this.sync();",
                    "",
                    "        if (syncResult.added.length === 0 &&",
                    "            syncResult.updated.length === 0 &&",
                    "            syncResult.removed.length === 0) {",
                    "",
                    "            if (options.success) {",
                    "                this.removeListener('write', options.success, this, {single:true});",
                    "                options.success(this);",
                    "            }",
                    "        }",
                    "",
                    "        //thisProxy.removeListener('exception', options.failure, thisProxy, {single:true});",
                    "",
                    "        return syncResult;",
                    "    }",
                    "});",
                    "",
                    "",
                    "// Workaround per un baco di sencha touch in chiusura delle dialog box",
                    "Ext.Msg.defaultAllowedConfig.showAnimation = false;",
                    "",
                    "// Correzione baco della sync che per i record restituiti dal back-end",
                    "// si aspettava lo stesso ordine dei record inviati dal front-end.",
                    "Ext.override(Ext.data.Operation, {",
                    "    processUpdate: function(resultSet) {",
                    "        var updatedRecords = resultSet.getRecords(),",
                    "            currentRecords = this.getRecords(),",
                    "            ln = updatedRecords.length,",
                    "            i, currentRecord, updatedRecord;",
                    "",
                    "        for (i = 0; i < ln; i++) {",
                    "            updatedRecord = updatedRecords[i];",
                    "            //currentRecord = currentRecords[i];",
                    "",
                    "            if (updatedRecord.id === null && currentRecords.length == 1 && updatedRecords.length == 1) {",
                    "                currentRecord = currentRecords[i];",
                    "            } else {",
                    "                currentRecord = this.findCurrentRecord(updatedRecord.id);",
                    "            }",
                    "",
                    "            if (currentRecord) {",
                    "                this.updateRecord(currentRecord, updatedRecord);",
                    "            }",
                    "            else {",
                    "                Ext.Logger.warn('Unable to match the updated record that came back from the server.');",
                    "            }",
                    "        }",
                    "",
                    "        return true;",
                    "    }",
                    "});"
                ]
            },
            "name": "overrideObjects",
            "designerId": "8d47eb41-3001-4565-8ec4-d51fa332e961"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "checkModalitaSviluppo",
                "implHandler": [
                    "if (this.modalitaSviluppoFlag === 'S') {",
                    "",
                    "    var store;",
                    "    var model;",
                    "",
                    "    // Mockup Ricerca Usato",
                    "",
                    "    model = Ext.ModelManager.getModel('Infocar.model.UtenteModel');",
                    "    model.getProxy().setUrl('/mockup/utente.json');",
                    "",
                    "    store = Ext.data.StoreManager.lookup('MarcaRicercaUsatoStore');",
                    "    store.getProxy().setUrl('/mockup/marcaUsato.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('ModelloRicercaUsatoStore');",
                    "    store.getProxy().setUrl('/mockup/modelloUsato.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('AllestimentoRicercaUsatoStore');",
                    "    store.getProxy().setUrl('/mockup/allestimentoUsato.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    model = Ext.ModelManager.getModel('Infocar.model.DettaglioVeicoloUsatoModel');",
                    "    model.getProxy().setUrl('/mockup/dettaglioVeicoloUsato.json');",
                    "",
                    "    store = Ext.data.StoreManager.lookup('EquipDettVeicoloUsatoStore');",
                    "    store.getProxy().setUrl('/mockup/equipDettVeicoloUsato.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    model = Ext.ModelManager.getModel('Infocar.model.InfoVeicoloUsatoModel');",
                    "    model.getProxy().setUrl('/mockup/infoVeicoloUsato.json');",
                    "",
                    "    store = Ext.data.StoreManager.lookup('DatiTecniciInfoVeicoloUsatoStore');",
                    "    store.getProxy().setUrl('/mockup/datiTecniciVeicoloUsato.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('EquipInfoVeicoloUsatoStore');",
                    "    store.getProxy().setUrl('/mockup/equipInfoVeicoloUsato.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('AnnoImmatricolazioneStore');",
                    "    store.getProxy().setUrl('/mockup/annoImmatricolazione.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('CarrozzeriaRicercaUsatoStore');",
                    "    store.getProxy().setUrl('/mockup/carrozzeria.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('AlimentazioneRicercaUsatoStore');",
                    "    store.getProxy().setUrl('/mockup/alimentazione.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('OrdinamentoRicercaUsatoStore');",
                    "    store.getProxy().setUrl('/mockup/ordinamento.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('ColoreEsternoDettVeicoloUsatoStore');",
                    "    store.getProxy().setUrl('/mockup/colore.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('ColoreInternoDettVeicoloUsatoStore');",
                    "    store.getProxy().setUrl('/mockup/colore.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('ProvenienzaStore');",
                    "    store.getProxy().setUrl('/mockup/provenienza.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('DestinazioneStore');",
                    "    store.getProxy().setUrl('/mockup/destinazione.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('GraficoInfoVeicoloUsatoStore');",
                    "    store.getProxy().setUrl('/mockup/graficoInfoVeicoloUsato.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "",
                    "    // Mockup ricerca nuovo",
                    "",
                    "    store = Ext.data.StoreManager.lookup('MarcaRicercaNuovoStore');",
                    "    store.getProxy().setUrl('/mockup/nuovo/marcaNuovo.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('ModelloRicercaNuovoStore');",
                    "    store.getProxy().setUrl('/mockup/nuovo/modelloNuovo.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('AllestimentoRicercaNuovoStore');",
                    "    store.getProxy().setUrl('/mockup/nuovo/allestimentoNuovo.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    model = Ext.ModelManager.getModel('Infocar.model.DettaglioVeicoloNuovoModel');",
                    "    model.getProxy().setUrl('/mockup/nuovo/dettaglioVeicoloNuovo.json');",
                    "",
                    "    store = Ext.data.StoreManager.lookup('EquipDettVeicoloNuovoStore');",
                    "    store.getProxy().setUrl('/mockup/nuovo/equipDettVeicoloNuovo.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    model = Ext.ModelManager.getModel('Infocar.model.InfoVeicoloNuovoModel');",
                    "    model.getProxy().setUrl('/mockup/nuovo/infoVeicoloNuovo.json');",
                    "",
                    "    store = Ext.data.StoreManager.lookup('DatiTecniciInfoVeicoloNuovoStore');",
                    "    store.getProxy().setUrl('/mockup/nuovo/datiTecniciVeicoloNuovo.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('EquipInfoVeicoloNuovoStore');",
                    "    store.getProxy().setUrl('/mockup/nuovo/equipInfoVeicoloNuovo.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('ListinoStore');",
                    "    store.getProxy().setUrl('/mockup/nuovo/listino.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('CarrozzeriaRicercaNuovoStore');",
                    "    store.getProxy().setUrl('/mockup/carrozzeria.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('AlimentazioneRicercaNuovoStore');",
                    "    store.getProxy().setUrl('/mockup/alimentazione.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('OrdinamentoRicercaNuovoStore');",
                    "    store.getProxy().setUrl('/mockup/ordinamento.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('LogicaStore');",
                    "    store.getProxy().setUrl('/mockup/nuovo/logica.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('GraficoInfoVeicoloNuovoStore');",
                    "    store.getProxy().setUrl('/mockup/nuovo/graficoInfoVeicoloNuovo.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('InformEquipDettVeicoloNuovoStore');",
                    "    store.getProxy().setUrl('/mockup/nuovo/informEquipDettVeicoloNuovo.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "",
                    "    // Mockup ricerca stock",
                    "    store = Ext.data.StoreManager.lookup('VeicoloStockStore');",
                    "    store.getProxy().setUrl('/mockup/stock/veicoloStock.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    model = Ext.ModelManager.getModel('Infocar.model.InfoVeicoloStockModel');",
                    "    model.getProxy().setUrl('/mockup/stock/infoVeicoloStock.json');",
                    "",
                    "    store = Ext.data.StoreManager.lookup('DatiTecniciInfoVeicoloStockStore');",
                    "    store.getProxy().setUrl('/mockup/stock/datiTecniciVeicoloStock.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('EquipSerieInfoVeicoloStockStore');",
                    "    store.getProxy().setUrl('/mockup/stock/equipSerieInfoVeicoloStock.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('EquipMontatiInfoVeicoloStockStore');",
                    "    store.getProxy().setUrl('/mockup/stock/equipMontatiInfoVeicoloStock.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    model = Ext.ModelManager.getModel('Infocar.model.EstremiPrezzoKmModel');",
                    "    model.getProxy().setUrl('/mockup/stock/estremiPrezzoKm.json');",
                    "",
                    "    store = Ext.data.StoreManager.lookup('CarrozzeriaRicercaStockStore');",
                    "    store.getProxy().setUrl('/mockup/carrozzeria.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('AlimentazioneRicercaStockStore');",
                    "    store.getProxy().setUrl('/mockup/alimentazione.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "    store = Ext.data.StoreManager.lookup('OrdinamentoRicercaStockStore');",
                    "    store.getProxy().setUrl('/mockup/ordinamento.json');",
                    "    if (store.getAutoLoad())  store.load();",
                    "",
                    "}"
                ]
            },
            "name": "checkModalitaSviluppo",
            "designerId": "8805fab2-524f-4162-858c-132c49b79240"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "preloadViews",
                "implHandler": [
                    "var ricUsatoCtrl = this.getController('Infocar.controller.RicercaUsatoController');",
                    "var usatoView = ricUsatoCtrl.getView();",
                    "",
                    "var ricNuovoCtrl = this.getController('Infocar.controller.RicercaNuovoController');",
                    "var nuovoView = ricNuovoCtrl.getView();",
                    "",
                    "var ricStockCtrl = this.getController('Infocar.controller.RicercaStockController');",
                    "var stockView = ricStockCtrl.getView();",
                    ""
                ]
            },
            "name": "preloadViews",
            "designerId": "fa39f8d4-c22b-4991-acfd-e181ccb518df"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showMask",
                "implHandler": [
                    "Ext.Viewport.setMasked({",
                    "    xtype: 'loadmask',",
                    "    message: 'Loading...'",
                    "});",
                    ""
                ]
            },
            "name": "showMask",
            "designerId": "0f8af996-d583-4c7b-8e57-a50ef17f0061"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "hideMask",
                "implHandler": [
                    "Ext.Viewport.setMasked(false);"
                ]
            },
            "name": "hideMask",
            "designerId": "82873db3-1fff-4fff-a5a8-5528d71bfe24"
        }
    ]
}