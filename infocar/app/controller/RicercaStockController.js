/*
 * File: app/controller/RicercaStockController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Infocar.controller.RicercaStockController', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            stockView: {
                autoCreate: true,
                selector: 'container#stockView',
                xtype: 'StockView'
            }
        },

        control: {
            "sliderfield#prezzoMinMaxRicercaStockSlider": {
                change: 'onPrezzoMinMaxSliderChange'
            },
            "sliderfield#kmMinMaxRicercaStockSlider": {
                change: 'onKmMinMaxSliderChange'
            },
            "button#cercaRicStockButton": {
                tap: 'onCercaButtonTap'
            },
            "dataview#veicoloRicStockRisultatoDataView": {
                itemtap: 'onVeicoloRisultatoItemTap'
            },
            "button#indietroInfoVeicoloStockButton": {
                tap: 'onIndietroInfoVeicoloButtonTap'
            },
            "button#equipInfoVeicoloStockButton": {
                tap: 'onEquipInfoVeicoloButtonTap'
            },
            "button#datiTecniciInfoVeicoloStockButton": {
                tap: 'onDatiTecniciInfoVeicoloButtonTap'
            },
            "selectfield#ordinamentoRicStockComboBox": {
                change: 'onOrdinamentoRicercaComboboxChange'
            },
            "container#stockView": {
                initialize: 'onStockViewInitialize'
            },
            "container#bodyStockContainer": {
                activeitemchange: 'onBodyContainerActiveItemChange'
            },
            "togglefield#stockUsatoRicercaStockToggle": {
                change: 'onStockUsatoToggleChange'
            },
            "container#infoVeicoloStockCarousel image": {
                tap: 'onInfoVeicoloImageTap'
            },
            "button#frecciaPrezziInfoVeicoloStockButton": {
                tap: 'onFrecciaPrezziInfoVeicoloButtonTap'
            },
            "button#stampaInfoVeicoloStockButton": {
                tap: 'onStampaInfoVeicloButtonTap'
            }
        }
    },

    onPrezzoMinMaxSliderChange: function(me, sl, thumb, newValue, oldValue, eOpts) {
        var aryValues = sl.getValue();
        var minPrezzo = aryValues[0];
        var maxPrezzo = aryValues[1];

        var prezzoMinHiddenField = Ext.ComponentQuery.query('#prezzoMinRicercaStockHiddenField')[0];
        var prezzoMaxHiddenField = Ext.ComponentQuery.query('#prezzoMaxRicercaStockHiddenField')[0];

        prezzoMinHiddenField.setValue(minPrezzo);
        prezzoMaxHiddenField.setValue(maxPrezzo);

        var prezzoMinLabel = Ext.ComponentQuery.query('#prezzoMinRicercaStockLabel')[0];
        var prezzoMaxLabel = Ext.ComponentQuery.query('#prezzoMaxRicercaStockLabel')[0];

        prezzoMinLabel.setData({prezzo: minPrezzo});
        prezzoMaxLabel.setData({prezzo: maxPrezzo});
    },

    onKmMinMaxSliderChange: function(me, sl, thumb, newValue, oldValue, eOpts) {
        var aryValues = sl.getValue();
        var minKm = aryValues[0];
        var maxKm = aryValues[1];

        var kmMinHiddenField = Ext.ComponentQuery.query('#kmMinRicercaStockHiddenField')[0];
        var kmMaxHiddenField = Ext.ComponentQuery.query('#kmMaxRicercaStockHiddenField')[0];

        kmMinHiddenField.setValue(minKm);
        kmMaxHiddenField.setValue(maxKm);

        var kmMinLabel = Ext.ComponentQuery.query('#kmMinRicercaStockLabel')[0];
        var kmMaxLabel = Ext.ComponentQuery.query('#kmMaxRicercaStockLabel')[0];

        kmMinLabel.setData({km: minKm});
        kmMaxLabel.setData({km: maxKm});
    },

    onCercaButtonTap: function(button, e, eOpts) {
        /*
        var veicoloStore = Ext.data.StoreManager.lookup('VeicoloStockStore');

        veicoloStore.load();

        var veicoloCount = veicoloStore.getCount();
        this.showVeicoloNumRisultati(veicoloCount);
        */

        this.loadVeicoliStock();

        button.setText('AGGIORNA RICERCA');
    },

    onVeicoloRisultatoItemTap: function(dataview, index, target, record, e, eOpts) {
        var veicoloModel = record;
        var veicoloCodice = veicoloModel.get('codice');


        var infoVeicoloModelClass = Ext.ModelManager.getModel('Infocar.model.InfoVeicoloStockModel');
        infoVeicoloModelClass.load(0, {
            params: {
                veicolo_codice: veicoloCodice
            },
            scope: this,
            success: function(record, operation) {
                var responseData = Ext.decode(operation.getResponse().responseText,false);

                if(responseData.message !== null){
                    Ext.Msg.alert("Attenzione", responseData.message);
                }

                var infoVeicoloModel = record;
                Infocar.app.infoVeicoloStockModel = infoVeicoloModel;

                this.loadDatiTecniciInfoVeicolo(veicoloCodice);

                this.loadEquipInfoVeicolo(veicoloCodice);

                //this.loadGraficoInfoVeicolo(veicoloCodice);


                // Dati di testata
                var infoVeicoloMiniImg = Ext.ComponentQuery.query('#infoVeicoloStockMiniImg');
                Ext.Array.each(infoVeicoloMiniImg, function(item, index, ary) {
                    item.setSrc(infoVeicoloModel.get('infoMiniUrlImg'));
                });

                var descLabel = Ext.ComponentQuery.query('#descInfoVeicoloStockLabel');
                Ext.Array.each(descLabel, function(item, index, ary) {
                    item.setData(infoVeicoloModel.getData());
                });

                // Dati del corpo
                var infoVeicoloImg1 = Ext.ComponentQuery.query('#infoVeicoloStockImg1')[0];
                infoVeicoloImg1.setSrc(infoVeicoloModel.get('infoUrlImg1'));

                var infoVeicoloImg2 = Ext.ComponentQuery.query('#infoVeicoloStockImg2')[0];
                infoVeicoloImg2.setSrc(infoVeicoloModel.get('infoUrlImg2'));

                var infoVeicoloImg3 = Ext.ComponentQuery.query('#infoVeicoloStockImg3')[0];
                infoVeicoloImg3.setSrc(infoVeicoloModel.get('infoUrlImg3'));

                var testoContainer = Ext.ComponentQuery.query('#testoinfoVeicoloStockContainer')[0];

                var testoLabel = Ext.ComponentQuery.query('#testoInfoVeicoloStockLabel')[0];
                testoLabel.setData(infoVeicoloModel.getData());

                var testoPrezziLabel = Ext.ComponentQuery.query('#testoPrezziInfoVeicoloStockLabel')[0];
                testoPrezziLabel.setData(infoVeicoloModel.getData());

                //var testoPrezziOverlayContainer = Ext.ComponentQuery.query('#prezziInfoVeicoloStockOverlayContainer')[0];
                //testoPrezziOverlayContainer.setLeft('40%');

                var statoUsoSchedaVeicoloLabel = Ext.ComponentQuery.query('#statoUsoSchedaInfoVeicoloStockLabel')[0];
                statoUsoSchedaVeicoloLabel.setData(infoVeicoloModel.getData());

                var infoAggiuntiveSchedaVeicoloLabel = Ext.ComponentQuery.query('#informAggiuntiveSchedaInfoVeicoloStockLabel')[0];
                infoAggiuntiveSchedaVeicoloLabel.setData(infoVeicoloModel.getData());

                var datiTecniciLabel = Ext.ComponentQuery.query('#sintesiDatiTecniciInfoVeicoloStockLabel')[0];
                datiTecniciLabel.setData(infoVeicoloModel.getData());

                //var equipLabel = Ext.ComponentQuery.query('#sintesiEquipInfoVeicoloStockLabel')[0];
                //equipLabel.setData({numEquip: equipCount});

                var datiPrevisiviLabel = Ext.ComponentQuery.query('#sintesiDatiPrevisiviInfoVeicoloStockLabel')[0];
                datiPrevisiviLabel.setData(infoVeicoloModel.getData());

                var datiStockLabel = Ext.ComponentQuery.query('#sintesiDatiStockInfoVeicoloStockLabel')[0];
                datiStockLabel.setData(infoVeicoloModel.getData());

                // Visualizzo la schermata generale info veicolo
                var bodyContainer = Ext.ComponentQuery.query('#bodyStockContainer')[0];

                bodyContainer.animateActiveItem(
                    '#infoVeicoloStockContainer',
                    {
                        type: 'slide',
                        direction:'left'
                    }
                );

                var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloStockContainer')[0];
                corpoInfoContainer.setActiveItem('#generaleInfoVeicoloStockContainer');

                var generaleInfoContainer = Ext.ComponentQuery.query('#generaleInfoVeicoloStockContainer')[0];
                if (generaleInfoContainer.isRendered()) {
                    generaleInfoContainer.getScrollable().getScroller().scrollTo(0, 0, false);
                }

                // Posiziono il container in overlay che visualizza il prezzo
                // alternativo ed il prezzo minimo di vendita.
                this.initPrezziOverlay();

            },
            failure: function(record, operation) {
                Infocar.app.showLoadErrorMessage(operation);
            }
        }, this);



    },

    onIndietroInfoVeicoloButtonTap: function(button, e, eOpts) {
        var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloStockContainer')[0];
        activeContainer = corpoInfoContainer.getActiveItem().getItemId();

        if (activeContainer === 'generaleInfoVeicoloStockContainer') {
            // Sono nella schermata generale info veicolo, torno al dettaglio
            var bodyContainer = Ext.ComponentQuery.query('#bodyStockContainer')[0];

            bodyContainer.animateActiveItem(
                '#ricercaStockContainer',
                {
                    type: 'slide',
                    direction:'right'
                }
            );
        } else {
            // Sono in una delle due schermate equipaggiamenti info veicolo oppure
            // dati tecnici info veicolo, torno alla schermata generale info veicolo.
            corpoInfoContainer.animateActiveItem(
                '#generaleInfoVeicoloStockContainer',
                {
                    type: 'slide',
                    direction:'right'
                }
            );
        }
    },

    onEquipInfoVeicoloButtonTap: function(button, e, eOpts) {
        var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloStockContainer')[0];

        corpoInfoContainer.animateActiveItem(
            '#equipInfoVeicoloStockContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );

    },

    onDatiTecniciInfoVeicoloButtonTap: function(button, e, eOpts) {
        var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloStockContainer')[0];

        corpoInfoContainer.animateActiveItem(
            '#datiTecniciInfoVeicoloStockContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );
    },

    onOrdinamentoRicercaComboboxChange: function(selectfield, newValue, oldValue, eOpts) {
        this.loadVeicoliStock();

    },

    onStockViewInitialize: function(component, eOpts) {
        var view = component;

        //var ricStockCtrl = this.getController('Infocar.controller.RicercaStockController');

        this.setCustomProperties();

        this.initTitoloTopBar(view);

        //this.initPrezziOverlay();

        //this.loadEstremiPrezzoKm();

    },

    onBodyContainerActiveItemChange: function(container, value, oldValue, eOpts) {
        var item = value;

        var topBarCtrl = this.getApplication().getController('Infocar.controller.TopBarController');
        topBarCtrl.setTitoloFromContainer(container, item);
    },

    onStockUsatoToggleChange: function(togglefield, newValue, oldValue, eOpts) {
        var stockUsatoHiddenField = Ext.ComponentQuery.query('#stockUsatoRicercaStockHiddenField')[0];
        var stockUsatoValue = newValue ? 'U' : 'S';
        stockUsatoHiddenField.setValue(stockUsatoValue);

    },

    onInfoVeicoloImageTap: function(image, e, eOpts) {
        var infoVeicoloCarousel = Ext.ComponentQuery.query('#infoVeicoloStockCarousel')[0];
        var infoVeicoloCarouselItemIdx = infoVeicoloCarousel.getActiveIndex();

        var infoVeicoloModel = Infocar.app.infoVeicoloStockModel;

        //var carouselItems = infoVeicoloCarousel.child('image');
        var carouselImagesSrc = [
            infoVeicoloModel.get('infoUrlImg1'),
            infoVeicoloModel.get('infoUrlImg2'),
            infoVeicoloModel.get('infoUrlImg3')
        ];

        /*
        for(i=0, len=carouselItems.length; i<len; i++) {
            carouselImagesSrc.push(carouselItems[i].getSrc());
        }
        */

        var photoFullScreenCtrl = Infocar.app.getController('Infocar.controller.PhotoFullScreenController');
        photoFullScreenCtrl.showPhotoFullScreen(carouselImagesSrc, infoVeicoloCarouselItemIdx);

    },

    onFrecciaPrezziInfoVeicoloButtonTap: function(button, e, eOpts) {
        var prezziOverlayContainer = button.up('#prezziInfoVeicoloStockOverlayContainer');
        var prezziOverlayCntElement = prezziOverlayContainer.element;
        var prezziContainerWitdh = prezziOverlayCntElement.getWidth();

        var frecciaPrezziStockButton = button;
        var frecciaPrezziStockBtnElement = frecciaPrezziStockButton.element;
        var frecciaButtonWidth = frecciaPrezziStockBtnElement.getWidth();

        /*
        Ext.Anim.run(prezziOverlayElement, 'slide', {
            out: false,
            autoClear: false,
            from: {
                right: '-92%'
            },
            to: {
                right: '0%'
            }
        });
        */

        if (!this.statoPrezziInfoVeicoloStockOverlayContainer ||
            this.statoPrezziInfoVeicoloStockOverlayContainer === 'CHIUSO') {

            Ext.Animator.run({
                element: prezziOverlayCntElement,
                duration: 500,
                preserveEndState: true,
                from: {
                    left: prezziContainerWitdh - frecciaButtonWidth
                },
                to: {
                    left: 0
                }
            });

            this.statoPrezziInfoVeicoloStockOverlayContainer = 'APERTO';

        } else {

            Ext.Animator.run({
                element: prezziOverlayCntElement,
                duration: 500,
                preserveEndState: true,
                from: {
                    left: 0
                },
                to: {
                    left: prezziContainerWitdh - frecciaButtonWidth
                }
            });

            this.statoPrezziInfoVeicoloStockOverlayContainer = 'CHIUSO';
        }

    },

    onStampaInfoVeicloButtonTap: function(button, e, eOpts) {
        var urlStampa = Infocar.app.stampaInfoVeicoloStockUrl;

        window.open(urlStampa, "stampa", "width=600,height=600,location=no");
    },

    showVeicoloNumRisultati: function(numRisultati) {
        var veicoloNumRisultatiLabel = Ext.ComponentQuery.query('#veicoloRicStockNumRisultatiLabel')[0];
        veicoloNumRisultatiLabel.setHtml(numRisultati + ' Veicoli');
    },

    loadVeicoliStock: function() {
        var veicoloStore = Ext.data.StoreManager.lookup('VeicoloStockStore');

        var ricercaForm = Ext.ComponentQuery.query('#ricercaStockForm')[0];

        // Leggo il codice del criterio di ordinamento
        var ordinamentoCombobox = Ext.ComponentQuery.query('#ordinamentoRicStockComboBox')[0];
        var ordinamentoCodice = ordinamentoCombobox.getValue();

        veicoloStore.load({
            params: Ext.Object.merge(
                {
                    ordinamento_codice: ordinamentoCodice
                },
                ricercaForm.getValues()
            ),
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    var veicoloCount = veicoloStore.getCount();
                    this.showVeicoloNumRisultati(veicoloCount);
                }
            },
            scope: this
        });

    },

    loadEstremiPrezzoKmAndVeicoliStock: function() {
        var estremiPrezzoKmModelClass = Ext.ModelManager.getModel('Infocar.model.EstremiPrezzoKmModel');

        estremiPrezzoKmModelClass.load(0, {
            scope: this,
            success: function(record, operation) {
                var responseData = Ext.decode(operation.getResponse().responseText,false);

                if(responseData.message !== null){
                    Ext.Msg.alert("Attenzione", responseData.message);
                }

                var estremiPrezzoKmModel = record;

                var prezzoMinMaxSlider = Ext.ComponentQuery.query('#prezzoMinMaxRicercaStockSlider')[0];
                var kmMinMaxSlider = Ext.ComponentQuery.query('#kmMinMaxRicercaStockSlider')[0];

                prezzoMinMaxSlider.setMaxValue(estremiPrezzoKmModel.get('maxPrezzo'));
                prezzoMinMaxSlider.setMinValue(estremiPrezzoKmModel.get('minPrezzo'));
                prezzoMinMaxSlider.setValue([
                    estremiPrezzoKmModel.get('minPrezzo'),
                    estremiPrezzoKmModel.get('maxPrezzo')
                ]);

                kmMinMaxSlider.setMaxValue(estremiPrezzoKmModel.get('maxKm'));
                kmMinMaxSlider.setMinValue(estremiPrezzoKmModel.get('minKm'));
                kmMinMaxSlider.setValue([
                    estremiPrezzoKmModel.get('minKm'),
                    estremiPrezzoKmModel.get('maxKm')
                ]);

                var prezzoMinHiddenField = Ext.ComponentQuery.query('#prezzoMinRicercaStockHiddenField')[0];
                var prezzoMaxHiddenField = Ext.ComponentQuery.query('#prezzoMaxRicercaStockHiddenField')[0];
                var kmMinHiddenField = Ext.ComponentQuery.query('#kmMinRicercaStockHiddenField')[0];
                var kmMaxHiddenField = Ext.ComponentQuery.query('#kmMaxRicercaStockHiddenField')[0];

                prezzoMinHiddenField.setValue(estremiPrezzoKmModel.get('minPrezzo'));
                prezzoMaxHiddenField.setValue(estremiPrezzoKmModel.get('maxPrezzo'));
                kmMinHiddenField.setValue(estremiPrezzoKmModel.get('minKm'));
                kmMaxHiddenField.setValue(estremiPrezzoKmModel.get('maxKm'));

                var prezzoMinLabel = Ext.ComponentQuery.query('#prezzoMinRicercaStockLabel')[0];
                var prezzoMaxLabel = Ext.ComponentQuery.query('#prezzoMaxRicercaStockLabel')[0];
                var kmMinLabel = Ext.ComponentQuery.query('#kmMinRicercaStockLabel')[0];
                var kmMaxLabel = Ext.ComponentQuery.query('#kmMaxRicercaStockLabel')[0];

                prezzoMinLabel.setData({prezzo: estremiPrezzoKmModel.get('minPrezzo')});
                prezzoMaxLabel.setData({prezzo: estremiPrezzoKmModel.get('maxPrezzo')});
                kmMinLabel.setData({km: estremiPrezzoKmModel.get('minKm')});
                kmMaxLabel.setData({km: estremiPrezzoKmModel.get('maxKm')});


                // DEBUG
                //alert('getSynchronous: '+ operation.getSynchronous() + ' kmMinMaxSlider:'+ kmMinMaxSlider.getValues()[0]);
                //var ricercaForm = Ext.ComponentQuery.query('#ricercaStockForm')[0];
                //console.log("Form values 1: "+ Ext.encode(ricercaForm.getValues()));

                this.loadVeicoliStock();
            },
            failure: function(record, operation) {
                Infocar.app.showLoadErrorMessage(operation);
            }
        }, this);

    },

    resetRicerca: function() {
        // Reset form
        var ricercaForm = Ext.ComponentQuery.query('#ricercaStockForm')[0];
        //ricercaForm.reset();

        var descRicercaField = Ext.ComponentQuery.query('#descrizioneRicercaStockField')[0];
        descRicercaField.reset();

        var stockUsatoRicToggle = Ext.ComponentQuery.query('#stockUsatoRicercaStockToggle')[0];
        stockUsatoRicToggle.reset();

        var stockUsatoHiddenField = Ext.ComponentQuery.query('#stockUsatoRicercaStockHiddenField')[0];
        stockUsatoHiddenField.setValue('S');

        //this.loadEstremiPrezzoKm();

        ricercaForm.setValues({
            alimentazione_codice: '0',
            carrozzeria_codice: '0'
        });

        // Reset della combobox ordinamento
        this.resetOrdinamentoCombobox();

        // Reset veicolo stock
        var veicoloStore = Ext.data.StoreManager.lookup('VeicoloStockStore');
        veicoloStore.removeAll();

        var veicoloCount = veicoloStore.getCount();
        this.showVeicoloNumRisultati(veicoloCount);

        // Aggiorno la label del bottone "cerca"
        var cercaButton = Ext.ComponentQuery.query('#cercaRicStockButton')[0];
        cercaButton.setText('CERCA');
    },

    resetOrdinamentoCombobox: function() {
        var ordinamentoCombobox = Ext.ComponentQuery.query('#ordinamentoRicStockComboBox')[0];
        ordinamentoCombobox.suspendEvents();
        ordinamentoCombobox.setValue('0');
        ordinamentoCombobox.resumeEvents(true);
    },

    getView: function() {
        var stockView = this.getStockView();

        return stockView;
    },

    initTitoloTopBar: function(view) {
        var bodyContainer = view.down('#bodyStockContainer');
        var activeBodyItem = bodyContainer.getActiveItem();
        if (activeBodyItem) {
            var topBarCtrl = this.getApplication().getController('Infocar.controller.TopBarController');
            topBarCtrl.setTitoloFromContainer(bodyContainer, activeBodyItem);
        }

    },

    setCustomProperties: function() {
        var cmp;

        cmp = Ext.ComponentQuery.query("#ricercaStockContainer")[0];
        cmp.Titolo = "Stock - Ricerca stock";

        cmp = Ext.ComponentQuery.query("#infoVeicoloStockContainer")[0];
        cmp.Titolo = "Stock - Dettaglio veicolo";

    },

    loadDatiTecniciInfoVeicolo: function(veicoloCodice) {
        var datiTecniciStore = Ext.data.StoreManager.lookup('DatiTecniciInfoVeicoloStockStore');
        datiTecniciStore.load({
            params: {
                veicolo_codice: veicoloCodice
            },
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }
                }
            },
        }, this);

    },

    loadEquipInfoVeicolo: function(veicoloCodice) {
        // Carico gli equipaggiamenti di serie
        var equipSerieStore = Ext.data.StoreManager.lookup('EquipSerieInfoVeicoloStockStore');
        equipSerieStore.load({
            params: {
                veicolo_codice: veicoloCodice
            },
            callback: function (records, operation, success) {
                var equipCount = 0;

                var equipLabel = Ext.ComponentQuery.query('#sintesiEquipInfoVeicoloStockLabel')[0];
                equipLabel.setData({numEquip: equipCount});

                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    // Carico gli equipaggiamenti montati
                    var equipMontatiStore = Ext.data.StoreManager.lookup('EquipMontatiInfoVeicoloStockStore');
                    equipMontatiStore.load({
                        params: {
                            veicolo_codice: veicoloCodice
                        },
                        callback: function (records, operation, success) {

                            if(!success){
                                Infocar.app.showLoadErrorMessage(operation);
                            } else {
                                var responseData = Ext.decode(operation.getResponse().responseText,false);

                                if(responseData.message !== null){
                                    Ext.Msg.alert("Attenzione", responseData.message);
                                }

                                equipCount = equipSerieStore.getCount() + equipMontatiStore.getCount();
                                equipLabel.setData({numEquip: equipCount});
                            }
                        },
                    }, this);
                }
            },
        }, this);

    },

    initPrezziOverlay: function() {
        // DEBUG
        //console.log('initPrezziOverlay info veicolo stock');
        this.statoPrezziInfoVeicoloStockOverlayContainer = 'CHIUSO';

        var prezziOverlayContainer = Ext.ComponentQuery.query('#prezziInfoVeicoloStockOverlayContainer')[0];
        var prezziOverlayCntElement = prezziOverlayContainer.element;
        var prezziContainerWidth = prezziOverlayCntElement.getWidth();

        var frecciaPrezziStockButton = Ext.ComponentQuery.query('#frecciaPrezziInfoVeicoloStockButton')[0];
        var frecciaPrezziStockBtnElement = frecciaPrezziStockButton.element;
        var frecciaButtonWidth = frecciaPrezziStockBtnElement.getWidth();

        prezziOverlayContainer.setLeft(0);  // Necessario dopo l'animazione sul container
        prezziOverlayContainer.setLeft(prezziContainerWidth - frecciaButtonWidth);
        //prezziOverlayCntElement.setStyle({left: (prezziContainerWidth - frecciaButtonWidth) + ''});

    }

});