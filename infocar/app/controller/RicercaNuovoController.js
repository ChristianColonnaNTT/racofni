/*
 * File: app/controller/RicercaNuovoController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Infocar.controller.RicercaNuovoController', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            nuovoView: {
                autoCreate: true,
                selector: 'container#nuovoView',
                xtype: 'NuovoView'
            }
        },

        control: {
            "button#cercaRicNuovoButton": {
                tap: 'onCercaButtonTap'
            },
            "dataview#marcaRicNuovoRisultatoDataView": {
                itemtap: 'onMarcaRisultatoItemTap'
            },
            "button#azzeraRicNuovoButton": {
                tap: 'onAzzeraButtonTap'
            },
            "button#indietroModelloRicNuovoButton": {
                tap: 'onIndietroModelloButtonTap'
            },
            "dataview#modelloRicNuovoRisultatoDataView": {
                itemtap: 'onModelloRisultatoItemTap'
            },
            "button#indietroAllestimentoRicNuovoButton": {
                tap: 'onIndietroAllestimentoButtonTap'
            },
            "dataview#allestimentoRicNuovoRisultatoDataView": {
                itemtap: 'onAllestimentoRisultatoItemTap'
            },
            "button#infoVeicoloNuovoButton": {
                tap: 'onInfoVeicoloButtonTap'
            },
            "button#indietroInfoVeicoloNuovoButton": {
                tap: 'onIndietroInfoVeicoloButtonTap'
            },
            "button#datiTecniciInfoVeicoloNuovoButton": {
                tap: 'onDatiTecniciInfoVeicoloButtonTap'
            },
            "button#equipInfoVeicoloNuovoButton": {
                tap: 'onEquipInfoVeicoloButtonTap'
            },
            "button#indietroDettaglioVeicoloNuovoButton": {
                tap: 'onIndietroDettaglioVeicoloButtonTap'
            },
            "segmentedbutton#clustersDettVeicoloNuovoButtons > button": {
                tap: 'onClusterDettVeicoloButtonTap'
            },
            "button#statoEquipDettVeicoloNuovoDataItemButton": {
                tap: 'onStatoEquipDettVeicoloDataItemButtonTap'
            },
            "button#descEquipDettVeicoloNuovoDataItemButton": {
                tap: 'onDescEquipDettVeicoloButtonItemTapOLD'
            },
            "textfield#cercaDettVeicoloNuovoTextbox": {
                change: 'onCercaDettVeicoloTextboxChange',
                keyup: 'onCercaDettVeicoloTextboxKeyup'
            },
            "button#closeInformEquipDettVeicoloNuovoButton": {
                tap: 'onCloseInformEquipDettVeicoloButtonTap'
            },
            "button#legendaHeaderEquipDettVeicoloNuovoButton": {
                tap: 'onLegendaEquipDettVeicoloButtonTap'
            },
            "button#closeLegendaEquipDettVeicoloNuovoButton": {
                tap: 'onCloseLegendaEquipDettVeicoloButtonTap'
            },
            "button#ricercaNuovoEsitoVeicoloNuovoButton": {
                tap: 'onRicercaNuovoEsitoVeicoloButtonTap'
            },
            "button#homeEsitoVeicoloNuovoButton": {
                tap: 'onHomeEsitoVeicoloNuovoButtonTap'
            },
            "button#salvaDettaglioVeicoloNuovoButton": {
                tap: 'onSalvaDettaglioVeicoloButtonTap'
            },
            "button#annullaPopupEquipVeicoloNuovoButton": {
                tap: 'onAnnullaPopupEquipVeicoloButtonTap'
            },
            "button#confermaPopupEquipVeicoloNuovoButton": {
                tap: 'onConfermaPopupEquipVeicoloButtonTap'
            },
            "selectfield#logicaDettVeicoloNuovoCombobox": {
                change: 'onLogicaDettVeicoloComboboxChange'
            },
            "button#closeEquipSelAutomaticaDettVeicoloNuovoButton": {
                tap: 'onCloseEquipSelAutomaticaDettVeicoloButtonTap'
            },
            "selectfield#ordinamentoRicNuovoComboBox": {
                change: 'onOrdinamentoRicercaComboboxChange'
            },
            "image#infoVeicoloNuovoImg": {
                tap: 'onInfoVeicoloImageTap'
            },
            "container#nuovoView": {
                initialize: 'onNuovoViewInitialize'
            },
            "container#bodyNuovoContainer": {
                activeitemchange: 'onContainerActiveItemChange'
            },
            "container#corpoInfoVeicoloNuovoContainer": {
                activeitemchange: 'onCorpoInfoVeicoloNuovoContainerActiveItemChange'
            },
            "button#stampaEsitoVeicoloNuovoButton": {
                tap: 'onStampaEsitoVeicoloButtonTap'
            }
        }
    },

    onCercaButtonTap: function(button, e, eOpts) {
        button.setText('AGGIORNA RICERCA');

        var descrizioneRicField = Ext.ComponentQuery.query('#descrizioneRicercaNuovoField')[0];
        var descRic = descrizioneRicField.getValue();

        var ricercaTargaFlag = false;

        var patterns = Infocar.app.patternsRicercaTarga;
        for(var i=0; i<patterns.length; i++) {
            var patternRegExp = new RegExp(patterns[i]);
            if (patternRegExp.test(descRic)) {
                ricercaTargaFlag = true;
                break;
            }
        }

        var ricercaForm = Ext.ComponentQuery.query('#ricercaNuovoForm')[0];

        if (ricercaTargaFlag) {
            // L'utente ha inserito una targa nella textbox descrizione.
            // Salto direttamente all'elenco allestimenti.

            ricercaForm.ricercaTargaFlag = 'S';

            //var indietroAllestimentoButton = Ext.ComponentQuery.query('#indietroAllestimentoRicNuovoButton')[0];
            //indietroAllestimentoButton.setHidden(true);

            var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaNuovoHidden')[0];
            marcaHidden.setValue('');

            var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaNuovoHidden')[0];
            modelloHidden.setValue('');

            var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaNuovoHidden')[0];
            allestimentoHidden.setValue('');

            this.loadAllestimenti();
        } else {
            //ricercaForm.ricercaTargaFlag = 'N';

            var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
            var activeRisultatoRicItem = ricNuovoRisultatoContainer.getActiveItem();
            var tipoRisultatoRic = activeRisultatoRicItem.getItemId();

            if (tipoRisultatoRic === 'marcaRicNuovoRisultatoContainer') {
                this.loadMarche();
            } else if (tipoRisultatoRic === 'modelloRicNuovoRisultatoContainer') {
                this.loadModelli();
            } else if (tipoRisultatoRic === 'allestimentoRicNuovoRisultatoContainer') {
                this.loadAllestimenti();
            }
        }

    },

    onMarcaRisultatoItemTap: function(dataview, index, target, record, e, eOpts) {
        var marcaModel = record;

        var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaNuovoHidden')[0];
        marcaHidden.setValue(marcaModel.get('codice'));

        this.loadModelli();
    },

    onAzzeraButtonTap: function(button, e, eOpts) {
        this.resetRicerca();

        this.loadMarche();

        // Visualizzo la schermata della lista marche
        var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
        ricNuovoRisultatoContainer.animateActiveItem(
            '#marcaRicNuovoRisultatoContainer',
            {
                type: 'slide',
                direction:'right'
            }
        );
    },

    onIndietroModelloButtonTap: function(button, e, eOpts) {
        var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
        ricNuovoRisultatoContainer.animateActiveItem(
            '#marcaRicNuovoRisultatoContainer',
            {
                type: 'slide',
                direction: 'right'
            }
        );
    },

    onModelloRisultatoItemTap: function(dataview, index, target, record, e, eOpts) {
        var modelloModel = record;

        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaNuovoHidden')[0];
        modelloHidden.setValue(modelloModel.get('codice'));

        this.resetOrdinamentoCombobox();

        this.loadAllestimenti();
    },

    onIndietroAllestimentoButtonTap: function(button, e, eOpts) {
        var ricercaForm = Ext.ComponentQuery.query('#ricercaNuovoForm')[0];

        if (ricercaForm.ricercaTargaFlag === 'S') {
            this.resetRicerca();

            this.loadMarche();

            // Visualizzo la schermata della lista marche
            var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
            ricNuovoRisultatoContainer.animateActiveItem(
                '#marcaRicNuovoRisultatoContainer',
                {
                    type: 'slide',
                    direction:'right'
                }
            );

            ricercaForm.ricercaTargaFlag = 'N';

        } else {

            var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
            ricNuovoRisultatoContainer.animateActiveItem(
                '#modelloRicNuovoRisultatoContainer',
                {
                    type: 'slide',
                    direction: 'right'
                }
            );
        }
    },

    onAllestimentoRisultatoItemTap: function(dataview, index, target, record, e, eOpts) {
        var allestimentoModel = record;
        var allestimentoCodice = allestimentoModel.get('codice');

        var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaNuovoHidden')[0];
        var marcaCodice = marcaHidden.getValue();

        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaNuovoHidden')[0];
        var modelloCodice = modelloHidden.getValue();

        var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaNuovoHidden')[0];
        allestimentoHidden.setValue(allestimentoCodice);

        this.resetCercaEquipVeicoloTextbox();
        this.resetLogicaCombobox();

        var veicoloModelClass = Ext.ModelManager.getModel('Infocar.model.DettaglioVeicoloNuovoModel');
        veicoloModelClass.load(0, {
            params: {
                marca_codice: marcaCodice,
                modello_codice: modelloCodice,
                allestimento_codice: allestimentoCodice
            },
            scope: this,
            success: function(record, operation) {
                var responseData = Ext.decode(operation.getResponse().responseText,false);

                if(responseData.message !== null){
                    Ext.Msg.alert("Attenzione", responseData.message);
                }

                // Salvo il model del veicolo nuovo in una property globale
                var veicoloModel = record;
                Infocar.app.dettaglioVeicoloNuovoModel = veicoloModel;

                this.showTestataDettVeicolo();

                this.loadEquipaggiamenti({
                    afterLoad: 'PRIMO_LOAD'
                });
            },
            failure: function(record, operation) {
                Infocar.app.showLoadErrorMessage(operation);

                var salvaButton = Ext.ComponentQuery.query('#salvaDettaglioVeicoloNuovoButton')[0];
                salvaButton.disable();
            }
        }, this);

    },

    onInfoVeicoloButtonTap: function(button, e, eOpts) {
        // Visualizzo la schermata con la schermata generale info veicolo
        var bodyContainer = Ext.ComponentQuery.query('#bodyNuovoContainer')[0];

        var infoVeicoloModel = Infocar.app.dettaglioVeicoloNuovoModel;
        var veicoloCodice = infoVeicoloModel.get('codice');

        var infoVeicoloModelClass = Ext.ModelManager.getModel('Infocar.model.InfoVeicoloNuovoModel');
        infoVeicoloModelClass.load(0, {
            params: {
                veicolo_codice: veicoloCodice
            },
            scope: this,
            success: function(record, operation) {
                var responseData = Ext.decode(operation.getResponse().responseText,false);

                if(responseData.message !== null){
                    Ext.Msg.alert("Attenzione", responseData.message);
                }

                var infoVeicoloModel = record;


                this.loadDatiTecniciInfoVeicolo(veicoloCodice);

                this.loadEquipInfoVeicolo(veicoloCodice);

                this.loadGraficoInfoVeicolo(veicoloCodice);


                // Dati di testata
                var infoVeicoloMiniImg = Ext.ComponentQuery.query('#infoVeicoloNuovoMiniImg');
                Ext.Array.each(infoVeicoloMiniImg, function(item, index, ary) {
                    item.setSrc(infoVeicoloModel.get('infoMiniUrlImg'));
                });

                var descLabel = Ext.ComponentQuery.query('#descInfoVeicoloNuovoLabel');
                Ext.Array.each(descLabel, function(item, index, ary) {
                    item.setData(infoVeicoloModel.getData());
                });

                // Dati del corpo
                var infoVeicoloImg = Ext.ComponentQuery.query('#infoVeicoloNuovoImg')[0];
                infoVeicoloImg.setSrc(infoVeicoloModel.get('infoUrlImg'));

                var testoLabel = Ext.ComponentQuery.query('#testoInfoVeicoloNuovoLabel')[0];
                testoLabel.setData(infoVeicoloModel.getData());

                var datiTecniciLabel = Ext.ComponentQuery.query('#sintesiDatiTecniciInfoVeicoloNuovoLabel')[0];
                datiTecniciLabel.setData(infoVeicoloModel.getData());

                //var equipLabel = Ext.ComponentQuery.query('#sintesiEquipInfoVeicoloNuovoLabel')[0];
                //equipLabel.setData({numEquip: equipCount});

                var datiStockLabel = Ext.ComponentQuery.query('#sintesiDatiStockInfoVeicoloNuovoLabel')[0];
                datiStockLabel.setData(infoVeicoloModel.getData());

                // Visualizzo la schermata di info veicolo nuovo
                bodyContainer.animateActiveItem(
                    '#infoVeicoloNuovoContainer',
                    {
                        type: 'slide',
                        direction:'left'
                    }
                );

                var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloNuovoContainer')[0];
                corpoInfoContainer.setActiveItem('#generaleInfoVeicoloNuovoContainer');

                var generaleInfoContainer = Ext.ComponentQuery.query('#generaleInfoVeicoloNuovoContainer')[0];
                if (generaleInfoContainer.isRendered()) {
                    generaleInfoContainer.getScrollable().getScroller().scrollTo(0, 0, false);
                }

            },
            failure: function(record, operation) {
                Infocar.app.showLoadErrorMessage(operation);
            }
        }, this);


    },

    onIndietroInfoVeicoloButtonTap: function(button, e, eOpts) {
        var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloNuovoContainer')[0];
        activeContainer = corpoInfoContainer.getActiveItem().getItemId();

        if (activeContainer === 'generaleInfoVeicoloNuovoContainer') {
            // Sono nella schermata generale info veicolo, torno al dettaglio
            var bodyContainer = Ext.ComponentQuery.query('#bodyNuovoContainer')[0];

            bodyContainer.animateActiveItem(
                '#dettaglioVeicoloNuovoContainer',
                {
                    type: 'slide',
                    direction:'right'
                }
            );
        } else {
            // Sono in una delle due schermate equipaggiamenti info veicolo oppure
            // dati tecnici info veicolo, torno alla schermata generale info veicolo.
            corpoInfoContainer.animateActiveItem(
                '#generaleInfoVeicoloNuovoContainer',
                {
                    type: 'slide',
                    direction:'right'
                }
            );
        }
    },

    onDatiTecniciInfoVeicoloButtonTap: function(button, e, eOpts) {
        var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloNuovoContainer')[0];

        corpoInfoContainer.animateActiveItem(
            '#datiTecniciInfoVeicoloNuovoContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );
    },

    onEquipInfoVeicoloButtonTap: function(button, e, eOpts) {
        var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloNuovoContainer')[0];

        corpoInfoContainer.animateActiveItem(
            '#equipInfoVeicoloNuovoContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );
    },

    onIndietroDettaglioVeicoloButtonTap: function(button, e, eOpts) {
        var bodyContainer = Ext.ComponentQuery.query('#bodyNuovoContainer')[0];

        bodyContainer.animateActiveItem(
            '#ricercaNuovoContainer',
            {
                type: 'slide',
                direction:'right'
            }
        );
    },

    onClusterDettVeicoloButtonTap: function(button, e, eOpts) {
        this.resetCercaEquipVeicoloTextbox();

        this.showEquipaggiamenti(button.clusterCodice);
    },

    onStatoEquipDettVeicoloDataItemButtonTap: function(button, e, eOpts) {
        this.resetCercaEquipVeicoloTextbox();

        var listItem = button.up('#equipDettVeicoloNuovoListItem');
        //var listItem = button.getParent();
        var equipModel = listItem.getRecord();

        this.changeStatoEquipDettVeicolo(equipModel);
    },

    onDescEquipDettVeicoloButtonItemTapOLD: function(button, e, eOpts) {
        this.resetCercaEquipVeicoloTextbox();

        var listItem = button.up('#equipDettVeicoloNuovoListItem');
        var equipModel = listItem.getRecord();

        this.changeStatoEquipDettVeicolo(equipModel);
    },

    onCercaDettVeicoloTextboxChange: function(textfield, newValue, oldValue, eOpts) {
        this.showEquipaggiamenti(false);
    },

    onCercaDettVeicoloTextboxKeyup: function(textfield, e, eOpts) {
        this.showEquipaggiamenti(false);
    },

    onCloseInformEquipDettVeicoloButtonTap: function(button, e, eOpts) {
        var informEquipPanel = Ext.ComponentQuery.query('#popupInformEquipDettVeicoloNuovoPanel')[0];
        informEquipPanel.hide();
    },

    onLegendaEquipDettVeicoloButtonTap: function(button, e, eOpts) {
        var legendaEquipPanel = Ext.ComponentQuery.query('#popupLegendaEquipDettVeicoloNuovoPanel')[0];
        legendaEquipPanel.showBy(button, 'tl-cr');
    },

    onCloseLegendaEquipDettVeicoloButtonTap: function(button, e, eOpts) {
        var legendaEquipPanel = Ext.ComponentQuery.query('#popupLegendaEquipDettVeicoloNuovoPanel')[0];
        legendaEquipPanel.hide();
    },

    onRicercaNuovoEsitoVeicoloButtonTap: function(button, e, eOpts) {
        Infocar.app.showRicercaNuovo();
    },

    onHomeEsitoVeicoloNuovoButtonTap: function(button, e, eOpts) {
        Infocar.app.showHome();
    },

    onSalvaDettaglioVeicoloButtonTap: function(button, e, eOpts) {
        var veicoloModel = Infocar.app.dettaglioVeicoloNuovoModel;

        veicoloModel.save({
            scope: this,
            success: function(record, operation) {
                var responseData = Ext.decode(operation.getResponse().responseText,false);

                if(responseData.message !== null){
                    Ext.Msg.alert("Attenzione", responseData.message);
                }

                var veicoloModel = record;

                this.showEsitoSalvaDettaglioVeicolo(veicoloModel);
            },
            failure: function(record, operation) {
                Infocar.app.showLoadErrorMessage(operation);

                // DEBUG
                if (Infocar.app.modalitaSviluppoFlag === 'S') {
                    this.showEsitoSalvaDettaglioVeicolo(veicoloModel);
                }
            }
        }, this);
    },

    onAnnullaPopupEquipVeicoloButtonTap: function(button, e, eOpts) {
        var popupEquipPanel = Ext.ComponentQuery.query('#popupEquipDettVeicoloNuovoPanel')[0];
        popupEquipPanel.hide();

        this.syncEquipDettVeicolo();
    },

    onConfermaPopupEquipVeicoloButtonTap: function(button, e, eOpts) {
        var equipDataview = Ext.ComponentQuery.query('#popupEquipDettVeicoloNuovoDataView')[0];

        var aryEquipSelected = equipDataview.getSelection();

        if (aryEquipSelected.length > 0) {
            var equipModel = aryEquipSelected[0];

            equipModel.set('stato', '3');  // 3=Vincoli Plurimi Selezione

            var popupEquipPanel = Ext.ComponentQuery.query('#popupEquipDettVeicoloNuovoPanel')[0];
            popupEquipPanel.hide();

            this.syncEquipDettVeicolo();
        }
    },

    onLogicaDettVeicoloComboboxChange: function(selectfield, newValue, oldValue, eOpts) {
        this.resetCercaEquipVeicoloTextbox();

        this.loadEquipaggiamenti({
            afterLoad: 'LOGICA_CHANGE',
            prevLogicaCodice: oldValue
        });
    },

    onCloseEquipSelAutomaticaDettVeicoloButtonTap: function(button, e, eOpts) {
        this.hidePopupSelAutomaticaEquip();
    },

    onOrdinamentoRicercaComboboxChange: function(selectfield, newValue, oldValue, eOpts) {
        this.loadAllestimenti();
    },

    onInfoVeicoloImageTap: function(image, e, eOpts) {
        var photoFullScreenCtrl = Infocar.app.getController('Infocar.controller.PhotoFullScreenController');
        photoFullScreenCtrl.showPhotoFullScreen([image.getSrc()], 0);
    },

    onNuovoViewInitialize: function(component, eOpts) {
        var view = component;

        //var ricNuovoCtrl = this.getController('Infocar.controller.RicercaNuovoController');
        this.setCustomProperties();

        this.initTitoloTopBar(view);

        this.agganciaEventi();
    },

    onContainerActiveItemChange: function(container, value, oldValue, eOpts) {
        var item = value;

        var topBarCtrl = this.getApplication().getController('Infocar.controller.TopBarController');
        topBarCtrl.setTitoloFromContainer(container, item);
    },

    onCorpoInfoVeicoloNuovoContainerActiveItemChange: function(container, value, oldValue, eOpts) {
        var item = value;

        var bodyContainer = container.up('#bodyNuovoContainer');

        var topBarCtrl = this.getApplication().getController('Infocar.controller.TopBarController');
        topBarCtrl.setTitoloFromContainer(bodyContainer, item);
    },

    onStampaEsitoVeicoloButtonTap: function(button, e, eOpts) {
        var urlStampa = Infocar.app.stampaEsitoVeicoloNuovoUrl;

        window.open(urlStampa, "stampa", "width=600,height=600,location=no");

    },

    showMarcaNumRisultati: function(numRisultati) {
        var marcaNumRisultatiLabel = Ext.ComponentQuery.query('#marcaRicNuovoNumRisultatiLabel')[0];
        marcaNumRisultatiLabel.setHtml(numRisultati + ' Marche');
    },

    resetRicerca: function() {
        // Reset form
        var ricercaForm = Ext.ComponentQuery.query('#ricercaNuovoForm')[0];
        ricercaForm.reset();

        ricercaForm.setValues({
            listino_codice: '0',
            alimentazione_codice: '0',
            carrozzeria_codice: '0'
        });

        // Reset marche
        var marcaStore = Ext.data.StoreManager.lookup('MarcaRicercaNuovoStore');
        marcaStore.removeAll();

        var marcaCount = marcaStore.getCount();
        this.showMarcaNumRisultati(marcaCount);

        // Reset modelli
        var modelloStore = Ext.data.StoreManager.lookup('ModelloRicercaNuovoStore');
        modelloStore.removeAll();

        var modelloCount = modelloStore.getCount();
        this.showModelloNumRisultati(modelloCount);

        // Reset allestimenti
        var allestimentoStore = Ext.data.StoreManager.lookup('AllestimentoRicercaNuovoStore');
        allestimentoStore.removeAll();

        var allestimentoCount = allestimentoStore.getCount();
        this.showAllestimentoNumRisultati(allestimentoCount);

        // Aggiorno la label del bottone "cerca"
        var cercaButton = Ext.ComponentQuery.query('#cercaRicNuovoButton')[0];
        cercaButton.setText('CERCA');

        // Abbasso il flag della ricerca per targa
        ricercaForm.ricercaTargaFlag = 'N';

    },

    showModelloNumRisultati: function(numRisultati) {
        var modelloNumRisultatiLabel = Ext.ComponentQuery.query('#modelloRicNuovoNumRisultatiLabel')[0];
        modelloNumRisultatiLabel.setHtml(numRisultati + ' Modelli');

    },

    showAllestimentoNumRisultati: function(numRisultati) {
        var allestimentoNumRisultatiLabel = Ext.ComponentQuery.query('#allestimentoRicNuovoNumRisultatiLabel')[0];
        allestimentoNumRisultatiLabel.setHtml(numRisultati + ' Allestimenti');
    },

    showEquipaggiamenti: function(clusterCodice) {
        if (!clusterCodice) {
            var clusterButtons = Ext.ComponentQuery.query('#clustersDettVeicoloNuovoButtons')[0];
            var activeClusterButton = clusterButtons.getPressedButtons()[0];
            clusterCodice = activeClusterButton.clusterCodice;
        }


        var equipListView = Ext.ComponentQuery.query('#equipDettVeicoloNuovoList')[0];
        //equipListView.setGrouped(false);

        var prevClasseHeaderGruppi = this.classeHeaderGruppi;
        if (prevClasseHeaderGruppi) {
            equipListView.removeCls(prevClasseHeaderGruppi);
        }

        var classeHeaderGruppi = clusterCodice + 'equipDettVeicoloNuovoListCls';
        equipListView.addCls(classeHeaderGruppi);
        this.classeHeaderGruppi = classeHeaderGruppi;

        var equipStore = Ext.data.StoreManager.lookup('EquipDettVeicoloNuovoStore');

        var cercaTextbox = Ext.ComponentQuery.query('#cercaDettVeicoloNuovoTextbox')[0];
        var filtroCerca = cercaTextbox.getValue();

        equipStore.clearFilter(true);
        /*
        equipStore.setSorters([]);
        equipStore.setGrouper(null);
        */

        //var aryEquipStore = equipStore.getRange();
        //var aryEquipStore = equipStore.data.all;
        /*
        for(var idx=0, len=aryEquipStore.length; idx<len; idx++) {
            aryEquipStore[idx].set('order', idx);
        }
        */

        /*
        var equipClustersStore = Ext.data.StoreManager.lookup('EquipClustersDettVeicoloNuovoStore');
        equipClustersStore.removeAll(true);
        equipClustersStore.add(equipStore.getRange());
        */

        /*
        equipStore.filter([
            {property: 'cluster_codice', value: clusterCodice},
            {property: 'descrizione', value: filtroCerca}
        ]);
        */

        equipStore.filter([
            {
                filterFn: function(equipaggiamento) {
                    var clustersEquip = equipaggiamento.get("cluster_codice");
                    var stato = equipaggiamento.get("stato");

                    var filterFlag;
                    if (clusterCodice === 'tutti') {
                        filterFlag = true;
                    } else if (clusterCodice === 'riepilogo') {
                        // 1=Selezionato,  4=Incluso,  5=Nuova Selezione
                        filterFlag = (stato === '1' || stato === '4' || stato === '5') ? true : false;
                    } else {
                        filterFlag = (clustersEquip.indexOf(clusterCodice) != -1) ? true : false;
                    }

                    return filterFlag;
                }
            },
            {property: 'descrizione', value: filtroCerca, anyMatch: true}
        ]);


        /*
        equipStore.sort([
            {property: 'gruppoDesc', direction: 'ASC'},
            {property: 'descrizione', direction: 'ASC'}
        ]);
        */

        /*
        equipStore.sort([
            {property: 'order', direction: 'ASC'}
        ]);
        */

        /*
        equipStore.setGrouper({
            groupFn: function(item) {
                return item.get('gruppoDesc');
            },
            sortProperty: 'order'
        });
        equipListView.setGrouped(true);
        */

    },

    changeStatoEquipDettVeicolo: function(equipModel) {
        var statoEquip = equipModel.get('stato');

        var changeStatoFlag = false;
        // 0=Libero,  6=Nuova Deselezione
        if (!statoEquip || statoEquip === '0' || statoEquip === '6') {
            equipModel.set('stato', '5');  // 5=Nuova Selezione
            changeStatoFlag = true;
        // 1=Selezionato,  5=Nuova Selezione
        } else if (statoEquip === '1' || statoEquip === '5') {
            equipModel.set('stato', '6');  // 6=Nuova Deselezione
            changeStatoFlag = true;
        }

        if (changeStatoFlag) {

            this.syncEquipDettVeicolo();
        } else {
            Infocar.app.hideMask();
        }
    },

    showInfoSelezioneEquip: function() {
        this.showHideEquipClustersCount(0, true);
        this.showPopupSelAutomaticaEquip();
        //Ext.defer(this.showEquipClustersCount, 5000, this, [1, false]);

        if (this.timeoutIdHideInfoSelezioneEquip) {
            clearTimeout(this.timeoutIdHideInfoSelezioneEquip);
        }

        this.timeoutIdHideInfoSelezioneEquip = Ext.defer(this.hideInfoSelezioneEquip, 5000, this);
    },

    hideInfoSelezioneEquip: function() {
        //this.showHideEquipClustersCount(1, false);
        this.showHideEquipClustersCount(0, false);
        this.hidePopupSelAutomaticaEquip();

        this.timeoutIdHideInfoSelezioneEquip = null;
    },

    showHideEquipClustersCount: function(countMin, evidenziaAbbFlag) {
        //var equipClustersStore = Ext.data.StoreManager.lookup('EquipClustersDettVeicoloNuovoStore');

        var buttonsClusters = Ext.ComponentQuery.query('#clustersDettVeicoloNuovoButtons [clusterCodice]');

        var hashClustersEquip = Ext.create('Ext.util.HashMap');

        var equipaggiamenti = this.getAllEquipaggiamentiDettVeicoloNuovo();

        // Colleziono i count di equipaggiamenti per ogni cluster
        for(var i=0; i<buttonsClusters.length; i++) {

            var buttonCluster = buttonsClusters[i];
            var buttonClusterCodice = buttonCluster.clusterCodice;

            if (buttonClusterCodice !== 'tutti'  &&  buttonClusterCodice !== 'riepilogo') {
                var clusterEquip = hashClustersEquip.get(buttonClusterCodice);
                if (!clusterEquip) {
                    clusterEquip = { count: 0, evidenziaFlag: false };
                }

                //var equipaggiamenti = equipClustersStore.getRange();
                for(var n=0; n<equipaggiamenti.length; n++) {
                    var equipModel = equipaggiamenti[n];

                    var equipClusterCodice = equipModel.get('cluster_codice');
                    var statoEquip = equipModel.get('stato');
                    var abbinamentoFlag = equipModel.get('abbinamentoFlag');

                    if (equipClusterCodice && equipClusterCodice !== '') {

                        // Da conteggiare solo se l'equipaggiamento non fa parte di
                        // un pacchetto o se il cluster e' quello dei pacchetti.
                        if (equipClusterCodice.indexOf('PACK_') == -1 || buttonClusterCodice === 'PACK_') {

                            if (equipClusterCodice.indexOf(buttonClusterCodice) != -1) {
                                // 1=Selezionato,  4=Incluso,  5=Nuova Selezione
                                if (statoEquip === '1' || statoEquip === '4' || statoEquip === '5') {
                                    clusterEquip.count++;
                                }
                            }

                        }

                        if (equipClusterCodice.indexOf(buttonClusterCodice) != -1) {
                            if (abbinamentoFlag === 'S') {
                                clusterEquip.evidenziaFlag = true;
                            }
                        }
                    }
                }

                hashClustersEquip.replace(buttonClusterCodice, clusterEquip);
            }
        }

        // Visualizzo il count di equipaggiamenti su ogni button dei cluster come badgeText
        hashClustersEquip.each(function (key, value, length) {
            var buttonClusterCodice = key;
            var clusterEquip = value;

            var buttonsClusters = Ext.ComponentQuery.query('#clustersDettVeicoloNuovoButtons')[0];
            var buttonCluster = buttonsClusters.down('[clusterCodice='+ buttonClusterCodice +']');

            if (clusterEquip.count > countMin) {
                buttonCluster.setBadgeText(clusterEquip.count + '');
            } else {
                buttonCluster.setBadgeText(null);
            }

            if (clusterEquip.evidenziaFlag && evidenziaAbbFlag) {
                buttonCluster.addCls('evidenzaBtnClusterDettVeicoloNuovo');
            } else {
                buttonCluster.removeCls('evidenzaBtnClusterDettVeicoloNuovo');
            }
        });


    },

    showPopupSelAutomaticaEquip: function(msg) {
        var popupEquipSelAutoPanel = Ext.ComponentQuery.query('#popupEquipSelAutomaticaDettVeicoloNuovoPanel')[0];

        var equipSelAutoStore = Ext.data.StoreManager.lookup('EquipSelAutomaticaDettVeicoloNuovoStore');
        equipSelAutoStore.removeAll();

        //var equipClustersStore = Ext.data.StoreManager.lookup('EquipClustersDettVeicoloNuovoStore');
        /*
        equipClustersStore.each( function (equipModel, index, length) {

            if (equipModel.get('abbinamentoFlag') === 'S') {
                equipSelAutoStore.add(equipModel);
            }

        });
        */

        var equipaggiamenti = this.getAllEquipaggiamentiDettVeicoloNuovo();
        var numEquip = equipaggiamenti.length;
        var equipAbbinatiFlag = false;
        for(var i=0; i<numEquip; i++) {

            var equipModel = equipaggiamenti[i];

            if (equipModel.get('abbinamentoFlag') === 'S') {
                equipSelAutoStore.add(equipModel);
                equipAbbinatiFlag = true;
            }
        }

        //var riepilogoButton = Ext.ComponentQuery.query('#riepilogoClusterDettVeicoloNuovoButton')[0];
        //popupEquipSelAutoPanel.showBy(riepilogoButton, 'tr-br');
        if (equipAbbinatiFlag) {
            popupEquipSelAutoPanel.show();
        }

    },

    hidePopupSelAutomaticaEquip: function() {
        var popupEquipSelAutoPanel = Ext.ComponentQuery.query('#popupEquipSelAutomaticaDettVeicoloNuovoPanel')[0];
        popupEquipSelAutoPanel.hide();
    },

    checkSelEquipRicorsiva: function(descEquipSelezionato) {
        //var equipStore = Ext.data.StoreManager.lookup('EquipClustersDettVeicoloNuovoStore');
        var equipaggiamenti = this.getAllEquipaggiamentiDettVeicoloNuovo();

        var popupEquipStore = Ext.data.StoreManager.lookup('PopupEquipDettVeicoloNuovoStore');
        popupEquipStore.removeAll();

        var openPopupEquipFlag = false;
        var numEquip = equipaggiamenti.length;

        //equipStore.each(function (item, index, length) {
        //    var equipModel = item;
        //    return true;

        for(var i=0; i<numEquip; i++) {
            var equipModel = equipaggiamenti[i];
            var statoEquip = equipModel.get('stato');

            // 7=Selezione Obbligatoria (ricorsiva)
            if (statoEquip === '7') {
                // E' presente un equipaggiamento a selezione ricorsiva, lo
                // aggiungo allo store della popup.
                popupEquipStore.add(equipModel);

                // A fine iterazione sullo store dovro' aprire la popup per
                // permettere all'utente la selezione dell'equipaggiamento.
                openPopupEquipFlag = true;
            }
        }

        if (openPopupEquipFlag) {
            var popupEquipPanel = Ext.ComponentQuery.query('#popupEquipDettVeicoloNuovoPanel')[0];
            var popupEquipDataview = Ext.ComponentQuery.query('#popupEquipDettVeicoloNuovoDataView')[0];
            popupEquipDataview.deselectAll();

            var titoloPopupEquipLabel = Ext.ComponentQuery.query('#titoloPopupEquipVeicoloNuovoLabel')[0];
            titoloPopupEquipLabel.setData({"descEquipSelezionato": descEquipSelezionato});

            Ext.Viewport.setMasked(popupEquipPanel);

            return true;
        } else {
            return false;
        }

    },

    loadMarche: function() {
        var marcaStore = Ext.data.StoreManager.lookup('MarcaRicercaNuovoStore');

        var indietroAllestimentoButton = Ext.ComponentQuery.query('#indietroAllestimentoRicNuovoButton')[0];
        indietroAllestimentoButton.setHidden(false);

        var ricercaForm = Ext.ComponentQuery.query('#ricercaNuovoForm')[0];

        var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaNuovoHidden')[0];
        marcaHidden.setValue('');

        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaNuovoHidden')[0];
        modelloHidden.setValue('');

        var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaNuovoHidden')[0];
        allestimentoHidden.setValue('');

        marcaStore.load({
            params: ricercaForm.getValues(),
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    /*
                    var button = Ext.ComponentQuery.query('#cercaRicNuovoButton')[0];
                    button.setText('Aggiorna ricerca');
                    */

                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }
                    var marcaCount = marcaStore.getCount();
                    this.showMarcaNumRisultati(marcaCount);

                    if (marcaCount == 1) {
                        var marcaModel = marcaStore.getAt(0);

                        var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaNuovoHidden')[0];
                        marcaHidden.setValue(marcaModel.get('codice'));

                        var marcaDataview = Ext.ComponentQuery.query('#marcaRicNuovoRisultatoDataView')[0];
                        marcaDataview.select(marcaModel, false);

                        this.loadModelli();
                    }
                }
            },
            scope: this
        });

    },

    loadModelli: function() {
        //var marcaDataview = Ext.ComponentQuery.query('#marcaRicNuovoRisultatoDataView')[0];
        //var selMarcaModel = marcaDataview.getSelection()[0];
        //var marcaCodice = selMarcaModel.get('codice');

        var modelloStore = Ext.data.StoreManager.lookup('ModelloRicercaNuovoStore');

        var indietroAllestimentoButton = Ext.ComponentQuery.query('#indietroAllestimentoRicNuovoButton')[0];
        indietroAllestimentoButton.setHidden(false);

        var ricercaForm = Ext.ComponentQuery.query('#ricercaNuovoForm')[0];

        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaNuovoHidden')[0];
        modelloHidden.setValue('');

        var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaNuovoHidden')[0];
        allestimentoHidden.setValue('');

        modelloStore.load({
        //    params: Ext.Object.merge(
        //        {
        //            marca_codice: marcaCodice,
        //        },
            params: ricercaForm.getValues(),
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    /*
                    var button = Ext.ComponentQuery.query('#cercaRicNuovoButton')[0];
                    button.setText('Aggiorna ricerca');
                    */

                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }
                    var modelloCount = modelloStore.getCount();
                    this.showModelloNumRisultati(modelloCount);

                    if (modelloCount == 1) {
                        var modelloModel = modelloStore.getAt(0);

                        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaNuovoHidden')[0];
                        modelloHidden.setValue(modelloModel.get('codice'));

                        var modelloDataview = Ext.ComponentQuery.query('#modelloRicNuovoRisultatoDataView')[0];
                        modelloDataview.select(modelloModel, false);

                        this.resetOrdinamentoCombobox();

                        this.loadAllestimenti();

                    } else {

                        var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
                        ricNuovoRisultatoContainer.animateActiveItem(
                            '#modelloRicNuovoRisultatoContainer',
                            {
                                type: 'slide',
                                direction:'left'
                            }
                        );
                    }
                }
            },
            scope: this
        });
    },

    loadAllestimenti: function() {
        var allestimentoStore = Ext.data.StoreManager.lookup('AllestimentoRicercaNuovoStore');

        var ricercaForm = Ext.ComponentQuery.query('#ricercaNuovoForm')[0];

        var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaNuovoHidden')[0];
        allestimentoHidden.setValue('');

        // Leggo il codice del criterio di ordinamento
        var ordinamentoCombobox = Ext.ComponentQuery.query('#ordinamentoRicNuovoComboBox')[0];
        var ordinamentoCodice = ordinamentoCombobox.getValue();

        allestimentoStore.load({
            params: Ext.Object.merge(
                {
                    ordinamento_codice: ordinamentoCodice
                },
                ricercaForm.getValues()
            ),
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    /*
                    var button = Ext.ComponentQuery.query('#cercaRicNuovoButton')[0];
                    button.setText('Aggiorna ricerca');
                    */

                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    var allestimentoCount = allestimentoStore.getCount();
                    this.showAllestimentoNumRisultati(allestimentoCount);

                    var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
                    ricNuovoRisultatoContainer.animateActiveItem(
                        '#allestimentoRicNuovoRisultatoContainer',
                        {
                            type: 'slide',
                            direction:'left'
                        }
                    );
                }
            },
            scope: this
        });

    },

    loadEquipaggiamenti: function(options) {
        var afterLoad = null;

        /*
        var clusterCodice = null;
        var fnAfterShowEquip = null;
        */
        var prevLogicaCodice = null;


        if (options) {
            /*
            clusterCodice = options.clusterCodice;
            fnAfterShowEquip = options.fnAfterShowEquip;
            */
            prevLogicaCodice = options.prevLogicaCodice;
            afterLoad = options.afterLoad;
        }

        var veicoloModel = Infocar.app.dettaglioVeicoloNuovoModel;
        var veicoloCodice = veicoloModel.get('codice');

        var logicaCombobox = Ext.ComponentQuery.query('#logicaDettVeicoloNuovoCombobox')[0];
        var logicaCodice = logicaCombobox.getValue();

        /*
        if (afterLoad === 'PRIMO_LOAD') {
            var equipDettVeicoloList = Ext.ComponentQuery.query('#equipDettVeicoloNuovoList')[0];
            equipDettVeicoloList.setHidden(true);
        }
        */

        var equipStore = Ext.data.StoreManager.lookup('EquipDettVeicoloNuovoStore');
        equipStore.load({
            params: {
                veicolo_codice: veicoloCodice,
                logica_codice: logicaCodice
            },
            scope: this,
            callback: function (records, operation, success) {
                if(!success){
                    if (typeof prevLogicaCodice != 'undefined' && prevLogicaCodice !== null) {
                        logicaCombobox.suspendEvents();
                        logicaCombobox.setValue(prevLogicaCodice);
                        logicaCombobox.resumeEvents(true);
                    }

                    Infocar.app.showLoadErrorMessage(operation);

                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    var aryEquipaggiamenti = records;

                    if (afterLoad === 'PRIMO_LOAD') {
                        var clusterIniziale = this.initClusterButtons(aryEquipaggiamenti);

                        // Visualizzo gli equipaggiamenti del cluster selezionato
                        this.showEquipaggiamenti(clusterIniziale.clusterCodice);
                        this.showHideEquipClustersCount(0, false);

                    } else if (afterLoad === 'LOGICA_CHANGE') {
                        this.showEquipaggiamenti();
                        this.showHideEquipClustersCount(0, false);
                    }
                    /*
                    this.showEquipaggiamenti(clusterCodice);
                    //this.showHideEquipClustersCount(1, false);
                    this.showHideEquipClustersCount(0, false);

                    if (fnAfterShowEquip) {
                        fnAfterShowEquip.apply(this);
                    }
                    */

                    var bodyContainer = Ext.ComponentQuery.query('#bodyNuovoContainer')[0];

                    bodyContainer.animateActiveItem(
                        '#dettaglioVeicoloNuovoContainer',
                        {
                            type: 'slide',
                            direction:'left'
                        }
                    );
                }
            }
        });

    },

    loadDatiTecniciInfoVeicolo: function(veicoloCodice) {
        var datiTecniciStore = Ext.data.StoreManager.lookup('DatiTecniciInfoVeicoloNuovoStore');
        datiTecniciStore.load({
            params: {
                veicolo_codice: veicoloCodice
            },
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }
                }
            },
        }, this);

    },

    loadEquipInfoVeicolo: function(veicoloCodice) {
        var equipStore = Ext.data.StoreManager.lookup('EquipInfoVeicoloNuovoStore');
        equipStore.load({
            params: {
                veicolo_codice: veicoloCodice
            },
            callback: function (records, operation, success) {
                var equipCount = 0;

                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    equipCount = equipStore.getCount();
                }

                var equipLabel = Ext.ComponentQuery.query('#sintesiEquipInfoVeicoloNuovoLabel')[0];
                equipLabel.setData({numEquip: equipCount});
            },
        }, this);

    },

    loadGraficoInfoVeicolo: function(veicoloCodice) {
        var graficoStore = Ext.data.StoreManager.lookup('GraficoInfoVeicoloNuovoStore');
        graficoStore.load({
            params: {
                veicolo_codice: veicoloCodice
            },
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    var graficoCount = graficoStore.getCount();
                    var graficoChart = Ext.ComponentQuery.query('#graficoInfoVeicoloNuovoChart')[0];
                    var msgCortesiaLabel = Ext.ComponentQuery.query('#messaggioGraficoInfoVeicoloNuovoLabel')[0];

                    if (graficoCount > 0) {
                        // Visualizzo il grafico
                        graficoChart.setHidden(false);
                        msgCortesiaLabel.setHidden(true);
                    } else {
                        // Non ci sono valori da rappresentare nel grafico.
                        // Visualizzo un messaggio di cortesia al posto del grafico.
                        graficoChart.setHidden(true);
                        msgCortesiaLabel.setHidden(false);
                    }
                }
            },
        }, this);
    },

    showEsitoSalvaDettaglioVeicolo: function(veicoloModel) {
        var testoEsitoLabel = Ext.ComponentQuery.query('#testoEsitoVeicoloNuovoLabel')[0];
        testoEsitoLabel.setData(veicoloModel.getData());

        var veicoloBasePrezzoLabel = Ext.ComponentQuery.query('#veicoloBasePrezzoEsitoVeicoloNuovoLabel2')[0];
        veicoloBasePrezzoLabel.setData(veicoloModel.getData());

        var equipaggiamentiPrezzoLabel = Ext.ComponentQuery.query('#equipaggiamentiPrezzoEsitoVeicoloNuovoLabel2')[0];
        equipaggiamentiPrezzoLabel.setData(veicoloModel.getData());

        var totalePrezzoLabel = Ext.ComponentQuery.query('#totalePrezzoEsitoVeicoloNuovoLabel2')[0];
        totalePrezzoLabel.setData(veicoloModel.getData());

        var bodyContainer = Ext.ComponentQuery.query('#bodyNuovoContainer')[0];

        bodyContainer.animateActiveItem(
            '#esitoVeicoloNuovoContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );
    },

    syncEquipDettVeicolo: function() {
        var veicoloModel = Infocar.app.dettaglioVeicoloNuovoModel;
        var veicoloCodice = veicoloModel.get('codice');

        var logicaCombobox = Ext.ComponentQuery.query('#logicaDettVeicoloNuovoCombobox')[0];
        var logicaCodice = logicaCombobox.getValue();

        /*
        var equipClustersStore = Ext.data.StoreManager.lookup('EquipClustersDettVeicoloNuovoStore');
        equipClustersStore.each(function(record){
            record.setDirty();
        });
        */
        var equipStore = Ext.data.StoreManager.lookup('EquipDettVeicoloNuovoStore');

        var equipaggiamenti = this.getAllEquipaggiamentiDettVeicoloNuovo(equipStore);
        var numEquip = equipaggiamenti.length;
        for(var i=0; i<numEquip; i++) {
            equipaggiamenti[i].setDirty();
        }

        equipStore.syncWithListener({
            scope: this,
            params: {
                veicolo_codice: veicoloCodice,
                logica_codice: logicaCodice
            },
            success: function (store, operation) {
                // TODO DEBUG
                //console.log("equipStore.syncWithListener.write: operation["+ operation +"]");

                var responseData = Ext.decode(operation.getResponse().responseText,false);
                /*
                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }
                    */

                var descEquipSelezionato = responseData.message;

                //this.showEquipaggiamenti();

                this.loadDettaglioVeicolo();

                Infocar.app.hideMask();

                var esitoChk = this.checkSelEquipRicorsiva(descEquipSelezionato);

                if (! esitoChk) {
                    this.showInfoSelezioneEquip();
                }
            },
            failure: function (proxy, response, operation, eOpts) {
                // TODO DEBUG
                //console.log("equipStore.syncWithListener.exception: operation["+ operation +"]");

                Infocar.app.hideMask();

                Infocar.app.showSyncErrorMessage(response, operation);
            }
        });

    },

    showTestataDettVeicolo: function() {
        var veicoloModel = Infocar.app.dettaglioVeicoloNuovoModel;

        // Dati di testata
        var descLabel = Ext.ComponentQuery.query('#descDettVeicoloNuovoLabel');
        Ext.Array.each(descLabel, function(item, index, ary) {
            item.setData(veicoloModel.getData());
        });

        var prezzoBaseLabel = Ext.ComponentQuery.query('#prezzoBaseDettVeicoloNuovoLabel');
        Ext.Array.each(prezzoBaseLabel, function(item, index, ary) {
            item.setData(veicoloModel.getData());
        });

        var totaleLabel = Ext.ComponentQuery.query('#totaleDettVeicoloNuovoLabel');
        Ext.Array.each(totaleLabel, function(item, index, ary) {
            item.setData(veicoloModel.getData());
        });

        var veicoloMiniImg = Ext.ComponentQuery.query('#dettaglioVeicoloNuovoImg');
        Ext.Array.each(veicoloMiniImg, function(item, index, ary) {
            item.setSrc(veicoloModel.get('urlImg'));
        });

    },

    loadDettaglioVeicolo: function() {
        var veicoloModel = Infocar.app.dettaglioVeicoloNuovoModel;
        var veicoloCodice = veicoloModel.get('codice');

        var veicoloModelClass = Ext.ModelManager.getModel('Infocar.model.DettaglioVeicoloNuovoModel');
        veicoloModelClass.load(0, {
            params: {
                veicolo_codice: veicoloCodice,
            },
            scope: this,
            success: function(record, operation) {
                var responseData = Ext.decode(operation.getResponse().responseText,false);

                if(responseData.message !== null){
                    Ext.Msg.alert("Attenzione", responseData.message);
                }

                // Salvo il model del veicolo nuovo in una property globale
                var veicoloModel = record;
                Infocar.app.dettaglioVeicoloNuovoModel = veicoloModel;

                this.showTestataDettVeicolo();
            },
            failure: function(record, operation) {
                Infocar.app.showLoadErrorMessage(operation);

                var salvaButton = Ext.ComponentQuery.query('#salvaDettaglioVeicoloNuovoButton')[0];
                salvaButton.disable();
            }
        }, this);
    },

    initClusterButtons: function(equipaggiamenti) {
        //var equipClustersStore = Ext.data.StoreManager.lookup('EquipClustersDettVeicoloNuovoStore');

        var buttonsClusters = Ext.ComponentQuery.query('#clustersDettVeicoloNuovoButtons [clusterCodice]');

        var clusterIniziale = null;

        // Conto il numero di equipaggiamenti di ogni cluster e
        // disabilito i bottoni dei cluster che non hanno equipaggiamenti.

        // Scorro i bottoni dei cluster
        for(var i=0; i<buttonsClusters.length; i++) {

            var buttonCluster = buttonsClusters[i];
            var buttonClusterCodice = buttonCluster.clusterCodice;

            if (buttonClusterCodice !== 'tutti'  &&  buttonClusterCodice !== 'riepilogo') {
                var count = 0;

                //var equipaggiamenti = equipClustersStore.getRange();
                for(var n=0; n<equipaggiamenti.length; n++) {
                    var equipModel = equipaggiamenti[n];
                    var equipClusterCodice = equipModel.get('cluster_codice');
                    var statoEquip = equipModel.get('stato');
                    var abbinamentoFlag = equipModel.get('abbinamentoFlag');

                    if (equipClusterCodice && equipClusterCodice !== '') {

                        if (equipClusterCodice.indexOf(buttonClusterCodice) != -1) {
                            count++;
                        }
                    }
                }

                if (count > 0) {
                    buttonsClusters[i].setDisabled(false);

                    if (! clusterIniziale) {
                        clusterIniziale = buttonsClusters[i];
                    }

                } else {
                    buttonsClusters[i].setDisabled(true);
                }
            }
        }

        // Seleziono il bottone del primo cluster con almeno un equipaggiamento
        var clusterSegmentedButtons = Ext.ComponentQuery.query('#clustersDettVeicoloNuovoButtons')[0];
        if (! clusterIniziale) {
            clusterIniziale = clusterSegmentedButtons.down('#tuttiClusterDettVeicoloNuovoButton');
        }
        clusterSegmentedButtons.setPressedButtons([clusterIniziale]);

        return clusterIniziale;
    },

    resetLogicaCombobox: function() {
        var logicaCombobox = Ext.ComponentQuery.query('#logicaDettVeicoloNuovoCombobox')[0];
        logicaCombobox.suspendEvents();
        logicaCombobox.setValue('0');
        logicaCombobox.resumeEvents(true);
    },

    resetOrdinamentoCombobox: function() {
        var ordinamentoCombobox = Ext.ComponentQuery.query('#ordinamentoRicNuovoComboBox')[0];
        ordinamentoCombobox.suspendEvents();
        ordinamentoCombobox.setValue('0');
        ordinamentoCombobox.resumeEvents(true);
    },

    resetCercaEquipVeicoloTextbox: function() {
        var cercaTextbox = Ext.ComponentQuery.query('#cercaDettVeicoloNuovoTextbox')[0];
        cercaTextbox.suspendEvents();
        cercaTextbox.setValue('');
        cercaTextbox.resumeEvents(true);
    },

    launch: function() {

    },

    setCustomProperties: function() {
        var cmp;

        // Titoli schermate

        cmp = Ext.ComponentQuery.query("#ricercaNuovoContainer")[0];
        cmp.Titolo = '<span class="nomeModuloTitoloSchermataTopBarSpanCls">VENDITA NUOVO</span> >'+
            ' <img src="resources/images/10-ipad_infocar_done_18.png" class="iconaTitoloSchermataTopBarImgCls">'+
            ' <span class="nomeSchermataTitoloSchermataTopBarSpanCls">RICERCA RITIRO</span>';

        cmp = Ext.ComponentQuery.query("#dettaglioVeicoloNuovoContainer")[0];
        cmp.Titolo = '<span class="nomeModuloTitoloSchermataTopBarSpanCls">VENDITA NUOVO</span> >'+
            ' <img src="resources/images/49-ipad-portrait_03.png" class="iconaTitoloSchermataTopBarImgCls">'+
            ' <span class="nomeSchermataTitoloSchermataTopBarSpanCls">DETTAGLIO ALLESTIMENTO</span>';

        cmp = Ext.ComponentQuery.query("#infoVeicoloNuovoContainer")[0];
        cmp.Titolo = '<span class="nomeModuloTitoloSchermataTopBarSpanCls">VENDITA NUOVO</span> >'+
            ' <img src="resources/images/49-ipad-portrait_03.png" class="iconaTitoloSchermataTopBarImgCls">'+
            ' <span class="nomeSchermataTitoloSchermataTopBarSpanCls">DETTAGLI VEICOLO</span>';

        cmp = Ext.ComponentQuery.query("#esitoVeicoloNuovoContainer")[0];
        cmp.Titolo = '<span class="nomeModuloTitoloSchermataTopBarSpanCls">VENDITA NUOVO</span> >'+
            ' <img src="resources/images/23-ipad-portrait_03.png" class="iconaTitoloSchermataTopBarImgCls">'+
            ' <span class="nomeSchermataTitoloSchermataTopBarSpanCls">ESITO</span>';

        cmp = Ext.ComponentQuery.query("#generaleInfoVeicoloNuovoContainer")[0];
        cmp.Titolo = '<span class="nomeModuloTitoloSchermataTopBarSpanCls">VENDITA NUOVO</span> >'+
            ' <img src="resources/images/49-ipad-portrait_03.png" class="iconaTitoloSchermataTopBarImgCls">'+
            ' <span class="nomeSchermataTitoloSchermataTopBarSpanCls">DETTAGLI VEICOLO</span>';

        cmp = Ext.ComponentQuery.query("#datiTecniciInfoVeicoloNuovoContainer")[0];
        cmp.Titolo = '<span class="nomeModuloTitoloSchermataTopBarSpanCls">VENDITA NUOVO</span> >'+
            ' <img src="resources/images/dati_tecnici.png" class="iconaTitoloSchermataTopBarImgCls">'+
            ' <span class="nomeSchermataTitoloSchermataTopBarSpanCls">DATI TECNICI DETTAGLIATI</span>';

        cmp = Ext.ComponentQuery.query("#equipInfoVeicoloNuovoContainer")[0];
        cmp.Titolo = '<span class="nomeModuloTitoloSchermataTopBarSpanCls">VENDITA NUOVO</span> >'+
            ' <img src="resources/images/20-ipad-portrait_done_03.png" class="iconaTitoloSchermataTopBarImgCls">'+
            ' <span class="nomeSchermataTitoloSchermataTopBarSpanCls">EQUIPAGGIAMENTI</span>';


        // Ricerca Nuovo

        cmp = Ext.ComponentQuery.query("#ricercaNuovoForm")[0];
        cmp.ricercaTargaFlag = "N";


        // Dettaglio Veicolo Nuovo

        cmp = Ext.ComponentQuery.query("#tipoVeicoloClusterDettVeicoloNuovoButton")[0];
        cmp.clusterCodice = "TVEI_";

        cmp = Ext.ComponentQuery.query("#esterniClusterDettVeicoloNuovoButton")[0];
        cmp.clusterCodice = "ESTE_";

        cmp = Ext.ComponentQuery.query("#interniClusterDettVeicoloNuovoButton")[0];
        cmp.clusterCodice = "INTE_";

        cmp = Ext.ComponentQuery.query("#sicurezzaClusterDettVeicoloNuovoButton")[0];
        cmp.clusterCodice = "SICU_";

        cmp = Ext.ComponentQuery.query("#comfortClusterDettVeicoloNuovoButton")[0];
        cmp.clusterCodice = "COMF_";

        cmp = Ext.ComponentQuery.query("#serviziClusterDettVeicoloNuovoButton")[0];
        cmp.clusterCodice = "SERV_";

        cmp = Ext.ComponentQuery.query("#pacchettiClusterDettVeicoloNuovoButton")[0];
        cmp.clusterCodice = "PACK_";

        cmp = Ext.ComponentQuery.query("#tuttiClusterDettVeicoloNuovoButton")[0];
        cmp.clusterCodice = "tutti";

        cmp = Ext.ComponentQuery.query("#riepilogoClusterDettVeicoloNuovoButton")[0];
        cmp.clusterCodice = "riepilogo";

    },

    getView: function() {
        var nuovoView = this.getNuovoView();

        return nuovoView;
    },

    initTitoloTopBar: function(view) {
        var bodyContainer = view.down('#bodyNuovoContainer');
        var activeBodyItem = bodyContainer.getActiveItem();
        if (activeBodyItem) {
            var topBarCtrl = this.getApplication().getController('Infocar.controller.TopBarController');
            topBarCtrl.setTitoloFromContainer(bodyContainer, activeBodyItem);
        }
    },

    agganciaEventi: function() {
        // TODO DEBUG
        //console.log('agganciaEventi');

        var equipList = Ext.ComponentQuery.query("#equipDettVeicoloNuovoList")[0];

        equipList.addListener({
            tap: {
                fn: this.onDescEquipDettVeicoloTap,
                element: 'innerElement',
                delegate: "img[class='statoEquipDettVeicoloNuovoImgCls']",
                scope: this
            }
        });
        equipList.addListener({
            tap: {
                fn: this.onDescEquipDettVeicoloTap,
                element: 'innerElement',
                delegate: "span[class='descEquipDettVeicoloNuovoSpanCls']",
                scope: this
            }
        });

        equipList.addListener({
            tap: {
                fn: this.onInformEquipDettVeicoloDataitemButtonTap,
                element: 'innerElement',
                delegate: "img[class='infoEquipDettVeicoloNuovoImgCls']",
                scope: this
            }
        });

        /*
        var list = new Ext.List({
            tpl: '<tpl for="."><li><img src="{avatar}" /><h1>{name}</h1></li></tpl>',
            listeners: {
                el: {
                    tap: myHandler,
                    delegate: 'img'
                }
            }
        });
        */




    },

    messaggioDebug: function(e, node) {
        // TODO DEBUG

        var codice = e.target.getAttribute('codice');

        var model = Ext.ComponentQuery.query("#equipDettVeicoloNuovoList")[0];


        console.log(this);
        console.log(e);
        console.log(node);
        //console.log(param3);
        //console.log(param4);

        alert(codice);
    },

    onDescEquipDettVeicoloTap: function(e, node) {
        //Ext.Viewport.mask(true);
        Infocar.app.showMask();
        /*
        Ext.Viewport.setMasked({
             xtype: 'loadmask',
             message: 'Loading...'
        });
        */

        var me = this;
        setTimeout(function(){
            // Leggo il codice dell'equipaggiamento valorizzato nel tag all'interno del XTemplate
            var equipStore = Ext.data.StoreManager.lookup('EquipDettVeicoloNuovoStore');

            var equipCodice = e.target.getAttribute('codice');

            var equipModel = equipStore.findRecord('codice', equipCodice, 0, false, true, true);

            // TODO DEBUG
            //console.log(equipModel);

            //this.changeStatoEquipDettVeicolo(equipModel);
            me.changeStatoEquipDettVeicolo(equipModel);
        }, 200);

    },

    onInformEquipDettVeicoloDataitemButtonTap: function(e, node) {
        // Leggo il codice dell'equipaggiamento valorizzato nel tag all'interno del XTemplate
        var equipStore = Ext.data.StoreManager.lookup('EquipDettVeicoloNuovoStore');
        var equipCodice = e.target.getAttribute('codice');
        var equipModel = equipStore.findRecord('codice', equipCodice, 0, false, true, true);

        /*
        var listItem = button.up('#equipDettVeicoloNuovoListItem');
        var equipModel = listItem.getRecord();
        var equipCodice = equipModel.get('codice');
        */

        var informEquipPanel = Ext.ComponentQuery.query('#popupInformEquipDettVeicoloNuovoPanel')[0];

        var informEquipStore = Ext.data.StoreManager.lookup('InformEquipDettVeicoloNuovoStore');

        informEquipStore.load({
            params: {
                equipaggiamento_codice: equipCodice
            },
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    var informEquipModel = informEquipStore.getAt(0);

                    var testoInformEquipContainer = informEquipPanel.down('#testoInformEquipDettVeicoloNuovoContainer');
                    testoInformEquipContainer.getTpl().equipaggiamentoSelez = equipModel.get('descrizione');
                    testoInformEquipContainer.setData(informEquipModel.raw);

                    testoInformEquipContainer.getScrollable().getScroller().scrollTo(0, 0, false);

                    informEquipPanel.show();
                }
            },
            scope: this
        });

    },

    getAllEquipaggiamentiDettVeicoloNuovo: function(equipStore) {
        if (! equipStore) {
            equipStore = Ext.data.StoreManager.lookup('EquipDettVeicoloNuovoStore');
        }

        return equipStore.getData().all;

    }

});