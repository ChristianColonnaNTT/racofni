/*
 * File: app/controller/RicercaUsatoController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Infocar.controller.RicercaUsatoController', {
    extend: 'Ext.app.Controller',

    requires: [
        'Ext.MessageBox',
        'Infocar.view.UsatoView'
    ],

    config: {
        refs: {
            usatoView: {
                autoCreate: true,
                selector: '#usatoView',
                xtype: 'UsatoView'
            }
        },

        control: {
            "button#cercaRicUsatoButton": {
                tap: 'onCercaButtonTap'
            },
            "button#azzeraRicUsatoButton": {
                tap: 'onAzzeraButtonTap'
            },
            "dataview#marcaRicUsatoRisultatoDataView": {
                itemtap: 'onMarcaRisultatoItemTap'
            },
            "button#indietroModelloRicUsatoButton": {
                tap: 'onIndietroModelloButtonTap'
            },
            "dataview#modelloRicUsatoRisultatoDataView": {
                itemtap: 'onModelloRisultatoItemTap'
            },
            "button#indietroAllestimentoRicUsatoButton": {
                tap: 'onIndietroAllestimentoButtonTap'
            },
            "dataview#allestimentoRicUsatoRisultatoDataView": {
                itemtap: 'onAllestimentoRisultatoItemTap'
            },
            "button#indietroDettaglioVeicoloUsatoButton": {
                tap: 'onIndietroDettaglioVeicoloButtonTap'
            },
            "button#equipDettVeicoloUsatoButton": {
                tap: 'onEquipaggiamentiVeicoloButtonTap'
            },
            "button#annullaEquipVeicoloUsatoButton": {
                tap: 'onAnnullaEquipVeicoloButtonTap'
            },
            "button#confermaEquipVeicoloUsatoButton": {
                tap: 'onConfermaEquipVeicoloButtonTap'
            },
            "button#salvaDettaglioVeicoloUsatoButton": {
                tap: 'onSalvaDettaglioVeicoloButtonTap'
            },
            "button#ricercaNuovoEsitoVeicoloUsatoButton": {
                tap: 'onRicercaNuovoEsitoVeicoloButtonTap'
            },
            "button#ricercaStockEsitoVeicoloUsatoButton": {
                tap: 'onRicercaStockEsitoVeicoloButtonTap'
            },
            "button#infoVeicoloUsatoButton": {
                tap: 'onInfoVeicoloButtonTap'
            },
            "button#DatiTecniciInfoVeicoloUsatoButton": {
                tap: 'onDatiTecniciInfoVeicoloButtonTap'
            },
            "button#equipInfoVeicoloUsatoButton": {
                tap: 'onEquipInfoVeicoloButtonTap'
            },
            "button#indietroInfoVeicoloUsatoButton": {
                tap: 'onIndietroInfoVeicoloButtonTap'
            },
            "dataview#equipDettVeicoloUsatoDataView": {
                itemtap: 'onSelezioneEquipVeicoloDataitemtap'
            },
            "container#datiDettVeicoloUsatoFieldSet checkboxfield": {
                check: 'onCheckboxFieldDettVeicoloCheck',
                uncheck: 'onCheckboxFieldDettVeicoloUncheck'
            },
            "formpanel#dettaglioVeicoloUsatoForm togglefield": {
                change: 'onToggleFieldDettVeicoloChange'
            },
            "formpanel#dettaglioVeicoloUsatoForm [attivaSyncFlag='S']": {
                change: 'onFormDettVeicoloChange'
            },
            "image#infoVeicoloUsatoImg": {
                tap: 'onInfoVeicoloImageTap'
            },
            "datepickerfield#dataImmatricDettVeicoloUsatoDatepickerField": {
                change: 'onDataImmatricDatepickerfieldChange'
            },
            "datepicker#dataImmatricDettVeicoloUsatoPicker": {
                show: 'onDataImmatricDatepickerShow'
            },
            "container#coloreEsternoInternoDettVeicoloUsatoContainer selectfield": {
                change: 'onColoreDettVeicoloComboboxChange'
            },
            "selectfield#ordinamentoRicUsatoComboBox": {
                change: 'onOrdinamentoRicercaComboboxChange'
            },
            "datepicker#bolloDettVeicoloUsatoPicker": {
                show: 'onBolloDettVeicoloDatepickerShow'
            },
            "datepicker#revisioneDettVeicoloUsatoPicker": {
                show: 'onRevisioneDettVeicoloDatepickerShow'
            },
            "container#usatoView": {
                initialize: 'onUsatoViewInitialize'
            },
            "container#bodyUsatoContainer": {
                activeitemchange: 'onBodyContainerActiveItemChange'
            },
            "button#stampaEsitoVeicoloUsatoButton": {
                tap: 'onStampaEsitoVeicoloButtonTap'
            },
            "textfield#ripristinoPrezzoDettVeicoloUsatoField": {
                keyup: 'onRipristinoPrezzoDettVeicoloFieldKeyup'
            },
            "textfield#kmPercorsiDettVeicoloUsatoField": {
                keyup: 'onKmPercorsiDettVeicoloFieldKeyup'
            }
        }
    },

    onCercaButtonTap: function(button, e, eOpts) {
        //var button = Ext.ComponentQuery.query('#cercaRicUsatoButton')[0];
        button.setText('AGGIORNA RICERCA');

        var descrizioneRicField = Ext.ComponentQuery.query('#descrizioneRicercaUsatoField')[0];
        var descRic = descrizioneRicField.getValue();

        var ricercaTargaFlag = false;

        var patterns = Infocar.app.patternsRicercaTarga;
        for(var i=0; i<patterns.length; i++) {
            var patternRegExp = new RegExp(patterns[i]);
            if (patternRegExp.test(descRic)) {
                ricercaTargaFlag = true;
                break;
            }
        }

        var ricercaForm = Ext.ComponentQuery.query('#ricercaUsatoForm')[0];

        if (ricercaTargaFlag) {
            // L'utente ha inserito una targa nella textbox descrizione.
            // Salto direttamente all'elenco allestimenti.

            ricercaForm.ricercaTargaFlag = 'S';

            //var indietroAllestimentoButton = Ext.ComponentQuery.query('#indietroAllestimentoRicUsatoButton')[0];
            //indietroAllestimentoButton.setHidden(true);

            var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaUsatoHidden')[0];
            marcaHidden.setValue('');

            var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaUsatoHidden')[0];
            modelloHidden.setValue('');

            var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaUsatoHidden')[0];
            allestimentoHidden.setValue('');

            this.loadAllestimenti();
        } else {
            //ricercaForm.ricercaTargaFlag = 'N';

            var ricUsatoRisultatoContainer = Ext.ComponentQuery.query('#ricercaUsatoRisultatoContainer')[0];
            var activeRisultatoRicItem = ricUsatoRisultatoContainer.getActiveItem();
            var tipoRisultatoRic = activeRisultatoRicItem.getItemId();

            if (tipoRisultatoRic === 'marcaRicUsatoRisultatoContainer') {
                this.loadMarche();
            } else if (tipoRisultatoRic === 'modelloRicUsatoRisultatoContainer') {
                this.loadModelli();
            } else if (tipoRisultatoRic === 'allestimentoRicUsatoRisultatoContainer') {
                this.loadAllestimenti();
            }
        }

    },

    onAzzeraButtonTap: function(button, e, eOpts) {
        this.resetRicerca();

        this.loadMarche();

        // Visualizzo la schermata della lista marche
        var ricUsatoRisultatoContainer = Ext.ComponentQuery.query('#ricercaUsatoRisultatoContainer')[0];
        ricUsatoRisultatoContainer.animateActiveItem(
            '#marcaRicUsatoRisultatoContainer',
            {
                type: 'slide',
                direction:'right'
            }
        );

    },

    onMarcaRisultatoItemTap: function(dataview, index, target, record, e, eOpts) {
        var marcaModel = record;

        var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaUsatoHidden')[0];
        marcaHidden.setValue(marcaModel.get('codice'));

        this.loadModelli();
    },

    onIndietroModelloButtonTap: function(button, e, eOpts) {
        var ricUsatoRisultatoContainer = Ext.ComponentQuery.query('#ricercaUsatoRisultatoContainer')[0];
        ricUsatoRisultatoContainer.animateActiveItem(
            '#marcaRicUsatoRisultatoContainer',
            {
                type: 'slide',
                direction: 'right'
            }
        );
    },

    onModelloRisultatoItemTap: function(dataview, index, target, record, e, eOpts) {
        var modelloModel = record;

        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaUsatoHidden')[0];
        modelloHidden.setValue(modelloModel.get('codice'));

        this.resetOrdinamentoCombobox();

        this.loadAllestimenti();
    },

    onIndietroAllestimentoButtonTap: function(button, e, eOpts) {
        var ricercaForm = Ext.ComponentQuery.query('#ricercaUsatoForm')[0];

        if (ricercaForm.ricercaTargaFlag === 'S') {
            // Si e' giunti alla lista allestimento attraverso
            // una ricerca per targa.
            // Premendo il bottone indietro si torna direttamente
            // alla lista marche.
            this.resetRicerca();

            this.loadMarche();

            // Visualizzo la schermata della lista marche
            var ricUsatoRisultatoContainer = Ext.ComponentQuery.query('#ricercaUsatoRisultatoContainer')[0];
            ricUsatoRisultatoContainer.animateActiveItem(
                '#marcaRicUsatoRisultatoContainer',
                {
                    type: 'slide',
                    direction:'right'
                }
            );

            ricercaForm.ricercaTargaFlag = 'N';

        } else {

            var ricUsatoRisultatoContainer = Ext.ComponentQuery.query('#ricercaUsatoRisultatoContainer')[0];
            ricUsatoRisultatoContainer.animateActiveItem(
                '#modelloRicUsatoRisultatoContainer',
                {
                    type: 'slide',
                    direction: 'right'
                }
            );
        }
    },

    onAllestimentoRisultatoItemTap: function(dataview, index, target, record, e, eOpts) {
        var allestimentoModel = record;
        var allestimentoCodice = allestimentoModel.get('codice');

        var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaUsatoHidden')[0];
        var marcaCodice = marcaHidden.getValue();

        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaUsatoHidden')[0];
        var modelloCodice = modelloHidden.getValue();

        var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaUsatoHidden')[0];
        allestimentoHidden.setValue(allestimentoCodice);

        var veicoloUsatoModelClass = Ext.ModelManager.getModel('Infocar.model.DettaglioVeicoloUsatoModel');
        veicoloUsatoModelClass.load(0, {
            params: {
                marca_codice: marcaCodice,
                modello_codice: modelloCodice,
                allestimento_codice: allestimentoCodice
            },
            scope: this,
            success: function(record, operation) {
                var responseData = Ext.decode(operation.getResponse().responseText,false);

                if(responseData.message !== null){
                    Ext.Msg.alert("Attenzione", responseData.message);
                }

                var veicoloUsatoModel = record;

                this.initFormDettaglioVeicolo(veicoloUsatoModel);

                this.loadColoreEsternoCombobox(veicoloUsatoModel.get('coloreEsterno_codice'));
                this.loadColoreInternoCombobox(veicoloUsatoModel.get('coloreInterno_codice'));

                // Azzerro la label che visualizza il numero degli equipaggiamenti selezionati
                var numEquipLabel = Ext.ComponentQuery.query('#numEquipDettVeicoloUsatoLabel')[0];
                numEquipLabel.setData({"numEquipSelezionati": 0});

                // Visualizzo la schermata di dettaglio veicolo
                var bodyContainer = Ext.ComponentQuery.query('#bodyUsatoContainer')[0];

                bodyContainer.animateActiveItem(
                    '#dettaglioVeicoloUsatoContainer',
                    {
                        type: 'slide',
                        direction:'left'
                    }
                );

                var dettVeicoloUsatoForm = Ext.ComponentQuery.query('#dettaglioVeicoloUsatoForm')[0];
                if (dettVeicoloUsatoForm.isRendered()) {
                    dettVeicoloUsatoForm.getScrollable().getScroller().scrollTo(0, 0, false);
                }

                // Controlli sulla data immatricolazione
                var datepickerFlag = false;
                var dataImmatricDateField = Ext.ComponentQuery.query('#dataImmatricDettVeicoloUsatoDatepickerField')[0];
                if (veicoloUsatoModel.get('dataImmatricolazione')) {
                    if (veicoloUsatoModel.get('ricercaTargaFlag') === 'N') {
                        // Non e' una ricerca per targa, datepicker obbligatorio
                        datepickerFlag = true;
                    }
                } else {
                    dataImmatricDateField.suspendEvents();
                    dataImmatricDateField.setValue(new Date());
                    dataImmatricDateField.resumeEvents(true);

                    datepickerFlag = true;
                }

                if (datepickerFlag) {
                    //dataImmatricDateField.showPicker();

                    dataImmatricDateField.annullaButtonFlag = 'N';
                    dataImmatricDateField.focus();
                } else {
                    dataImmatricDateField.annullaButtonFlag = 'S';
                }
            },
            failure: function(record, operation) {
                Infocar.app.showLoadErrorMessage(operation);

                var salvaButton = Ext.ComponentQuery.query('#salvaDettaglioVeicoloUsatoButton')[0];
                salvaButton.disable();
            }
        }, this);

    },

    onIndietroDettaglioVeicoloButtonTap: function(button, e, eOpts) {
        var bodyContainer = Ext.ComponentQuery.query('#bodyUsatoContainer')[0];

        bodyContainer.animateActiveItem(
            '#ricercaUsatoContainer',
            {
                type: 'slide',
                direction:'right'
            }
        );
    },

    onEquipaggiamentiVeicoloButtonTap: function(button, e, eOpts) {
        var dettaglioVeicoloUsatoForm = Ext.ComponentQuery.query('#dettaglioVeicoloUsatoForm')[0];
        var veicoloUsatoModel = dettaglioVeicoloUsatoForm.getRecord();
        var veicoloCodice = veicoloUsatoModel.get('codice');

        var equipStore = Ext.data.StoreManager.lookup('EquipDettVeicoloUsatoStore');
        equipStore.load({
            params: {
                veicolo_codice: veicoloCodice
            },
            scope: this,
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    var equipDataview = Ext.ComponentQuery.query('#equipDettVeicoloUsatoDataView')[0];
                    equipDataview.deselectAll();

                    equipStore.each(function (item, index, length) {
                        var equipModel = item;
                        var statoEquip = equipModel.get('stato');

                        if (statoEquip === 'ATT') {
                            equipDataview.select(equipModel, true, true);
                        }
                    });

                    var equipPanel = Ext.ComponentQuery.query('#equipDettVeicoloUsatoPanel')[0];

                    Ext.Viewport.setMasked(equipPanel);
                }
            }
        });


    },

    onAnnullaEquipVeicoloButtonTap: function(button, e, eOpts) {
        var equipPanel = button.up('#equipDettVeicoloUsatoPanel');
        equipPanel.hide();
    },

    onConfermaEquipVeicoloButtonTap: function(button, e, eOpts) {
        // Deseleziono tutti i model degli equipaggiamenti dello store
        var equipStore = Ext.data.StoreManager.lookup('EquipDettVeicoloUsatoStore');

        equipStore.each(function (item, index, length) {
            var equipModel = item;
            var statoEquip = equipModel.get('stato');

            if (statoEquip === 'ATT') {
                equipModel.set('stato', 'DIS');
            }
        });

        // Seleziono i model degli equipaggiamenti selezionati dall'utente nel dataview
        var equipDataview = Ext.ComponentQuery.query('#equipDettVeicoloUsatoDataView')[0];
        var aryEquipSelected = equipDataview.getSelection();

        for(var i=0; i<aryEquipSelected.length; i++) {
            var equipModel = aryEquipSelected[i];
            var statoEquip = equipModel.get('stato');

            if (statoEquip === 'DIS') {
                equipModel.set('stato', 'ATT');
            }
        }

        // Imposto dirty=true in tutti model dello store prima di
        // eseguire la sync per inviare tutti i record al back-end.
        equipStore.each(function (item, index, length) {
            var equipModel = item;
            equipModel.setDirty();
        });


        var dettaglioVeicoloUsatoForm = Ext.ComponentQuery.query('#dettaglioVeicoloUsatoForm')[0];
        var veicoloUsatoModel = dettaglioVeicoloUsatoForm.getRecord();
        var veicoloCodice = veicoloUsatoModel.get('codice');

        /* I params vengono impostati dal syncWithListener
        var equipProxy = equipStore.getProxy();
        equipProxy.setExtraParams({
            veicolo_codice: veicoloCodice
        });
        */

        equipStore.syncWithListener({
            scope: this,
            params: {
                veicolo_codice: veicoloCodice
            },
            success: function (store, operation) {
                // DEBUG
                //console.log("equipStore.syncWithListener.write: operation["+ operation +"]");

                var responseData = Ext.decode(operation.getResponse().responseText,false);

                if(responseData.message !== null){
                    Ext.Msg.alert("Attenzione", responseData.message);
                }

                var numEquipSel = 0;
                equipStore.each(function (item, index, length) {
                    var equipModel = item;
                    var statoEquip = equipModel.get('stato');

                    if (statoEquip === 'ATT') {
                        numEquipSel++;
                    }
                });

                var numEquipLabel = Ext.ComponentQuery.query('#numEquipDettVeicoloUsatoLabel')[0];
                numEquipLabel.setData({"numEquipSelezionati": numEquipSel});

                this.syncDettaglioVeicolo();
            },
            failure: function (proxy, response, operation, eOpts) {
                // DEBUG
                //console.log("equipStore.syncWithListener.exception: operation["+ operation +"]");

                Infocar.app.showSyncErrorMessage(response, operation);
            }
        });

        var equipPanel = button.up('#equipDettVeicoloUsatoPanel');
        equipPanel.hide();

    },

    onSalvaDettaglioVeicoloButtonTap: function(button, e, eOpts) {
        var dettaglioVeicoloUsatoForm = Ext.ComponentQuery.query('#dettaglioVeicoloUsatoForm')[0];
        var veicoloUsatoModel = dettaglioVeicoloUsatoForm.getRecord();
        //var veicoloCodice = veicoloUsatoModel.get('codice');

        // Alzo il flag nel model da salvare per indicare al
        // back-end che si tratta dell'ultima save che porta
        // alla schermata di esito finale.
        veicoloUsatoModel.set('salvataggioFlag', 'S');

        // Riverso i dati della form nel suo model
        dettaglioVeicoloUsatoForm.updateRecord(veicoloUsatoModel);

        veicoloUsatoModel.save({
            scope: this,
            success: function(record, operation) {
                var responseData = Ext.decode(operation.getResponse().responseText,false);

                if(responseData.message !== null){
                    Ext.Msg.alert("Attenzione", responseData.message);
                }

                var veicoloUsatoModel = record;

                this.showEsitoSalvaDettaglioVeicolo(veicoloUsatoModel);
            },
            failure: function(record, operation) {
                Infocar.app.showLoadErrorMessage(operation);

                // TODO
                if (Infocar.app.modalitaSviluppoFlag === 'S') {
                    this.showEsitoSalvaDettaglioVeicolo(veicoloUsatoModel);
                }
            }
        }, this);



    },

    onRicercaNuovoEsitoVeicoloButtonTap: function(button, e, eOpts) {
        Infocar.app.showRicercaNuovo();
    },

    onRicercaStockEsitoVeicoloButtonTap: function(button, e, eOpts) {
        Infocar.app.showRicercaStock();
    },

    onInfoVeicoloButtonTap: function(button, e, eOpts) {
        var dettaglioVeicoloUsatoForm = Ext.ComponentQuery.query('#dettaglioVeicoloUsatoForm')[0];
        var veicoloUsatoModel = dettaglioVeicoloUsatoForm.getRecord();
        var veicoloCodice = veicoloUsatoModel.get('codice');

        var infoVeicoloModelClass = Ext.ModelManager.getModel('Infocar.model.InfoVeicoloUsatoModel');
        infoVeicoloModelClass.load(0, {
            params: {
                veicolo_codice: veicoloCodice
            },
            scope: this,
            success: function(record, operation) {
                var responseData = Ext.decode(operation.getResponse().responseText,false);

                if(responseData.message !== null){
                    Ext.Msg.alert("Attenzione", responseData.message);
                }

                var infoVeicoloModel = record;

                this.loadDatiTecniciInfoVeicolo(veicoloCodice);

                this.loadEquipInfoVeicolo(veicoloCodice);

                this.loadGraficoInfoVeicolo(veicoloCodice);

                // Dati di testata
                var descLabel = Ext.ComponentQuery.query('#descInfoVeicoloUsatoLabel');
                Ext.Array.each(descLabel, function(item, index, ary) {
                    item.setData(infoVeicoloModel.getData());
                });

                var infoVeicoloMiniImg = Ext.ComponentQuery.query('#infoVeicoloUsatoMiniImg');
                Ext.Array.each(infoVeicoloMiniImg, function(item, index, ary) {
                    item.setSrc(infoVeicoloModel.get('infoMiniUrlImg'));
                });

                // Dati del corpo
                var infoVeicoloImg = Ext.ComponentQuery.query('#infoVeicoloUsatoImg')[0];
                infoVeicoloImg.setSrc(infoVeicoloModel.get('infoUrlImg'));

                var testoLabel = Ext.ComponentQuery.query('#testoInfoVeicoloUsatoLabel')[0];
                testoLabel.setData(infoVeicoloModel.getData());

                var datiTecniciLabel = Ext.ComponentQuery.query('#sintesiDatiTecniciInfoVeicoloUsatoLabel')[0];
                datiTecniciLabel.setData(infoVeicoloModel.getData());

                //var graficoStockImg = Ext.ComponentQuery.query('#sintesiGraficoStockInfoVeicoloUsatoImg')[0];
                //graficoStockImg.setSrc(infoVeicoloModel.get('graficoStockUrlImg'));

                var datiStockLabel = Ext.ComponentQuery.query('#sintesiDatiStockInfoVeicoloUsatoLabel')[0];
                datiStockLabel.setData(infoVeicoloModel.getData());


                // Visualizzo la schermata generale info veicolo
                var bodyContainer = Ext.ComponentQuery.query('#bodyUsatoContainer')[0];

                bodyContainer.animateActiveItem(
                    '#infoVeicoloUsatoContainer',
                    {
                        type: 'slide',
                        direction:'left'
                    }
                );

                var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloUsatoContainer')[0];
                corpoInfoContainer.setActiveItem('#generaleInfoVeicoloUsatoContainer');

                var generaleInfoContainer = Ext.ComponentQuery.query('#generaleInfoVeicoloUsatoContainer')[0];
                if (generaleInfoContainer.isRendered()) {
                    generaleInfoContainer.getScrollable().getScroller().scrollTo(0, 0, false);
                }
            },
            failure: function(record, operation) {
                Infocar.app.showLoadErrorMessage(operation);
            }
        }, this);


    },

    onDatiTecniciInfoVeicoloButtonTap: function(button, e, eOpts) {
        var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloUsatoContainer')[0];

        corpoInfoContainer.animateActiveItem(
            '#datiTecniciInfoVeicoloUsatoContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );
    },

    onEquipInfoVeicoloButtonTap: function(button, e, eOpts) {
        var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloUsatoContainer')[0];

        corpoInfoContainer.animateActiveItem(
            '#equipInfoVeicoloUsatoContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );
    },

    onIndietroInfoVeicoloButtonTap: function(button, e, eOpts) {
        var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloUsatoContainer')[0];
        activeContainer = corpoInfoContainer.getActiveItem().getItemId();

        if (activeContainer === 'generaleInfoVeicoloUsatoContainer') {
            // Sono nella schermata generale info veicolo, torno al dettaglio
            var bodyContainer = Ext.ComponentQuery.query('#bodyUsatoContainer')[0];

            bodyContainer.animateActiveItem(
                '#dettaglioVeicoloUsatoContainer',
                {
                    type: 'slide',
                    direction:'right'
                }
            );
        } else {
            // Sono in una delle due schermate equipaggiamenti info veicolo oppure
            // dati tecnici info veicolo, torno alla schermata generale info veicolo.
            corpoInfoContainer.animateActiveItem(
                '#generaleInfoVeicoloUsatoContainer',
                {
                    type: 'slide',
                    direction:'right'
                }
            );
        }
    },

    onSelezioneEquipVeicoloDataitemtap: function(dataview, index, target, record, e, eOpts) {
        var equipDataitem = target;
        var equipModel = record;
        /*

        var prevDataitem = dataview.itemSelectedDataitem;
        if (prevDataitem) {
            prevDataitem.removeCls('selezioneEquipDettVeicoloUsato');
        }

        dataview.itemSelectedDataitem = equipDataitem;
        dataview.itemSelectedRecord = equipModel;

        equipDataitem.addCls('selezioneEquipDettVeicoloUsato');
        */


    },

    onCheckboxFieldDettVeicoloCheck: function(checkboxfield, e, eOpts) {
        var toggleCmp = Ext.ComponentQuery.query('#'+checkboxfield.toggleItemId)[0];
        var labelCmp = Ext.ComponentQuery.query('#'+toggleCmp.valoreLabelItemId)[0];
        var hiddenCmp = Ext.ComponentQuery.query('#'+toggleCmp.valoreHiddenItemId)[0];

        toggleCmp.enable();

        var labelValue = toggleCmp.getValue() ? 'Si' : 'No';
        var hiddenValue = toggleCmp.getValue() ? 'S' : 'N';

        labelCmp.setHtml(labelValue);
        hiddenCmp.setValue(hiddenValue);
    },

    onCheckboxFieldDettVeicoloUncheck: function(checkboxfield, e, eOpts) {
        var toggleCmp = Ext.ComponentQuery.query('#'+checkboxfield.toggleItemId)[0];
        var labelCmp = Ext.ComponentQuery.query('#'+toggleCmp.valoreLabelItemId)[0];
        var hiddenCmp = Ext.ComponentQuery.query('#'+toggleCmp.valoreHiddenItemId)[0];

        toggleCmp.disable();

        var labelValue = '';
        var hiddenValue = '';

        labelCmp.setHtml(labelValue);
        hiddenCmp.setValue(hiddenValue);
    },

    onToggleFieldDettVeicoloChange: function(togglefield, newValue, oldValue, eOpts) {
        // DEBUG
        //console.log('toggle: itemId['+ togglefield.getItemId() +'] newValue['+ newValue +'] oldValue['+ oldValue +']');

        if (togglefield.valoreLabelItemId && togglefield.valoreHiddenItemId) {
            var labelCmp = Ext.ComponentQuery.query('#'+togglefield.valoreLabelItemId)[0];
            var labelValue = newValue ? 'Si' : 'No';
            labelCmp.setHtml(labelValue);

            var hiddenCmp = Ext.ComponentQuery.query('#'+togglefield.valoreHiddenItemId)[0];
            var hiddenValue = newValue ? 'S' : 'N';
            hiddenCmp.setValue(hiddenValue);
        }

    },

    onFormDettVeicoloChange: function(target) {
        /*
        var fieldId = target.getItemId();
        if (fieldId === 'kmPercorsiDettVeicoloUsatoField'  ||
            fieldId === 'ripristinoPrezzoDettVeicoloUsatoField') {
            target.suspendEvents();
            target.setValue(target.getValue().replace(/[^\d]* /g, ""));
            target.resumeEvents(true);
        }
        */


        var dettaglioVeicoloUsatoForm = Ext.ComponentQuery.query('#dettaglioVeicoloUsatoForm')[0];
        var syncFlag = dettaglioVeicoloUsatoForm.syncDettaglioVeicoloFlag;

        // DEBUG
        //console.log('syncDettaglioVeicolo: syncFlag['+ syncFlag +'] itemId['+ target.getItemId() +'] name['+ target.getName() +'] value['+ target.getValue() +']');

        //if (syncFlag === 'S') {
        //}

        // Eseguo la sync dei dati del dettaglio veicolo
        this.syncDettaglioVeicolo();


    },

    onInfoVeicoloImageTap: function(image, e, eOpts) {
        var photoFullScreenCtrl = Infocar.app.getController('Infocar.controller.PhotoFullScreenController');
        photoFullScreenCtrl.showPhotoFullScreen([image.getSrc()], 0);
    },

    onDataImmatricDatepickerfieldChange: function(datepickerfield, newDate, oldDate, eOpts) {
        /*
        //var dataImmatricAnnullaButton = datepickerfield.down('#annullaDataImmatricDettVeicoloUsatoButton');
        var dataImmatricAnnullaButton = Ext.ComponentQuery.query('#annullaDataImmatricDettVeicoloUsatoButton')[0];
        if (dataImmatricAnnullaButton) {
            dataImmatricAnnullaButton.show();
        }
        */

        var salvaButton = Ext.ComponentQuery.query('#salvaDettaglioVeicoloUsatoButton')[0];
        if (newDate) {
            salvaButton.enable();
        } else {
            salvaButton.disable();
        }
    },

    onDataImmatricDatepickerShow: function(component, eOpts) {
        var dataImmatricDateField = Ext.ComponentQuery.query('#dataImmatricDettVeicoloUsatoDatepickerField')[0];

        var dataImmatricAnnullaButton = Ext.ComponentQuery.query('#annullaDataImmatricDettVeicoloUsatoButton')[0];

        // DEBUG
        //console.log('datepickerShow: annullaButton['+ dataImmatricAnnullaButton +']');

        if (dataImmatricDateField.annullaButtonFlag === 'S') {
            dataImmatricAnnullaButton.setHidden(false);
        } else {
            dataImmatricAnnullaButton.setHidden(true);
            dataImmatricDateField.annullaButtonFlag = 'S';
        }
    },

    onColoreDettVeicoloComboboxChange: function(selectfield, newValue, oldValue, eOpts) {

        // Workaround per attivazione automatica dell'evento onChange su add del colore "Altro..." nello store
        if (newValue === null)  return;

        var descHiddenCmp = Ext.ComponentQuery.query('#'+selectfield.descrizioneHiddenItemId)[0];

        if (newValue === 'ALTRO') {

            var tipoColore;
            if (selectfield.getItemId() === 'coloreEsternoDettVeicoloUsatoCombobox') {
                tipoColore = 'esterno';
            } else {
                tipoColore = 'interno';
            }

            Ext.Msg.prompt(
                'Colore veicolo',
                'Prego inserire il colore '+ tipoColore +' desiderato:',
                function (buttonId, value) {
                    if (buttonId === 'ok') {
                        var coloreCodice = '-1';
                        var coloreDesc = value;

                        var coloreCustomModel;

                        // Rimuovo dalla combobox, se presente, il colore custom
                        // precedentemente inserito dall'utente.
                        var coloreStore = selectfield.getStore();
                        var coloreStoreIdx = coloreStore.find('codice', coloreCodice, 0, false, true, true);
                        if (coloreStoreIdx !== -1)  coloreStore.removeAt(coloreStoreIdx);

                        if (selectfield.getItemId() === 'coloreEsternoDettVeicoloUsatoCombobox') {
                            coloreCustomModel = Ext.create('Infocar.model.ColoreEsternoModel', {
                                "codice": coloreCodice,
                                "descrizione": coloreDesc
                            });
                        } else {
                            coloreCustomModel = Ext.create('Infocar.model.ColoreInternoModel', {
                                "codice": coloreCodice,
                                "descrizione": coloreDesc
                            });
                        }

                        // Inserisco nello store della combobox il
                        // colore custom inserito dall'utente.
                        coloreStore.add(coloreCustomModel);

                        // Seleziono nella combobox il colore appena inserito
                        selectfield.suspendEvents();
                        selectfield.setValue(coloreCodice);
                        selectfield.resumeEvents(true);

                        descHiddenCmp.setValue(coloreDesc);

                        this.syncDettaglioVeicolo();

                    } else if (buttonId === 'cancel') {

                        selectfield.suspendEvents();
                        selectfield.setValue(oldValue);
                        selectfield.resumeEvents(true);
                    }
                },
                this,  // scope
                false, // multiline
                null,  // value
                {
                    maxLength: 30
                }
            );

        } else {

            var coloreModel = selectfield.getRecord();
            var coloreDesc = coloreModel.get('descrizione');

            descHiddenCmp.setValue(coloreDesc);

            this.syncDettaglioVeicolo();
        }


    },

    onOrdinamentoRicercaComboboxChange: function(selectfield, newValue, oldValue, eOpts) {
        this.loadAllestimenti();
    },

    onBolloDettVeicoloDatepickerShow: function(component, eOpts) {
        var bolloDateField = Ext.ComponentQuery.query('#bolloDettVeicoloUsatoDatepickerField')[0];

        if (! bolloDateField.getValue()) {
            bolloDateField.getPicker().setValue(new Date());
        }
    },

    onRevisioneDettVeicoloDatepickerShow: function(component, eOpts) {
        var revisioneDateField = Ext.ComponentQuery.query('#revisioneDettVeicoloUsatoDatepickerField')[0];

        if (! revisioneDateField.getValue()) {
            revisioneDateField.getPicker().setValue(new Date());
        }
    },

    onUsatoViewInitialize: function(component, eOpts) {
        var view = component;

        //var ricUsatoCtrl = this.getController('Infocar.controller.RicercaUsatoController');
        this.setCustomProperties();

        this.initTitoloTopBar(view);

    },

    onBodyContainerActiveItemChange: function(container, value, oldValue, eOpts) {
        var item = value;

        var topBarCtrl = this.getApplication().getController('Infocar.controller.TopBarController');
        topBarCtrl.setTitoloFromContainer(container, item);
    },

    onStampaEsitoVeicoloButtonTap: function(button, e, eOpts) {
        var urlStampa = Infocar.app.stampaEsitoVeicoloUsatoUrl;

        window.open(urlStampa, "stampa", "width=600,height=600,location=no");
    },

    onRipristinoPrezzoDettVeicoloFieldKeyup: function(textfield, e, eOpts) {
        /*
        console.log(textfield);
        console.log(e);
        console.log(eOpts);
        console.log('getValue['+ textfield.getValue() +'] _value['+ textfield._value +']');
        */

        e.stopPropagation();
        e.stopEvent();
        textfield.suspendEvents();
        textfield.setValue(textfield.getValue().replace(/[^\d]*/g, ""));
        textfield.resumeEvents(true);

        return false;
    },

    onKmPercorsiDettVeicoloFieldKeyup: function(textfield, e, eOpts) {
        e.stopPropagation();
        e.stopEvent();
        textfield.suspendEvents();
        textfield.setValue(textfield.getValue().replace(/[^\d]*/g, ""));
        textfield.resumeEvents(true);

        return false;

    },

    resetRicerca: function() {
        // Reset form
        var ricercaForm = Ext.ComponentQuery.query('#ricercaUsatoForm')[0];
        ricercaForm.reset();

        ricercaForm.setValues({
            anno_codice: '0',
            alimentazione_codice: '0',
            carrozzeria_codice: '0'
        });

        // Reset marche
        var marcaStore = Ext.data.StoreManager.lookup('MarcaRicercaUsatoStore');
        marcaStore.removeAll();

        var marcaCount = marcaStore.getCount();
        this.showMarcaNumRisultati(marcaCount);

        // Reset modelli
        var modelloStore = Ext.data.StoreManager.lookup('ModelloRicercaUsatoStore');
        modelloStore.removeAll();

        var modelloCount = modelloStore.getCount();
        this.showModelloNumRisultati(modelloCount);

        // Reset allestimenti
        var allestimentoStore = Ext.data.StoreManager.lookup('AllestimentoRicercaUsatoStore');
        allestimentoStore.removeAll();

        var allestimentoCount = allestimentoStore.getCount();
        this.showAllestimentoNumRisultati(allestimentoCount);

        // Aggiorno la label del bottone "cerca"
        var cercaButton = Ext.ComponentQuery.query('#cercaRicUsatoButton')[0];
        cercaButton.setText('CERCA');

        // Abbasso il flag della ricerca per targa
        ricercaForm.ricercaTargaFlag = 'N';

    },

    showMarcaNumRisultati: function(numRisultati) {
        var marcaNumRisultatiLabel = Ext.ComponentQuery.query('#marcaNumRisultatiLabel')[0];
        marcaNumRisultatiLabel.setHtml(numRisultati + ' Marche');
    },

    showModelloNumRisultati: function(numRisultati) {
        var modelloNumRisultatiLabel = Ext.ComponentQuery.query('#modelloNumRisultatiLabel')[0];
        modelloNumRisultatiLabel.setHtml(numRisultati + ' Modelli');
    },

    showAllestimentoNumRisultati: function(numRisultati) {
        var allestimentoNumRisultatiLabel = Ext.ComponentQuery.query('#allestimentoNumRisultatiLabel')[0];
        allestimentoNumRisultatiLabel.setHtml(numRisultati + ' Allestimenti');
    },

    loadMarche: function() {
        var marcaStore = Ext.data.StoreManager.lookup('MarcaRicercaUsatoStore');

        var indietroAllestimentoButton = Ext.ComponentQuery.query('#indietroAllestimentoRicUsatoButton')[0];
        indietroAllestimentoButton.setHidden(false);

        var ricercaForm = Ext.ComponentQuery.query('#ricercaUsatoForm')[0];

        var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaUsatoHidden')[0];
        marcaHidden.setValue('');

        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaUsatoHidden')[0];
        modelloHidden.setValue('');

        var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaUsatoHidden')[0];
        allestimentoHidden.setValue('');

        marcaStore.load({
            params: ricercaForm.getValues(),
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }
                    var marcaCount = marcaStore.getCount();
                    this.showMarcaNumRisultati(marcaCount);

                    if (marcaCount == 1) {
                        var marcaModel = marcaStore.getAt(0);

                        var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaUsatoHidden')[0];
                        marcaHidden.setValue(marcaModel.get('codice'));

                        var marcaDataview = Ext.ComponentQuery.query('#marcaRicUsatoRisultatoDataView')[0];
                        marcaDataview.select(marcaModel, false);

                        this.loadModelli();
                    }
                }
            },
            scope: this
        });

    },

    loadModelli: function() {
        //var marcaDataview = Ext.ComponentQuery.query('#marcaRicUsatoRisultatoDataView')[0];
        //var selMarcaModel = marcaDataview.getSelection()[0];
        //var marcaCodice = selMarcaModel.get('codice');

        var modelloStore = Ext.data.StoreManager.lookup('ModelloRicercaUsatoStore');

        var indietroAllestimentoButton = Ext.ComponentQuery.query('#indietroAllestimentoRicUsatoButton')[0];
        indietroAllestimentoButton.setHidden(false);

        var ricercaForm = Ext.ComponentQuery.query('#ricercaUsatoForm')[0];

        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaUsatoHidden')[0];
        modelloHidden.setValue('');

        var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaUsatoHidden')[0];
        allestimentoHidden.setValue('');

        modelloStore.load({
        //    params: Ext.Object.merge(
        //        {
        //            marca_codice: marcaCodice,
        //        },
            params: ricercaForm.getValues(),
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    /*
                    var button = Ext.ComponentQuery.query('#cercaRicUsatoButton')[0];
                    button.setText('Aggiorna ricerca');
                    */

                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }
                    var modelloCount = modelloStore.getCount();
                    this.showModelloNumRisultati(modelloCount);

                    if (modelloCount == 1) {
                        var modelloModel = modelloStore.getAt(0);

                        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaUsatoHidden')[0];
                        modelloHidden.setValue(modelloModel.get('codice'));

                        var modelloDataview = Ext.ComponentQuery.query('#modelloRicUsatoRisultatoDataView')[0];
                        modelloDataview.select(modelloModel, false);

                        this.resetOrdinamentoCombobox();

                        this.loadAllestimenti();

                    } else {

                        var ricUsatoRisultatoContainer = Ext.ComponentQuery.query('#ricercaUsatoRisultatoContainer')[0];
                        ricUsatoRisultatoContainer.animateActiveItem(
                            '#modelloRicUsatoRisultatoContainer',
                            {
                                type: 'slide',
                                direction:'left'
                            }
                        );
                    }
                }
            },
            scope: this
        });
    },

    loadAllestimenti: function() {
        /*
        var marcaDataview = Ext.ComponentQuery.query('#marcaRicUsatoRisultatoDataView')[0];
        var marcaModel = marcaDataview.getSelection()[0];
        var marcaCodice = marcaModel.get('codice');

        if (! selModelloModel) {
            var modelloDataview = Ext.ComponentQuery.query('#modelloRicUsatoRisultatoDataView')[0];
            selModelloModel = modelloDataview.getSelection()[0];
        }
        var modelloCodice = selModelloModel.get('codice');
        */

        var allestimentoStore = Ext.data.StoreManager.lookup('AllestimentoRicercaUsatoStore');

        var ricercaForm = Ext.ComponentQuery.query('#ricercaUsatoForm')[0];

        var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaUsatoHidden')[0];
        allestimentoHidden.setValue('');

        // Leggo il codice del criterio di ordinamento
        var ordinamentoCombobox = Ext.ComponentQuery.query('#ordinamentoRicUsatoComboBox')[0];
        var ordinamentoCodice = ordinamentoCombobox.getValue();

        allestimentoStore.load({
            params: Ext.Object.merge(
                {
                    ordinamento_codice: ordinamentoCodice
                },
                ricercaForm.getValues()
            ),
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    /*
                    var button = Ext.ComponentQuery.query('#cercaRicUsatoButton')[0];
                    button.setText('Aggiorna ricerca');
                    */

                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    var allestimentoCount = allestimentoStore.getCount();
                    this.showAllestimentoNumRisultati(allestimentoCount);

                    var ricUsatoRisultatoContainer = Ext.ComponentQuery.query('#ricercaUsatoRisultatoContainer')[0];
                    ricUsatoRisultatoContainer.animateActiveItem(
                        '#allestimentoRicUsatoRisultatoContainer',
                        {
                            type: 'slide',
                            direction:'left'
                        }
                    );
                }
            },
            scope: this
        });

    },

    initToggle: function(toggleCmp) {
        if (toggleCmp.valoreLabelItemId && toggleCmp.valoreHiddenItemId) {
            var labelCmp = Ext.ComponentQuery.query('#'+toggleCmp.valoreLabelItemId)[0];
            var hiddenCmp = Ext.ComponentQuery.query('#'+toggleCmp.valoreHiddenItemId)[0];
            var hiddenValue = hiddenCmp.getValue();

            var toggleValue;
            var labelValue;
            if (hiddenValue === 'S') {
                toggleValue = '1';
                labelValue = 'Si';
            } else {
                toggleValue = '0';
                labelValue = 'No';
                hiddenValue = 'N';
            }

            toggleCmp.setValue(toggleValue);
            labelCmp.setHtml(labelValue);
            hiddenCmp.setValue(hiddenValue);
        }

    },

    initCheckboxToggle: function(checkboxCmp) {
        if (checkboxCmp.toggleItemId) {
            var toggleCmp = Ext.ComponentQuery.query('#'+checkboxCmp.toggleItemId)[0];
            var labelCmp = Ext.ComponentQuery.query('#'+toggleCmp.valoreLabelItemId)[0];
            var hiddenCmp = Ext.ComponentQuery.query('#'+toggleCmp.valoreHiddenItemId)[0];

            var hiddenValue = hiddenCmp.getValue();

            var labelValue;
            if (hiddenValue === 'S') {
                checkboxCmp.check();
                toggleCmp.setValue(1);
                toggleCmp.enable();
                labelValue = 'Si';
            } else if (hiddenValue === 'N') {
                checkboxCmp.check();
                toggleCmp.setValue(0);
                toggleCmp.enable();
                labelValue = 'No';
            } else {
                checkboxCmp.uncheck();
                toggleCmp.setValue(0);
                toggleCmp.disable();
                labelValue = '';
                hiddenValue = '';
            }

            labelCmp.setHtml(labelValue);
            hiddenCmp.setValue(hiddenValue);
        }
    },

    syncDettaglioVeicolo: function() {
        var dettaglioVeicoloUsatoForm = Ext.ComponentQuery.query('#dettaglioVeicoloUsatoForm')[0];
        var veicoloUsatoModel = dettaglioVeicoloUsatoForm.getRecord();
        var veicoloCodice = veicoloUsatoModel.get('codice');

        veicoloUsatoModel.set('salvataggioFlag', 'N');

        // Riverso i dati della form nel suo model
        dettaglioVeicoloUsatoForm.updateRecord(veicoloUsatoModel);

        // Invio a back-end il model del dettaglio veicolo
        veicoloUsatoModel.save({
            scope: this,
            success: function(record, operation) {
                var responseData = Ext.decode(operation.getResponse().responseText,false);

                if(responseData.message !== null){
                    Ext.Msg.alert("Attenzione", responseData.message);
                }

                //var veicoloUsatoModel = record;

                // Ricarico da back-end il model del dettaglio veicolo per
                // ottenere i prezzi aggiornati.
                var veicoloUsatoModelClass = Ext.ModelManager.getModel('Infocar.model.DettaglioVeicoloUsatoModel');
                veicoloUsatoModelClass.load(0, {
                    params: {
                        veicolo_codice: veicoloCodice
                    },
                    scope: this,
                    success: function(record, operation) {
                        var responseData = Ext.decode(operation.getResponse().responseText,false);

                        if(responseData.message !== null){
                            Ext.Msg.alert("Attenzione", responseData.message);
                        }

                        var veicoloUsatoModel = record;

                        this.initFormDettaglioVeicolo(veicoloUsatoModel);
                    },
                    failure: function(record, operation) {
                        Infocar.app.showLoadErrorMessage(operation);

                        var salvaButton = Ext.ComponentQuery.query('#salvaDettaglioVeicoloUsatoButton')[0];
                        salvaButton.disable();
                    }
                }, this);

            },
            failure: function(record, operation) {
                Infocar.app.showLoadErrorMessage(operation);

                var salvaButton = Ext.ComponentQuery.query('#salvaDettaglioVeicoloUsatoButton')[0];
                salvaButton.disable();
            }
        }, this);

    },

    initFormDettaglioVeicolo: function(veicoloUsatoModel) {
        var dettaglioVeicoloUsatoForm = Ext.ComponentQuery.query('#dettaglioVeicoloUsatoForm')[0];

        // Disabilito temporaneamente la chiamata alla syncDettaglioVeicolo che
        // avviene ad ogni modifica di un campo della form.
        // Questo per evitare di eseguire una sync per ogni campo inizializzato qui sotto.
        this.suspendEventsDettaglioVeicolo();

        // Dati di testata
        var descLabel = Ext.ComponentQuery.query('#descDettVeicoloUsatoLabel');
        Ext.Array.each(descLabel, function(item, index, ary) {
            item.setData(veicoloUsatoModel.getData());
        });

        var datiTecniciLabel = Ext.ComponentQuery.query('#datiTecniciDettVeicoloUsatoLabel');
        Ext.Array.each(datiTecniciLabel, function(item, index, ary) {
            item.setData(veicoloUsatoModel.getData());
        });

        var prezzoLabel = Ext.ComponentQuery.query('#prezzoDettVeicoloUsatoLabel');
        Ext.Array.each(prezzoLabel, function(item, index, ary) {
            item.setData(veicoloUsatoModel.getData());
        });

        var descLabel = Ext.ComponentQuery.query('#descDettVeicoloUsatoLabel');
        Ext.Array.each(descLabel, function(item, index, ary) {
            item.setData(veicoloUsatoModel.getData());
        });

        var veicoloMiniImg = Ext.ComponentQuery.query('#dettaglioVeicoloUsatoImg');
        Ext.Array.each(veicoloMiniImg, function(item, index, ary) {
            item.setSrc(veicoloUsatoModel.get('urlImg'));
        });


        // Dati del corpo
        dettaglioVeicoloUsatoForm.setRecord(veicoloUsatoModel);

        // Controlli sulla data immatricolazione
        var salvaButton = Ext.ComponentQuery.query('#salvaDettaglioVeicoloUsatoButton')[0];
        if (veicoloUsatoModel.get('dataImmatricolazione')) {
            salvaButton.enable();
        } else {
            salvaButton.disable();
        }

        var immatricToggle = Ext.ComponentQuery.query('#immatricAutocarroDettVeicoloUsatoToggle')[0];
        this.initToggle(immatricToggle);

        var immatricPrezzoLabel = Ext.ComponentQuery.query('#immatricPrezzoDettVeicoloUsatoLabel')[0];
        immatricPrezzoLabel.setData(veicoloUsatoModel.getData());

        var kmTeoriciLabel = Ext.ComponentQuery.query('#kmTeoriciDettVeicoloUsatoLabel')[0];
        kmTeoriciLabel.setData(veicoloUsatoModel.getData());

        var kmPercorsiPrezzoLabel = Ext.ComponentQuery.query('#kmPercorsiPrezzoDettVeicoloUsatoLabel')[0];
        kmPercorsiPrezzoLabel.setData(veicoloUsatoModel.getData());

        var equipPrezzoLabel = Ext.ComponentQuery.query('#equipagPrezzoDettVeicoloUsatoLabel')[0];
        equipPrezzoLabel.setData(veicoloUsatoModel.getData());

        //var ripristinoPrezzoLabel = Ext.ComponentQuery.query('#ripristinoPrezzoVeicoloUsatoLabel')[0];
        //ripristinoPrezzoLabel.setData(veicoloUsatoModel.getData());

        var immatricAutocarroPrezzoLabel = Ext.ComponentQuery.query('#immatricAutocarroPrezzoVeicoloUsatoLabel')[0];
        immatricAutocarroPrezzoLabel.setData(veicoloUsatoModel.getData());

        var speseGestioneToggle = Ext.ComponentQuery.query('#speseGestioneDettVeicoloUsatoToggle')[0];
        this.initToggle(speseGestioneToggle);

        var speseGestionePrezzoLabel = Ext.ComponentQuery.query('#speseGestionePrezzoVeicoloUsatoLabel')[0];
        speseGestionePrezzoLabel.setData(veicoloUsatoModel.getData());

        var aryDatiVeicoloCheckboxes = Ext.ComponentQuery.query('container#datiDettVeicoloUsatoFieldSet checkboxfield');
        Ext.Array.each(aryDatiVeicoloCheckboxes,
                       function(checkboxCmp, index, ary) {
                           this.initCheckboxToggle(checkboxCmp);
                       },
                       this
                      );

        // Riabilito la chiamata alla syncDettaglioVeicolo ad
        // ogni modifica di un campo della form.
        this.resumeEventsDettaglioVeicolo(true);

    },

    loadDatiTecniciInfoVeicolo: function(veicoloCodice) {
        var datiTecniciStore = Ext.data.StoreManager.lookup('DatiTecniciInfoVeicoloUsatoStore');
        datiTecniciStore.load({
            params: {
                veicolo_codice: veicoloCodice
            },
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }
                }
            },
        }, this);

    },

    loadEquipInfoVeicolo: function(veicoloCodice) {
        var equipStore = Ext.data.StoreManager.lookup('EquipInfoVeicoloUsatoStore');
        equipStore.load({
            params: {
                veicolo_codice: veicoloCodice
            },
            callback: function (records, operation, success) {
                var equipCount = 0;

                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    equipCount = equipStore.getCount();
                }

                var equipLabel = Ext.ComponentQuery.query('#sintesiEquipInfoVeicoloUsatoLabel')[0];
                equipLabel.setData({numEquip: equipCount});
            },
        }, this);

    },

    loadGraficoInfoVeicolo: function(veicoloCodice) {
        var graficoStore = Ext.data.StoreManager.lookup('GraficoInfoVeicoloUsatoStore');
        graficoStore.load({
            params: {
                veicolo_codice: veicoloCodice
            },
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    var graficoCount = graficoStore.getCount();
                    var graficoChart = Ext.ComponentQuery.query('#graficoInfoVeicoloUsatoChart')[0];
                    var msgCortesiaLabel = Ext.ComponentQuery.query('#messaggioGraficoInfoVeicoloUsatoLabel')[0];

                    if (graficoCount > 0) {
                        // Visualizzo il grafico
                        graficoChart.setHidden(false);
                        msgCortesiaLabel.setHidden(true);
                    } else {
                        // Non ci sono valori da rappresentare nel grafico.
                        // Visualizzo un messaggio di cortesia al posto del grafico.
                        graficoChart.setHidden(true);
                        msgCortesiaLabel.setHidden(false);
                    }
                }
            },
        }, this);
    },

    suspendEventsDettaglioVeicolo: function() {
        //var dettaglioVeicoloUsatoForm = Ext.ComponentQuery.query('#dettaglioVeicoloUsatoForm')[0];

        // Disabilito temporaneamente la chiamata alla syncDettaglioVeicolo che
        // avviene ad ogni modifica di un campo della form.
        // Questo per evitare di eseguire una sync per ogni campo inizializzato.

        //dettaglioVeicoloUsatoForm.syncDettaglioVeicoloFlag = 'N';

        var aryFormFields = Ext.ComponentQuery.query("formpanel#dettaglioVeicoloUsatoForm [attivaSyncFlag='S']");
        Ext.Array.each(aryFormFields,
                       function(field, index, ary) {
                           // DEBUG
                           //console.log("suspendEvents: field["+ field.getName() +"]");

                           field.suspendEvents();
                       },
                       this
        );

        var coloreEsternoComboboxCmp = Ext.ComponentQuery.query('#coloreEsternoDettVeicoloUsatoCombobox')[0];
        coloreEsternoComboboxCmp.suspendEvents();

        var coloreInternoComboboxCmp = Ext.ComponentQuery.query('#coloreInternoDettVeicoloUsatoCombobox')[0];
        coloreInternoComboboxCmp.suspendEvents();
    },

    resumeEventsDettaglioVeicolo: function(discardQueuedEvents) {
        //var dettaglioVeicoloUsatoForm = Ext.ComponentQuery.query('#dettaglioVeicoloUsatoForm')[0];

        // Riabilito la chiamata alla syncDettaglioVeicolo ad
        // ogni modifica di un campo della form.

        //dettaglioVeicoloUsatoForm.syncDettaglioVeicoloFlag = 'S';

        var aryFormFields = Ext.ComponentQuery.query("formpanel#dettaglioVeicoloUsatoForm [attivaSyncFlag='S']");
        Ext.Array.each(aryFormFields,
                       function(field, index, ary) {
                           field.resumeEvents(discardQueuedEvents);
                       },
                       this
        );

        var coloreEsternoComboboxCmp = Ext.ComponentQuery.query('#coloreEsternoDettVeicoloUsatoCombobox')[0];
        coloreEsternoComboboxCmp.resumeEvents(discardQueuedEvents);

        var coloreInternoComboboxCmp = Ext.ComponentQuery.query('#coloreInternoDettVeicoloUsatoCombobox')[0];
        coloreInternoComboboxCmp.resumeEvents(discardQueuedEvents);
    },

    loadColoreEsternoCombobox: function(coloreCodice) {
        var coloreEsternoComboboxCmp = Ext.ComponentQuery.query('#coloreEsternoDettVeicoloUsatoCombobox')[0];

        var coloreEsternoStore = Ext.data.StoreManager.lookup('ColoreEsternoDettVeicoloUsatoStore');

        coloreEsternoStore.load({
            // params: {},
            scope: this,
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    var utenteModel = Infocar.app.utenteModel;

                    if (utenteModel.get('coloreVeicoloFlag') === 'S') {
                        var coloreAltro = Ext.create('Infocar.model.ColoreEsternoModel', {
                            "codice": "ALTRO",
                            "descrizione": "Altro..."
                        });
                        coloreEsternoStore.add(coloreAltro);

                        coloreEsternoComboboxCmp.suspendEvents();
                        coloreEsternoComboboxCmp.setValue(coloreCodice);
                        coloreEsternoComboboxCmp.resumeEvents(true);
                    }
                }
            }
        });


    },

    loadColoreInternoCombobox: function(coloreCodice) {
        var coloreInternoComboboxCmp = Ext.ComponentQuery.query('#coloreInternoDettVeicoloUsatoCombobox')[0];

        var coloreInternoStore = Ext.data.StoreManager.lookup('ColoreInternoDettVeicoloUsatoStore');

        coloreInternoStore.load({
            // params: {},
            scope: this,
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    var utenteModel = Infocar.app.utenteModel;
                    if (utenteModel.get('coloreVeicoloFlag') === 'S') {
                        var coloreAltro = Ext.create('Infocar.model.ColoreInternoModel', {
                            "codice": "ALTRO",
                            "descrizione": "Altro..."
                        });
                        coloreInternoStore.add(coloreAltro);

                        coloreInternoComboboxCmp.suspendEvents();
                        coloreInternoComboboxCmp.setValue(coloreCodice);
                        coloreInternoComboboxCmp.resumeEvents(true);
                    }
                }
            }
        });
    },

    showEsitoSalvaDettaglioVeicolo: function(veicoloModel) {
        // Imposto i valori visualizzati nella schermata di esito salvataggio veicolo
        var testoEsitoLabel = Ext.ComponentQuery.query('#testoEsitoVeicoloUsatoLabel')[0];
        testoEsitoLabel.setData(veicoloModel.getData());

        var valutazioneQRPrezzoLabel = Ext.ComponentQuery.query('#valutazioneQRPrezzoEsitoVeicoloUsatoLabel2')[0];
        valutazioneQRPrezzoLabel.setData(veicoloModel.getData());

        var varConcessPrezzoLabel = Ext.ComponentQuery.query('#varConcessPrezzoEsitoVeicoloUsatoLabel2')[0];
        varConcessPrezzoLabel.setData(veicoloModel.getData());

        var varConcordataPrezzoLabel = Ext.ComponentQuery.query('#varConcorPrezzoEsitoVeicoloUsatoLabel2')[0];
        varConcordataPrezzoLabel.setData(veicoloModel.getData());

        var totaleConcordatoPrezzoLabel = Ext.ComponentQuery.query('#totaleConcorPrezzoEsitoVeicoloUsatoLabel2')[0];
        totaleConcordatoPrezzoLabel.setData(veicoloModel.getData());

        var bodyContainer = Ext.ComponentQuery.query('#bodyUsatoContainer')[0];

        bodyContainer.animateActiveItem(
            '#esitoVeicoloUsatoContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );

    },

    resetOrdinamentoCombobox: function() {
        var ordinamentoCombobox = Ext.ComponentQuery.query('#ordinamentoRicUsatoComboBox')[0];
        ordinamentoCombobox.suspendEvents();
        ordinamentoCombobox.setValue('0');
        ordinamentoCombobox.resumeEvents(true);
    },

    setCustomProperties: function() {
        var cmp;

        // Titoli schermate

        cmp = Ext.ComponentQuery.query("#ricercaUsatoContainer")[0];
        cmp.Titolo = "Ritiro - Ricerca ritiro";

        cmp = Ext.ComponentQuery.query("#dettaglioVeicoloUsatoContainer")[0];
        cmp.Titolo = "Ritiro - Dettaglio allestimento";

        cmp = Ext.ComponentQuery.query("#infoVeicoloUsatoContainer")[0];
        cmp.Titolo = "Ritiro - Dettaglio del modello";

        cmp = Ext.ComponentQuery.query("#esitoVeicoloUsatoContainer")[0];
        cmp.Titolo = "Ritiro - Esito";


        // Ricerca Usato

        cmp = Ext.ComponentQuery.query("#ricercaUsatoForm")[0];
        cmp.ricercaTargaFlag = "N";


        // Dettaglio Veicolo Usato

        cmp = Ext.ComponentQuery.query("#dataImmatricDettVeicoloUsatoDatepickerField")[0];
        cmp.attivaSyncFlag = "S";
        cmp.annullaButtonFlag = "S";

        cmp = Ext.ComponentQuery.query("#dettaglioVeicoloUsatoForm [name='kmPercorsi']")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#immatricAutocarroDettVeicoloUsatoToggle")[0];
        cmp.valoreLabelItemId = "immatricAutocarroDettVeicoloUsatoLabel";
        cmp.valoreHiddenItemId = "immatricAutocarroDettVeicoloUsatoHiddenField";

        cmp = Ext.ComponentQuery.query("#immatricAutocarroDettVeicoloUsatoHiddenField")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#dettaglioVeicoloUsatoForm [name='ripristinoPrezzo']")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#speseGestioneDettVeicoloUsatoToggle")[0];
        cmp.valoreLabelItemId = "speseGestioneDettVeicoloUsatoLabel";
        cmp.valoreHiddenItemId = "speseGestioneDettVeicoloUsatoHiddenField";

        cmp = Ext.ComponentQuery.query("#speseGestioneDettVeicoloUsatoHiddenField")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#dettaglioVeicoloUsatoForm [name='targa']")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#dettaglioVeicoloUsatoForm [name='telaio']")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#coloreEsternoDettVeicoloUsatoCombobox")[0];
        cmp.descrizioneHiddenItemId = "descrizioneColoreEsternoDettVeicoloUsatoHidden";

        cmp = Ext.ComponentQuery.query("#coloreInternoDettVeicoloUsatoCombobox")[0];
        cmp.descrizioneHiddenItemId = "descrizioneColoreInternoDettVeicoloUsatoHidden";

        /*
                cmp = Ext.ComponentQuery.query("#descrizioneColoreEsternoDettVeicoloUsatoHidden")[0];
                cmp.attivaSyncFlag = "S";

                cmp = Ext.ComponentQuery.query("#descrizioneColoreInternoDettVeicoloUsatoHidden")[0];
                cmp.attivaSyncFlag = "S";
                */

        cmp = Ext.ComponentQuery.query("#dettaglioVeicoloUsatoForm [name='dataBollo']")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#dettaglioVeicoloUsatoForm [name='dataRevisione']")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#dettaglioVeicoloUsatoForm [name='provenienza_codice']")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#dettaglioVeicoloUsatoForm [name='destinazione_codice']")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#librettoDettVeicoloUsatoCheckbox")[0];
        cmp.toggleItemId = "librettoDettVeicoloUsatoToggle";

        cmp = Ext.ComponentQuery.query("#librettoDettVeicoloUsatoToggle")[0];
        cmp.valoreLabelItemId = "librettoDettVeicoloUsatoLabel";
        cmp.valoreHiddenItemId = "librettoDettVeicoloUsatoHiddenField";

        cmp = Ext.ComponentQuery.query("#librettoDettVeicoloUsatoHiddenField")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#certificatoDettVeicoloUsatoCheckbox")[0];
        cmp.toggleItemId = "certificatoDettVeicoloUsatoToggle";

        cmp = Ext.ComponentQuery.query("#certificatoDettVeicoloUsatoToggle")[0];
        cmp.valoreLabelItemId = "certificatoDettVeicoloUsatoLabel";
        cmp.valoreHiddenItemId = "certificatoDettVeicoloUsatoHiddenField";

        cmp = Ext.ComponentQuery.query("#certificatoDettVeicoloUsatoHiddenField")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#tagliandiDettVeicoloUsatoCheckbox")[0];
        cmp.toggleItemId = "tagliandiDettVeicoloUsatoToggle";

        cmp = Ext.ComponentQuery.query("#tagliandiDettVeicoloUsatoToggle")[0];
        cmp.valoreLabelItemId = "tagliandiDettVeicoloUsatoLabel";
        cmp.valoreHiddenItemId = "tagliandiDettVeicoloUsatoHiddenField";

        cmp = Ext.ComponentQuery.query("#tagliandiDettVeicoloUsatoHiddenField")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#ipotecataDettVeicoloUsatoCheckbox")[0];
        cmp.toggleItemId = "ipotecataDettVeicoloUsatoToggle";

        cmp = Ext.ComponentQuery.query("#ipotecataDettVeicoloUsatoToggle")[0];
        cmp.valoreLabelItemId = "ipotecataDettVeicoloUsatoLabel";
        cmp.valoreHiddenItemId = "ipotecataDettVeicoloUsatoHiddenField";

        cmp = Ext.ComponentQuery.query("#ipotecataDettVeicoloUsatoHiddenField")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#fatturabileDettVeicoloUsatoCheckbox")[0];
        cmp.toggleItemId = "fatturabileDettVeicoloUsatoToggle";

        cmp = Ext.ComponentQuery.query("#fatturabileDettVeicoloUsatoToggle")[0];
        cmp.valoreLabelItemId = "fatturabileDettVeicoloUsatoLabel";
        cmp.valoreHiddenItemId = "fatturabileDettVeicoloUsatoHiddenField";

        cmp = Ext.ComponentQuery.query("#fatturabileDettVeicoloUsatoHiddenField")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#leasingDettVeicoloUsatoCheckbox")[0];
        cmp.toggleItemId = "leasingDettVeicoloUsatoToggle";

        cmp = Ext.ComponentQuery.query("#leasingDettVeicoloUsatoToggle")[0];
        cmp.valoreLabelItemId = "leasingDettVeicoloUsatoLabel";
        cmp.valoreHiddenItemId = "leasingDettVeicoloUsatoHiddenField";

        cmp = Ext.ComponentQuery.query("#leasingDettVeicoloUsatoHiddenField")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#noteDettVeicoloUsatoField")[0];
        cmp.attivaSyncFlag = "S";

        cmp = Ext.ComponentQuery.query("#dettaglioVeicoloUsatoForm [name='totaleConcordatoPrezzo']")[0];
        cmp.attivaSyncFlag = "S";

    },

    launch: function() {
        //this.setCustomProperties();
    },

    getView: function() {
        var usatoView = this.getUsatoView();

        return usatoView;
    },

    initTitoloTopBar: function(view) {
        var bodyContainer = view.down('#bodyUsatoContainer');
        var activeBodyItem = bodyContainer.getActiveItem();
        if (activeBodyItem) {
            var topBarCtrl = this.getApplication().getController('Infocar.controller.TopBarController');
            topBarCtrl.setTitoloFromContainer(bodyContainer, activeBodyItem);
        }
    }

});