/*
 * File: app/controller/PhotoFullScreenController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Infocar.controller.PhotoFullScreenController', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            photoFullScreenPanel: {
                autoCreate: true,
                selector: '#photoFullScreenPanel',
                xtype: 'photoFullScreenPanel'
            },
            photoFullScreenCarousel: {
                autoCreate: true,
                selector: 'carousel#photoFullScreenCarousel2',
                xtype: 'PhotoFullScreenCarousel2'
            },
            mainView: '#mainView'
        },

        control: {
            "image#photoFullScreenImg": {
                tap: 'onPhotoFullScreenImageTap'
            }
        }
    },

    onPhotoFullScreenImageTap: function(image, e, eOpts) {
        // Ritorno alla view che era a video prima di visualizzare la foto fullscreen
        var openerItem = this.openerActiveItem || 0;
        Ext.Viewport.setActiveItem(openerItem);

        var photoInfoVeicoloPanel = this.getPhotoFullScreenPanel();
        //photoInfoVeicoloPanel.hide();

        var photoInfoVeicoloCarousel = photoInfoVeicoloPanel.down('#photoFullScreenCarousel');
        photoInfoVeicoloCarousel.removeAll();

        //var mainView = this.getMainView();
        //mainView.show();
    },

    showPhotoFullScreen: function(aryUrlImg, activeImgIdx) {
        //var mainView = this.getMainView();
        //mainView.hide();

        this.openerActiveItem = Ext.Viewport.getActiveItem();

        var photoInfoVeicoloPanel = this.getPhotoFullScreenPanel();
        var photoInfoVeicoloCarousel = photoInfoVeicoloPanel.down('#photoFullScreenCarousel');

        var viewHeight = Ext.Viewport.getWindowHeight();
        var viewWidth = Ext.Viewport.getWindowWidth();

        var items = [];
        for(var i=0; i<aryUrlImg.length; i++) {
        /*
            var img = new Image();
            img.src = aryUrlImg[i];
            var imgHeight = img.height;
            var imgWidth = img.width;

            var scale = Math.min(viewWidth / imgWidth, viewHeight / imgHeight);

            var newImgHeight = Math.floor(imgHeight * scale);
            var newImgWidth = Math.floor(imgWidth * scale);
        */

            /*
            if ((viewWidth / imgWidth) < (viewHeight / imgHeight)){
                newImgHeight = Math.floor((imgHeight * scale) / viewHeight * 100) + '%';
                newImgWidth = '100%';
            } else {
                newImgHeight = '100%';
                newImgWidth = Math.floor((imgWidth * scale) / viewWidth * 100) + '%';
            }
            */

            items.push({
                xtype: 'container',
                items: {
                    xtype: 'image',
                    itemId: 'photoFullScreenImg',
                    src: aryUrlImg[i],
                    mode: 'background',
                    centered: true,
                    //height: newImgHeight,
                    //width: newImgWidth
                    listeners: {
                        load: function(imgPhoto, e, eOpts) {
                            //alert('img src['+ imgPhoto.getSrc() +']');
                            var img = new Image();

                            img.onload = function () {
                                var imgHeight = this.height;
                                var imgWidth = this.width;

                                var scale = Math.min(viewWidth / imgWidth, viewHeight / imgHeight);

                                var newImgHeight = Math.floor(imgHeight * scale);
                                var newImgWidth = Math.floor(imgWidth * scale);

                                //alert('viewHeight['+ viewHeight +'] viewWidth['+ viewWidth +'] imgHeight['+ imgHeight +'] imgWidth['+ imgWidth +']'+
                                //      'newImgHeight['+ newImgHeight +'] newImgWidth['+ newImgWidth +']');

                                imgPhoto.setHeight(newImgHeight);
                                imgPhoto.setWidth(newImgWidth);
                            };

                            img.src = imgPhoto.getSrc(); // aryUrlImg[i];
                        }
                    }
                }
            });
        }

        photoInfoVeicoloCarousel.setItems(items);
        photoInfoVeicoloCarousel.setActiveItem(activeImgIdx);

        Ext.Viewport.setActiveItem(photoInfoVeicoloPanel);

        //photoInfoVeicoloPanel.show();
    },

    adjustScalePhotoCarousel: function() {
        var photoInfoVeicoloPanel = this.getPhotoFullScreenPanel();
        var photoInfoVeicoloCarousel = photoInfoVeicoloPanel.down('#photoFullScreenCarousel');

        var viewHeight = Ext.Viewport.getWindowHeight();
        var viewWidth = Ext.Viewport.getWindowWidth();

        var aryPhoto = photoInfoVeicoloCarousel.query('#photoFullScreenImg');

        for(var i=0; i<aryPhoto.length; i++) {
            var imgHeight = aryPhoto[i].getHeight();
            var imgWidth = aryPhoto[i].getWidth();

            if (imgWidth && imgHeight) {
                var scale = Math.min(viewWidth / imgWidth, viewHeight / imgHeight);

                var newImgHeight = Math.floor(imgHeight * scale);
                var newImgWidth = Math.floor(imgWidth * scale);

                aryPhoto[i].setHeight(newImgHeight);
                aryPhoto[i].setWidth(newImgWidth);
            }
        }

    }

});