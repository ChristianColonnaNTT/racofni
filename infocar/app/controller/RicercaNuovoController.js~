/*
 * File: app/controller/RicercaNuovoController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.4.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.4.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Infocar.controller.RicercaNuovoController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "button#cercaRicNuovoButton": {
                tap: 'onCercaButtonTap'
            },
            "dataview#marcaRicNuovoRisultatoDataView": {
                itemtap: 'onMarcaRisultatoItemTap'
            },
            "button#azzeraRicNuovoButton": {
                tap: 'onAzzeraButtonTap'
            },
            "button#indietroModelloRicNuovoButton": {
                tap: 'onIndietroModelloButtonTap'
            },
            "dataview#modelloRicNuovoRisultatoDataView": {
                itemtap: 'onModelloRisultatoItemTap'
            },
            "button#indietroAllestimentoRicNuovoButton": {
                tap: 'onIndietroAllestimentoButtonTap'
            },
            "dataview#allestimentoRicNuovoRisultatoDataView": {
                itemtap: 'onAllestimentoRisultatoItemTap'
            },
            "button#infoVeicoloNuovoButton": {
                tap: 'onInfoVeicoloButtonTap'
            },
            "button#indietroInfoVeicoloNuovoButton": {
                tap: 'onIndietroInfoVeicoloButtonTap'
            },
            "button#datiTecniciInfoVeicoloNuovoButton": {
                tap: 'onDatiTecniciInfoVeicoloButtonTap'
            },
            "button#equipInfoVeicoloNuovoButton": {
                tap: 'onEquipInfoVeicoloButtonTap'
            },
            "button#indietroDettaglioVeicoloNuovoButton": {
                tap: 'onIndietroDettaglioVeicoloButtonTap'
            },
            "segmentedbutton#clustersDettVeicoloNuovoButtons > button": {
                tap: 'onClusterDettVeicoloButtonTap'
            },
            "button#statoEquipDettVeicoloNuovoDataItemButton": {
                tap: 'onStatoEquipDettVeicoloDataItemButtonTap'
            },
            "button#descEquipDettVeicoloNuovoDataItemButton": {
                tap: 'onDescEquipDettVeicoloButtonItemTap'
            },
            "textfield#cercaDettVeicoloNuovoTextbox": {
                change: 'onCercaDettVeicoloTextboxChange',
                keyup: 'onCercaDettVeicoloTextboxKeyup'
            },
            "button#infoEquipDettVeicoloNuovoDataItemImg": {
                tap: 'onInformEquipDettVeicoloDataitemButtonTap'
            },
            "button#ricercaUsatoEsitoVeicoloNuovoButton": {
                tap: 'onRicercaUsatoEsitoVeicoloButtonTap'
            },
            "button#ricercaStockEsitoVeicoloNuovoButton": {
                tap: 'onRicercaStockEsitoVeicoloButtonTap'
            },
            "button#salvaDettaglioVeicoloNuovoButton": {
                tap: 'onSalvaDettaglioVeicoloButtonTap'
            },
            "button#annullaPopupEquipVeicoloNuovoButton": {
                tap: 'onAnnullaPopupEquipVeicoloButtonTap'
            },
            "button#confermaPopupEquipVeicoloNuovoButton": {
                tap: 'onConfermaPopupEquipVeicoloButtonTap'
            },
            "selectfield#ordinamentoRicNuovoComboBox": {
                change: 'onOrdinamentoRicercaComboboxChange'
            }
        }
    },

    onCercaButtonTap: function(button, e, eOpts) {
        /*
        var marcaStore = Ext.data.StoreManager.lookup('MarcaRicercaNuovoStore');

        marcaStore.load();

        var marcaCount = marcaStore.getCount();
        this.showMarcaNumRisultati(marcaCount);

        button.setText('Aggiorna ricerca');
        */

        var descrizioneRicField = Ext.ComponentQuery.query('#descrizioneRicercaNuovoField')[0];
        var descRic = descrizioneRicField.getValue();

        var ricercaTargaFlag = false;

        var patterns = Infocar.app.patternsRicercaTarga;
        for(var i=0; i<patterns.length; i++) {
            var patternRegExp = new RegExp(patterns[i]);
            if (patternRegExp.test(descRic)) {
                ricercaTargaFlag = true;
                break;
            }
        }

        if (ricercaTargaFlag) {
            // L'utente ha inserito una targa nella textbox descrizione.
            // Salto direttamente all'elenco allestimenti.

            var indietroAllestimentoButton = Ext.ComponentQuery.query('#indietroAllestimentoRicNuovoButton')[0];
            indietroAllestimentoButton.setHidden(true);

            var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaNuovoHidden')[0];
            marcaHidden.setValue('');

            var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaNuovoHidden')[0];
            modelloHidden.setValue('');

            var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaNuovoHidden')[0];
            allestimentoHidden.setValue('');

            this.loadAllestimenti();
        } else {
            var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
            var activeRisultatoRicItem = ricNuovoRisultatoContainer.getActiveItem();
            var tipoRisultatoRic = activeRisultatoRicItem.getItemId();

            if (tipoRisultatoRic === 'marcaRicNuovoRisultatoContainer') {
                this.loadMarche();
            } else if (tipoRisultatoRic === 'modelloRicNuovoRisultatoContainer') {
                this.loadModelli();
            } else if (tipoRisultatoRic === 'allestimentoRicNuovoRisultatoContainer') {
                this.loadAllestimenti();
            }
        }

    },

    onMarcaRisultatoItemTap: function(dataview, index, target, record, e, eOpts) {
        /*
        var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
        ricNuovoRisultatoContainer.animateActiveItem(
            '#modelloRicNuovoRisultatoContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );

        var modelloStore = Ext.data.StoreManager.lookup('ModelloRicercaNuovoStore');

        modelloStore.load();

        var modelloCount = modelloStore.getCount();
        this.showModelloNumRisultati(modelloCount);
        */

        var marcaModel = record;

        var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaNuovoHidden')[0];
        marcaHidden.setValue(marcaModel.get('codice'));

        this.loadModelli();
    },

    onAzzeraButtonTap: function(button, e, eOpts) {
        this.resetRicerca();

        // Visualizzo la schermata della lista marche
        var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
        ricNuovoRisultatoContainer.animateActiveItem(
            '#marcaRicNuovoRisultatoContainer',
            {
                type: 'slide',
                direction:'right'
            }
        );
    },

    onIndietroModelloButtonTap: function(button, e, eOpts) {
        var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
        ricNuovoRisultatoContainer.animateActiveItem(
            '#marcaRicNuovoRisultatoContainer',
            {
                type: 'slide',
                direction: 'right'
            }
        );
    },

    onModelloRisultatoItemTap: function(dataview, index, target, record, e, eOpts) {
        /*
        var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];

        ricNuovoRisultatoContainer.animateActiveItem(
            '#allestimentoRicNuovoRisultatoContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );

        var allestimentoStore = Ext.data.StoreManager.lookup('AllestimentoRicercaNuovoStore');

        allestimentoStore.load();

        var allestimentoCount = allestimentoStore.getCount();
        this.showAllestimentoNumRisultati(allestimentoCount);
        */

        var modelloModel = record;

        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaNuovoHidden')[0];
        modelloHidden.setValue(modelloModel.get('codice'));

        this.loadAllestimenti();
    },

    onIndietroAllestimentoButtonTap: function(button, e, eOpts) {
        var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
        ricNuovoRisultatoContainer.animateActiveItem(
            '#modelloRicNuovoRisultatoContainer',
            {
                type: 'slide',
                direction: 'right'
            }
        );
    },

    onAllestimentoRisultatoItemTap: function(dataview, index, target, record, e, eOpts) {
        var bodyContainer = Ext.ComponentQuery.query('#bodyContainer')[0];

        bodyContainer.animateActiveItem(
            '#dettaglioVeicoloNuovoContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );

        var veicoloModel = Ext.create(
            'Infocar.model.DettaglioVeicoloNuovoModel',
            {
                "codice": "1",
                "marca_codice": "2",
                "marca_descrizione": "Alfa Romeo",
                "modello_codice": "3",
                "modello_descrizione": "Giulietta",
                "allestimento_codice": "4",
                "allestimento_descrizione": "GT",
                "alimentazione_codice": "5",
                "alimentazione_descrizione": "Benzina",
                "carrozzeria_codice": "5",
                "carrozzaria_descrizione": "Carrozzeria 1",
                "veicoloBasePrezzo": 1234.51,
                "totalePrezzo": 19500.00,
                "urlImg": ""
            }
        );

        // Dati di testata
        var descLabel = Ext.ComponentQuery.query('#descDettVeicoloNuovoLabel');
        Ext.Array.each(descLabel, function(item, index, ary) {
            item.setData(veicoloModel.getData());
        });

        var prezzoBaseLabel = Ext.ComponentQuery.query('#prezzoBaseDettVeicoloNuovoLabel');
        Ext.Array.each(prezzoBaseLabel, function(item, index, ary) {
            item.setData(veicoloModel.getData());
        });

        var prezzoLabel = Ext.ComponentQuery.query('#prezzoDettVeicoloNuovoLabel');
        Ext.Array.each(prezzoLabel, function(item, index, ary) {
            item.setData(veicoloModel.getData());
        });

        // Inizializzo i bottoni dei cluster
        var clusterButtons = Ext.ComponentQuery.query('#clustersDettVeicoloNuovoButtons')[0];
        var clusterIniziale = Ext.ComponentQuery.query('#tipoVeicoloClusterDettVeicoloNuovoButton')[0];
        clusterButtons.setPressedButtons([clusterIniziale]);

        var equipStore = Ext.data.StoreManager.lookup('EquipDettVeicoloNuovoStore');
        equipStore.load();

        this.showEquipaggiamenti(clusterIniziale.clusterId);
        this.showHideEquipClustersCount(1, false);
    },

    onInfoVeicoloButtonTap: function(button, e, eOpts) {
        // Visualizzo la schermata con la schermata generale info veicolo
        var bodyContainer = Ext.ComponentQuery.query('#bodyContainer')[0];

        bodyContainer.animateActiveItem(
            '#infoVeicoloNuovoContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );


        var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloNuovoContainer')[0];
        corpoInfoContainer.setActiveItem('#generaleInfoVeicoloNuovoContainer');


        var infoVeicoloModel = Ext.create(
            'Infocar.model.InfoVeicoloNuovoModel',
            {
                "marca_codice": "2",
                "marca_descrizione": "Alfa Romeo",
                "modello_codice": "3",
                "modello_descrizione": "Giulietta",
                "allestimento_codice": "4",
                "allestimento_descrizione": "GT",
                "alimentazione_codice": "5",
                "alimentazione_descrizione": "Benzina",
                "carrozzeria_codice": "6",
                "carrozzeria_descrizione": "Station Wagon",
                "infoMiniUrlImg": "",
                "infoUrlImg": "",
                "cilindrata": 1590,
                "potenza": "80/105",
                "normativa": "euro 5",
                "dataListino": new Date(),
                "listinoPrezzo": 1234.51,
                "cmPrezzo": 1234.52,
                "codiceInfocar": "ABCDEF",
                "codiceCasa": "BCDEFG",
                "codiceQUD": "CDEFGHILMNO",
                "omologazioni": "prova omologazioni",
                "graficoStockUrlImg": "",
                "allestimentoFisicoStock": 12,
                "allestimentoVirtualeStock": 23,
                "allestimentoGiacMediaStock": 34,
                "allestimentoGiacModelloStock": 45,
                "modelloFisicoStock": 56,
                "modelloVirtualeStock": 67,
                "modelloGiacMediaStock": 78,
                "modelloGiacModelloStock": 89,
                "modelloGiacModelloStockUrlImg": ""
            }
        );


        var datiTecniciStore = Ext.data.StoreManager.lookup('DatiTecniciInfoVeicoloNuovoStore');
        datiTecniciStore.load();

        var equipStore = Ext.data.StoreManager.lookup('EquipInfoVeicoloNuovoStore');
        equipStore.load();
        var equipCount = equipStore.getCount();


        // Dati di testata
        var infoVeicoloMiniImg = Ext.ComponentQuery.query('#infoVeicoloNuovoMiniImg');
        Ext.Array.each(infoVeicoloMiniImg, function(item, index, ary) {
            item.setSrc(infoVeicoloModel.get('infoMiniUrlImg'));
        });

        var descLabel = Ext.ComponentQuery.query('#descInfoVeicoloNuovoLabel');
        Ext.Array.each(descLabel, function(item, index, ary) {
            item.setData(infoVeicoloModel.getData());
        });

        // Dati del corpo
        var infoVeicoloImg = Ext.ComponentQuery.query('#infoVeicoloNuovoImg')[0];
        infoVeicoloImg.setSrc(infoVeicoloModel.get('infoUrlImg'));

        var testoLabel = Ext.ComponentQuery.query('#testoInfoVeicoloNuovoLabel')[0];
        testoLabel.setData(infoVeicoloModel.getData());

        var datiTecniciLabel = Ext.ComponentQuery.query('#sintesiDatiTecniciInfoVeicoloNuovoLabel')[0];
        datiTecniciLabel.setData(infoVeicoloModel.getData());

        var equipLabel = Ext.ComponentQuery.query('#sintesiEquipInfoVeicoloNuovoLabel')[0];
        equipLabel.setData({numEquip: equipCount});

        var graficoStockImg = Ext.ComponentQuery.query('#sintesiGraficoStockInfoVeicoloNuovoImg')[0];
        graficoStockImg.setSrc(infoVeicoloModel.get('graficoStockUrlImg'));

        var datiStockLabel = Ext.ComponentQuery.query('#sintesiDatiStockInfoVeicoloNuovoLabel')[0];
        datiStockLabel.setData(infoVeicoloModel.getData());

    },

    onIndietroInfoVeicoloButtonTap: function(button, e, eOpts) {
        var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloNuovoContainer')[0];
        activeContainer = corpoInfoContainer.getActiveItem().getItemId();

        if (activeContainer === 'generaleInfoVeicoloNuovoContainer') {
            // Sono nella schermata generale info veicolo, torno al dettaglio
            var bodyContainer = Ext.ComponentQuery.query('#bodyContainer')[0];

            bodyContainer.animateActiveItem(
                '#dettaglioVeicoloNuovoContainer',
                {
                    type: 'slide',
                    direction:'right'
                }
            );
        } else {
            // Sono in una delle due schermate equipaggiamenti info veicolo oppure
            // dati tecnici info veicolo, torno alla schermata generale info veicolo.
            corpoInfoContainer.animateActiveItem(
                '#generaleInfoVeicoloNuovoContainer',
                {
                    type: 'slide',
                    direction:'right'
                }
            );
        }
    },

    onDatiTecniciInfoVeicoloButtonTap: function(button, e, eOpts) {
        var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloNuovoContainer')[0];

        corpoInfoContainer.animateActiveItem(
            '#datiTecniciInfoVeicoloNuovoContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );
    },

    onEquipInfoVeicoloButtonTap: function(button, e, eOpts) {
        var corpoInfoContainer = Ext.ComponentQuery.query('#corpoInfoVeicoloNuovoContainer')[0];

        corpoInfoContainer.animateActiveItem(
            '#equipInfoVeicoloNuovoContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );
    },

    onIndietroDettaglioVeicoloButtonTap: function(button, e, eOpts) {
        var bodyContainer = Ext.ComponentQuery.query('#bodyContainer')[0];

        bodyContainer.animateActiveItem(
            '#ricercaNuovoContainer',
            {
                type: 'slide',
                direction:'right'
            }
        );
    },

    onClusterDettVeicoloButtonTap: function(button, e, eOpts) {
        this.showEquipaggiamenti(button.clusterId);
    },

    onStatoEquipDettVeicoloDataItemButtonTap: function(button, e, eOpts) {
        var listItem = button.up('#equipDettVeicoloNuovoListItem');
        //var listItem = button.getParent();
        var equipModel = listItem.getRecord();

        this.changeStatoEquipDettVeicolo(equipModel);
    },

    onDescEquipDettVeicoloButtonItemTap: function(button, e, eOpts) {
        var listItem = button.up('#equipDettVeicoloNuovoListItem');
        var equipModel = listItem.getRecord();

        this.changeStatoEquipDettVeicolo(equipModel);
    },

    onCercaDettVeicoloTextboxChange: function(textfield, newValue, oldValue, eOpts) {
        this.showEquipaggiamenti(false);
    },

    onCercaDettVeicoloTextboxKeyup: function(textfield, e, eOpts) {
        this.showEquipaggiamenti(false);
    },

    onInformEquipDettVeicoloDataitemButtonTap: function(button, e, eOpts) {
        var listItem = button.up('#equipDettVeicoloNuovoListItem');
        var equipModel = listItem.getRecord();

        var informEquipPanel = Ext.ComponentQuery.query('#informEquipDettVeicoloNuovoPanel')[0];
        var informEquipLabel = informEquipPanel.down('#informEquipDettVeicoloNuovoLabel');
        informEquipLabel.setHtml(equipModel.get('info'));

        informEquipPanel.showBy(button, 'cl-tr');

    },

    onRicercaUsatoEsitoVeicoloButtonTap: function(button, e, eOpts) {
        Infocar.app.showRicercaUsato();
    },

    onRicercaStockEsitoVeicoloButtonTap: function(button, e, eOpts) {
        Infocar.app.showRicercaStock();
    },

    onSalvaDettaglioVeicoloButtonTap: function(button, e, eOpts) {

        var veicoloModel = Ext.create(
            'Infocar.model.DettaglioVeicoloNuovoModel',
            {
                "codice": "1",
                "marca_codice": "2",
                "marca_descrizione": "Alfa Romeo",
                "modello_codice": "3",
                "modello_descrizione": "Giulietta",
                "allestimento_codice": "4",
                "allestimento_descrizione": "GT",
                "alimentazione_codice": "5",
                "alimentazione_descrizione": "Benzina",
                "carrozzeria_codice": "5",
                "carrozzaria_descrizione": "Carrozzeria 1",
                "veicoloBasePrezzo": 1234.51,
                "totalePrezzo": 6543.21,
                "urlImg": ""
            }
        );

        var testoEsitoLabel = Ext.ComponentQuery.query('#testoEsitoVeicoloNuovoLabel')[0];
        testoEsitoLabel.setData(veicoloModel.getData());

        var totalePrezzoLabel = Ext.ComponentQuery.query('#totalePrezzoEsitoVeicoloNuovoLabel2')[0];
        totalePrezzoLabel.setData(veicoloModel.getData());

        var bodyContainer = Ext.ComponentQuery.query('#bodyContainer')[0];

        bodyContainer.animateActiveItem(
            '#esitoVeicoloNuovoContainer',
            {
                type: 'slide',
                direction:'left'
            }
        );

    },

    onAnnullaPopupEquipVeicoloButtonTap: function(button, e, eOpts) {
        var popupEquipPanel = Ext.ComponentQuery.query('#popupEquipDettVeicoloNuovoPanel')[0];
        popupEquipPanel.hide();
    },

    onConfermaPopupEquipVeicoloButtonTap: function(button, e, eOpts) {
        var equipDataview = Ext.ComponentQuery.query('#popupEquipDettVeicoloNuovoDataView')[0];

        var aryEquipSelected = equipDataview.getSelection();

        if (aryEquipSelected.length > 0) {
            var equipModel = aryEquipSelected[0];

            equipModel.set('stato', 'ATT');
        }

        var popupEquipPanel = Ext.ComponentQuery.query('#popupEquipDettVeicoloNuovoPanel')[0];
        popupEquipPanel.hide();

        var equipStore = Ext.data.StoreManager.lookup('EquipDettVeicoloNuovoStore');
        //equipStore.sync();

        // Da inserire nel success della sync
        this.checkSelEquipRicorsiva();
    },

    onOrdinamentoRicercaComboboxChange: function(selectfield, newValue, oldValue, eOpts) {
        this.loadAllestimenti();
    },

    showMarcaNumRisultati: function(numRisultati) {
        var marcaNumRisultatiLabel = Ext.ComponentQuery.query('#marcaRicNuovoNumRisultatiLabel')[0];
        marcaNumRisultatiLabel.setHtml(numRisultati + ' Marche');
    },

    resetRicerca: function() {
        // Reset form
        var ricercaForm = Ext.ComponentQuery.query('#ricercaNuovoForm')[0];
        ricercaForm.reset();

        // Reset marche
        var marcaStore = Ext.data.StoreManager.lookup('MarcaRicercaNuovoStore');
        marcaStore.removeAll();

        var marcaCount = marcaStore.getCount();
        this.showMarcaNumRisultati(marcaCount);

        // Reset modelli
        var modelloStore = Ext.data.StoreManager.lookup('ModelloRicercaNuovoStore');
        modelloStore.removeAll();

        var modelloCount = modelloStore.getCount();
        this.showModelloNumRisultati(modelloCount);

        // Reset allestimenti
        var allestimentoStore = Ext.data.StoreManager.lookup('AllestimentoRicercaNuovoStore');
        allestimentoStore.removeAll();

        var allestimentoCount = allestimentoStore.getCount();
        this.showAllestimentoNumRisultati(allestimentoCount);

        // Aggiorno la label del bottone "cerca"
        var cercaButton = Ext.ComponentQuery.query('#cercaRicNuovoButton')[0];
        cercaButton.setText('Cerca');
    },

    showModelloNumRisultati: function(numRisultati) {
        var modelloNumRisultatiLabel = Ext.ComponentQuery.query('#modelloRicNuovoNumRisultatiLabel')[0];
        modelloNumRisultatiLabel.setHtml(numRisultati + ' Modelli');

    },

    showAllestimentoNumRisultati: function(numRisultati) {
        var allestimentoNumRisultatiLabel = Ext.ComponentQuery.query('#allestimentoRicNuovoNumRisultatiLabel')[0];
        allestimentoNumRisultatiLabel.setHtml(numRisultati + ' Allestimenti');
    },

    showEquipaggiamenti: function(clusterId) {
        if (!clusterId) {
            var clusterButtons = Ext.ComponentQuery.query('#clustersDettVeicoloNuovoButtons')[0];
            var activeClusterButton = clusterButtons.getPressedButtons()[0];
            clusterId = activeClusterButton.clusterId;
        }

        var equipStore = Ext.data.StoreManager.lookup('EquipDettVeicoloNuovoStore');

        var cercaTextbox = Ext.ComponentQuery.query('#cercaDettVeicoloNuovoTextbox')[0];
        var filtroCerca = cercaTextbox.getValue();

        equipStore.clearFilter(true);

        var equipClustersStore = Ext.data.StoreManager.lookup('EquipClustersDettVeicoloNuovoStore');
        equipClustersStore.removeAll(true);
        equipClustersStore.add(equipStore.getRange());

        equipStore.filter([
            {property: 'cluster_id', value: clusterId},
            {property: 'descrizione', value: filtroCerca}
        ]);

        equipStore.sort([
            {property: 'gruppoDesc', direction: 'ASC'},
            {property: 'descrizione', direction: 'ASC'}
        ]);
    },

    changeStatoEquipDettVeicolo: function(equipModel) {
        var statoEquip = equipModel.get('stato');

        var changeStatoFlag = false;
        if (!statoEquip || statoEquip === 'DIS') {
            equipModel.set('stato', 'ATT');
            changeStatoFlag = true;
        } else if (statoEquip === 'ATT') {
            equipModel.set('stato', 'DIS');
            changeStatoFlag = true;
        }

        if (changeStatoFlag) {
            var equipStore = Ext.data.StoreManager.lookup('EquipDettVeicoloNuovoStore');
            //equipStore.sync();

            // Inizio success sync
            var esitoChk = this.checkSelEquipRicorsiva();

            if (! esitoChk) {
                var messaggioRiepilogo = "Messaggio di riepilogo";
                this.showInfoSelezioneEquip(messaggioRiepilogo);
            }
            // Fine success sync
        }
    },

    showInfoSelezioneEquip: function(msg) {
        this.showHideEquipClustersCount(0, true);
        this.showMsgRiepilogoEquip(msg);
        //Ext.defer(this.showEquipClustersCount, 5000, this, [1, false]);
        Ext.defer(this.hideInfoSelezioneEquip, 5000, this);
    },

    hideInfoSelezioneEquip: function() {
        this.showHideEquipClustersCount(1, false);
        this.hideMsgRiepilogoEquip();
    },

    showHideEquipClustersCount: function(countMin, evidenziaAbbFlag) {
        var equipClustersStore = Ext.data.StoreManager.lookup('EquipClustersDettVeicoloNuovoStore');

        var hashClustersEquip = Ext.create('Ext.util.HashMap');

        // Colleziono i count di equipaggiamenti per ogni cluster
        equipClustersStore.each( function (item, index, length) {
                var equipModel = item;
                var clusterId = equipModel.get('cluster_id');
                var statoEquip = equipModel.get('stato');
                var abbinamentoFlag = equipModel.get('abbinamentoFlag');

                if (clusterId && clusterId !== '') {
                    var clusterEquip = hashClustersEquip.get(clusterId);
                    if (!clusterEquip) {
                        clusterEquip = { count: 0, evidenziaFlag: false };
                    }
                    if (statoEquip === 'ATT' || statoEquip === 'INC') {
                        clusterEquip.count++;
                    }
                    if (abbinamentoFlag) {
                        clusterEquip.evidenziaFlag = true;
                    }
                    hashClustersEquip.replace(clusterId, clusterEquip);
                }
            }
        );


        // Visualizzo il count di equipaggiamenti su ogni button dei cluster come badgeText
        hashClustersEquip.each(function (key, value, length) {
            var clusterId = key;
            var clusterEquip = value;

            var buttonsClusters = Ext.ComponentQuery.query('#clustersDettVeicoloNuovoButtons')[0];
            var buttonCluster = buttonsClusters.down('[clusterId='+ clusterId +']');

            if (clusterEquip.count > countMin) {
                buttonCluster.setBadgeText(clusterEquip.count + '');
            } else {
                buttonCluster.setBadgeText(null);
            }

            if (clusterEquip.evidenziaFlag && evidenziaAbbFlag) {
                buttonCluster.addCls('evidenzaBtnClusterDettVeicoloNuovo');
            } else {
                buttonCluster.removeCls('evidenzaBtnClusterDettVeicoloNuovo');
            }
        });


    },

    showMsgRiepilogoEquip: function(msg) {
        var msgRiepilogoPanel = Ext.ComponentQuery.query('#msgRiepilogoEquipDettVeicoloNuovoPanel')[0];
        var msgRiepilogoLabel = msgRiepilogoPanel.down('#msgRiepilogoEquipDettVeicoloNuovoLabel');
        msgRiepilogoLabel.setHtml(msg);

        var riepilogoButton = Ext.ComponentQuery.query('#riepilogoClusterDettVeicoloNuovoButton')[0];
        msgRiepilogoPanel.showBy(riepilogoButton, 'tr-br');
    },

    hideMsgRiepilogoEquip: function() {
        var msgRiepilogoPanel = Ext.ComponentQuery.query('#msgRiepilogoEquipDettVeicoloNuovoPanel')[0];
        msgRiepilogoPanel.hide();
    },

    checkSelEquipRicorsiva: function() {
        var equipStore = Ext.data.StoreManager.lookup('EquipClustersDettVeicoloNuovoStore');

        var popupEquipStore = Ext.data.StoreManager.lookup('PopupEquipDettVeicoloNuovoStore');
        popupEquipStore.removeAll();

        var openPopupEquipFlag = false;
        equipStore.each(function (item, index, length) {
            var equipModel = item;
            var statoEquip = equipModel.get('stato');

            if (statoEquip === 'OBB') {
                // E' presente un equipaggiamento a selezione ricorsiva, lo
                // aggiungo allo store della popup.
                popupEquipStore.add(equipModel);

                // A fine iterazione sullo store dovro' aprire la popup per
                // permettere all'utente la selezione dell'equipaggiamento.
                openPopupEquipFlag = true;
            }

            return true;
        });

        if (openPopupEquipFlag) {
            var popupEquipPanel = Ext.ComponentQuery.query('#popupEquipDettVeicoloNuovoPanel')[0];
            var popupEquipDataview = Ext.ComponentQuery.query('#popupEquipDettVeicoloNuovoDataView')[0];
            popupEquipDataview.deselectAll();

            Ext.Viewport.setMasked(popupEquipPanel);

            return true;
        } else {
            return false;
        }

    },

    loadMarche: function() {
        var marcaStore = Ext.data.StoreManager.lookup('MarcaRicercaNuovoStore');

        var indietroAllestimentoButton = Ext.ComponentQuery.query('#indietroAllestimentoRicNuovoButton')[0];
        indietroAllestimentoButton.setHidden(false);

        var ricercaForm = Ext.ComponentQuery.query('#ricercaNuovoForm')[0];

        var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaNuovoHidden')[0];
        marcaHidden.setValue('');

        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaNuovoHidden')[0];
        modelloHidden.setValue('');

        var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaNuovoHidden')[0];
        allestimentoHidden.setValue('');

        marcaStore.load({
            params: ricercaForm.getValues(),
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var button = Ext.ComponentQuery.query('#cercaRicNuovoButton')[0];
                    button.setText('Aggiorna ricerca');

                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }
                    var marcaCount = marcaStore.getCount();
                    this.showMarcaNumRisultati(marcaCount);

                    if (marcaCount == 1) {
                        var marcaModel = marcaStore.getAt(0);

                        var marcaHidden = Ext.ComponentQuery.query('#marcaRicercaNuovoHidden')[0];
                        marcaHidden.setValue(marcaModel.get('codice'));

                        var marcaDataview = Ext.ComponentQuery.query('#marcaRicNuovoRisultatoDataView')[0];
                        marcaDataview.select(marcaModel, false);

                        this.loadModelli();
                    }
                }
            },
            scope: this
        });

    },

    loadModelli: function() {
        //var marcaDataview = Ext.ComponentQuery.query('#marcaRicNuovoRisultatoDataView')[0];
        //var selMarcaModel = marcaDataview.getSelection()[0];
        //var marcaCodice = selMarcaModel.get('codice');

        var modelloStore = Ext.data.StoreManager.lookup('ModelloRicercaNuovoStore');

        var indietroAllestimentoButton = Ext.ComponentQuery.query('#indietroAllestimentoRicNuovoButton')[0];
        indietroAllestimentoButton.setHidden(false);

        var ricercaForm = Ext.ComponentQuery.query('#ricercaNuovoForm')[0];

        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaNuovoHidden')[0];
        modelloHidden.setValue('');

        var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaNuovoHidden')[0];
        allestimentoHidden.setValue('');

        modelloStore.load({
        //    params: Ext.Object.merge(
        //        {
        //            marca_codice: marcaCodice,
        //        },
            params: ricercaForm.getValues(),
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var button = Ext.ComponentQuery.query('#cercaRicNuovoButton')[0];
                    button.setText('Aggiorna ricerca');
                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }
                    var modelloCount = modelloStore.getCount();
                    this.showModelloNumRisultati(modelloCount);

                    if (modelloCount == 1) {
                        var modelloModel = modelloStore.getAt(0);

                        var modelloHidden = Ext.ComponentQuery.query('#modelloRicercaNuovoHidden')[0];
                        modelloHidden.setValue(modelloModel.get('codice'));

                        var modelloDataview = Ext.ComponentQuery.query('#modelloRicNuovoRisultatoDataView')[0];
                        modelloDataview.select(modelloModel, false);

                        this.loadAllestimenti();

                    } else {

                        var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
                        ricNuovoRisultatoContainer.animateActiveItem(
                            '#modelloRicNuovoRisultatoContainer',
                            {
                                type: 'slide',
                                direction:'left'
                            }
                        );
                    }
                }
            },
            scope: this
        });
    },

    loadAllestimenti: function() {
        var allestimentoStore = Ext.data.StoreManager.lookup('AllestimentoRicercaNuovoStore');

        var ricercaForm = Ext.ComponentQuery.query('#ricercaNuovoForm')[0];

        var allestimentoHidden = Ext.ComponentQuery.query('#allestimentoRicercaNuovoHidden')[0];
        allestimentoHidden.setValue('');

        // Leggo il codice del criterio di ordinamento
        var ordinamentoCombobox = Ext.ComponentQuery.query('#ordinamentoRicNuovoComboBox')[0];
        var ordinamentoCodice = ordinamentoCombobox.getValue();

        allestimentoStore.load({
            params: Ext.Object.merge(
                {
                    ordinamento_codice: ordinamentoCodice
                },
                ricercaForm.getValues()
            ),
            callback: function (records, operation, success) {
                if(!success){
                    Infocar.app.showLoadErrorMessage(operation);
                } else {
                    var button = Ext.ComponentQuery.query('#cercaRicNuovoButton')[0];
                    button.setText('Aggiorna ricerca');

                    var responseData = Ext.decode(operation.getResponse().responseText,false);

                    if(responseData.message !== null){
                        Ext.Msg.alert("Attenzione", responseData.message);
                    }

                    var allestimentoCount = allestimentoStore.getCount();
                    this.showAllestimentoNumRisultati(allestimentoCount);

                    var ricNuovoRisultatoContainer = Ext.ComponentQuery.query('#ricercaNuovoRisultatoContainer')[0];
                    ricNuovoRisultatoContainer.animateActiveItem(
                        '#allestimentoRicNuovoRisultatoContainer',
                        {
                            type: 'slide',
                            direction:'left'
                        }
                    );
                }
            },
            scope: this
        });

    }

});
